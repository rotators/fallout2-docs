*enums:
enum Distance : long
{
	unset                 = -1,
	stay_close            = 0, // the attacker will stay at a distance no more than 5 hexes from the player (behavior only for party members, defined in ai_move_steps_closer, cai_perform_distance_prefs)
	charge                = 1, // AI will always try to get close to its target before or after attack
	snipe                 = 2, // keep distance, when the distance between the attacker and the target decreases, the attacker will try to move away from the target to a distance of up to 10 hexes
	on_your_own           = 3, // no special behavior defined for this
	stay                  = 4  // the attacker will, if possible, stay at the hex where the combat started (behavior defined in ai_move_steps_closer, ai_move_away)
};

// presets for party members
enum Disposition : long
{
	none                  = -1,
	custom                = 0,
	coward                = 1,
	defensive             = 2,
	aggressive            = 3,
	berserk               = 4
};

enum AttackWho : long
{
	no_attack_mode        = -1,
	whomever_attacking_me = 0, // attack the target that the player is attacking (only for party members)
	strongest             = 1, // attack stronger targets (will always switch to stronger ones in combat)
	weakest               = 2, // attack weaker targets (will always switch to weaker ones in combat)
	whomever              = 3, // anyone, will attack the chosen target until it dies, or until retaliation occurs (combatai_check_retaliation_)
	closest               = 4, // only attack near targets
};

enum RunAway : long
{
	none                  = -1, // get the value from the cap.min_hp (in cai_get_min_hp_)
	coward                = 0,  // 0%
	finger_hurts          = 1,  // 25% of the lost amount of health
	bleeding              = 2,  // 40% of the lost amount of health
	not_feeling_good      = 3,  // 60% of the lost amount of health
	tourniquet            = 4,  // 75% of the lost amount of health
	never                 = 5   // 100%
};

enum WeaponPref : long
{
	unset                 = -1, // same as no_pref
	no_pref               = 0,  // Guns > ...
	melee                 = 1,
	melee_over_ranged     = 2,
	ranged_over_melee     = 3,
	ranged                = 4,
	unarmed               = 5,
	unarmed_over_thrown   = 6, // not available for party member in control panel
	random                = 7  // not available for party member in control panel
};

enum AreaAttack : long
{
	no_pref               = -1, // special logic for NPC (not available for party member in control panel)
	always                = 0,
	sometimes             = 1,  // use random value from cap.secondary_freq
	be_sure               = 2,  // 85% hit chance
	be_careful            = 3,  // 50% hit chance
	be_absolutely_sure    = 4,  // 95% hit chance
};

enum ChemUse : long
{
	unset                  = -1,
	clean                  = 0,
	stims_when_hurt_little = 1,
	stims_when_hurt_lots   = 2,
	sometimes              = 3,
	anytime                = 4,
	always                 = 5,
};

enum Animation : long
{
  ANIM_stand = 0,
  ANIM_walk = 1,
  ANIM_jump_begin = 2,
  ANIM_jump_end = 3,
  ANIM_climb_ladder = 4,
  ANIM_falling = 5,
  ANIM_up_stairs_right = 6,
  ANIM_up_stairs_left = 7,
  ANIM_down_stairs_right = 8,
  ANIM_down_stairs_left = 9,
  ANIM_magic_hands_ground = 10,
  ANIM_magic_hands_middle = 11,
  ANIM_magic_hands_up = 12,
  ANIM_dodge_anim = 13,
  ANIM_hit_from_front = 14,
  ANIM_hit_from_back = 15,
  ANIM_throw_punch = 16,
  ANIM_kick_leg = 17,
  ANIM_throw_anim = 18,
  ANIM_running = 19,
  ANIM_fall_back = 20,
  ANIM_fall_front = 21,
  ANIM_bad_landing = 22,
  ANIM_big_hole = 23,
  ANIM_charred_body = 24,
  ANIM_chunks_of_flesh = 25,
  ANIM_dancing_autofire = 26,
  ANIM_electrify = 27,
  ANIM_sliced_in_half = 28,
  ANIM_burned_to_nothing = 29,
  ANIM_electrified_to_nothing = 30,
  ANIM_exploded_to_nothing = 31,
  ANIM_melted_to_nothing = 32,
  ANIM_fire_dance = 33,
  ANIM_fall_back_blood = 34,
  ANIM_fall_front_blood = 35,
  ANIM_prone_to_standing = 36,
  ANIM_back_to_standing = 37,
  ANIM_take_out = 38,
  ANIM_put_away = 39,
  ANIM_parry_anim = 40,
  ANIM_thrust_anim = 41,
  ANIM_swing_anim = 42,
  ANIM_point = 43,
  ANIM_unpoint = 44,
  ANIM_fire_single = 45,
  ANIM_fire_burst = 46,
  ANIM_fire_continuous = 47,
  ANIM_fall_back_sf = 48,
  ANIM_fall_front_sf = 49,
  ANIM_bad_landing_sf = 50,
  ANIM_big_hole_sf = 51,
  ANIM_charred_body_sf = 52,
  ANIM_chunks_of_flesh_sf = 53,
  ANIM_dancing_autofire_sf = 54,
  ANIM_electrify_sf = 55,
  ANIM_sliced_in_half_sf = 56,
  ANIM_burned_to_nothing_sf = 57,
  ANIM_electrified_to_nothing_sf = 58,
  ANIM_exploded_to_nothing_sf = 59,
  ANIM_melted_to_nothing_sf = 60,
  ANIM_fire_dance_sf = 61,
  ANIM_fall_back_blood_sf = 62,
  ANIM_fall_front_blood_sf = 63,
  ANIM_called_shot_pic = 64,
};

enum MiscFlags : unsigned long
{
	Opened       = 0x00000001,
	CantUse      = 0x00000010, // determines whether the weapon can be used in combat (sfall flag)
	Locked       = 0x02000000,
	Jammed       = 0x04000000,
};

enum DamageFlag : unsigned long
{
	DAM_KNOCKED_OUT     = 0x1,
	DAM_KNOCKED_DOWN    = 0x2,
	DAM_CRIP_LEG_LEFT   = 0x4,
	DAM_CRIP_LEG_RIGHT  = 0x8,
	DAM_CRIP_ARM_LEFT   = 0x10,
	DAM_CRIP_ARM_RIGHT  = 0x20,
	DAM_BLIND           = 0x40,
	DAM_DEAD            = 0x80,
	DAM_HIT             = 0x100,
	DAM_CRITICAL        = 0x200,
	DAM_ON_FIRE         = 0x400,
	DAM_BYPASS          = 0x800,
	DAM_EXPLODE         = 0x1000,
	DAM_DESTROY         = 0x2000,
	DAM_DROP            = 0x4000,
	DAM_LOSE_TURN       = 0x8000,
	DAM_HIT_SELF        = 0x10000,
	DAM_LOSE_AMMO       = 0x20000,
	DAM_DUD             = 0x40000,
	DAM_HURT_SELF       = 0x80000,
	DAM_RANDOM_HIT      = 0x100000,
	DAM_CRIP_RANDOM     = 0x200000,
	DAM_BACKWASH        = 0x400000,
	DAM_PERFORM_REVERSE = 0x800000,
	// sfall flags
	DAM_KNOCKOUT_WOKEN  = 0x40000000, // internal for op_critter_state_
	DAM_PRESERVE_FLAGS  = 0x80000000  // used for attack_complex
};

enum DamageType
{
	DMG_normal       = 0,
	DMG_laser        = 1,
	DMG_fire         = 2,
	DMG_plasma       = 3,
	DMG_electrical   = 4,
	DMG_emp          = 5,
	DMG_explosion    = 6,
	DMG_BYPASS_ARMOR = 256,
	DMG_NOANIMATE    = 512,
};

enum Gender
{
  GENDER_MALE = 0,
  GENDER_FEMALE = 1,
};

// Some global variables referenced by engine
enum GlobalVar : long
{
  GVAR_PLAYER_REPUTATION = 0,
  GVAR_ENEMY_ARROYO = 7,
  GVAR_PLAYER_GOT_CAR = 18,
  GVAR_NUKA_COLA_ADDICT = 21,
  GVAR_BUFF_OUT_ADDICT = 22,
  GVAR_MENTATS_ADDICT = 23,
  GVAR_PSYCHO_ADDICT = 24,
  GVAR_RADAWAY_ADDICT = 25,
  GVAR_ALCOHOL_ADDICT = 26,
  GVAR_LOAD_MAP_INDEX = 27,
  GVAR_TOWN_REP_ARROYO = 47,
  GVAR_ADDICT_TRAGIC = 295,
  GVAR_ADDICT_JET = 296,
  GVAR_CAR_BLOWER = 439,
  GVAR_CAR_UPGRADE_FUEL_CELL_REGULATOR = 453,
  GVAR_NEW_RENO_CAR_UPGRADE = 455,
  GVAR_NEW_RENO_SUPER_CAR = 456,
  GVAR_MODOC_SHITTY_DEATH = 491,
  GVAR_FALLOUT_2 = 494,
  GVAR_CAR_PLACED_TILE = 633,
};

// Physical material type, used for items and tiles.
enum Material : long
{
  Glass = 0x0,
  Metal = 0x1,
  Plastic = 0x2,
  Wood = 0x3,
  Dirt = 0x4,
  Stone = 0x5,
  Cement = 0x6,
  Leather = 0x7
};

enum ObjType : char
{
  OBJ_TYPE_ITEM = 0,
  OBJ_TYPE_CRITTER = 1,
  OBJ_TYPE_SCENERY = 2,
  OBJ_TYPE_WALL = 3,
  OBJ_TYPE_TILE = 4,
  OBJ_TYPE_MISC = 5,
  OBJ_TYPE_SPATIAL = 6
};

enum ArtType : char
{
  OBJ_TYPE_INTRFACE   = 6,
  OBJ_TYPE_INVEN      = 7,
  OBJ_TYPE_HEAD       = 8,
  OBJ_TYPE_BACKGROUND = 9,
  OBJ_TYPE_SKILLDEX   = 10
};

enum Stat : long
{
	STAT_st = 0, // strength
	STAT_pe = 1, // perception
	STAT_en = 2, // endurance
	STAT_ch = 3, // charisma
	STAT_iq = 4, // intelligence
	STAT_ag = 5, // agility
	STAT_lu = 6, // luck

	// derived stats
	STAT_max_hit_points = 7,
	STAT_max_move_points = 8,
	STAT_ac = 9,
	STAT_unused = 10,
	STAT_melee_dmg = 11,
	STAT_carry_amt = 12,
	STAT_sequence = 13,
	STAT_heal_rate = 14,
	STAT_crit_chance = 15,
	STAT_better_crit = 16,
	STAT_dmg_thresh = 17,
	STAT_dmg_thresh_laser = 18,
	STAT_dmg_thresh_fire = 19,
	STAT_dmg_thresh_plasma = 20,
	STAT_dmg_thresh_electrical = 21,
	STAT_dmg_thresh_emp = 22,
	STAT_dmg_thresh_explosion = 23,
	STAT_dmg_resist = 24,
	STAT_dmg_resist_laser = 25,
	STAT_dmg_resist_fire = 26,
	STAT_dmg_resist_plasma = 27,
	STAT_dmg_resist_electrical = 28,
	STAT_dmg_resist_emp = 29,
	STAT_dmg_resist_explosion = 30,
	STAT_rad_resist = 31,
	STAT_poison_resist = 32,
	// poison_resist MUST be the last derived stat

	// non-derived stats
	STAT_age = 33,
	STAT_gender = 34,
	// gender MUST be the last non-derived stat

	STAT_current_hp = 35,
	STAT_current_poison = 36,
	STAT_current_rad = 37,

	STAT_real_max_stat = 38,
	STAT_base_count = 7
};

enum Perk : long
{
  PERK_bonus_awareness = 0,
  PERK_bonus_hth_attacks = 1,
  PERK_bonus_hth_damage = 2,
  PERK_bonus_move = 3,
  PERK_bonus_ranged_damage = 4,
  PERK_bonus_rate_of_fire = 5,
  PERK_earlier_sequence = 6,
  PERK_faster_healing = 7,
  PERK_more_criticals = 8,
  PERK_night_vision = 9,
  PERK_presence = 10,
  PERK_rad_resistance = 11,
  PERK_toughness = 12,
  PERK_strong_back = 13,
  PERK_sharpshooter = 14,
  PERK_silent_running = 15,
  PERK_survivalist = 16,
  PERK_master_trader = 17,
  PERK_educated = 18,
  PERK_healer = 19,
  PERK_fortune_finder = 20,
  PERK_better_criticals = 21,
  PERK_empathy = 22,
  PERK_slayer = 23,
  PERK_sniper = 24,
  PERK_silent_death = 25,
  PERK_action_boy = 26,
  PERK_mental_block = 27,
  PERK_lifegiver = 28,
  PERK_dodger = 29,
  PERK_snakeater = 30,
  PERK_mr_fixit = 31,
  PERK_medic = 32,
  PERK_master_thief = 33,
  PERK_speaker = 34,
  PERK_heave_ho = 35,
  PERK_friendly_foe = 36,
  PERK_pickpocket = 37,
  PERK_ghost = 38,
  PERK_cult_of_personality = 39,
  PERK_scrounger = 40,
  PERK_explorer = 41,
  PERK_flower_child = 42,
  PERK_pathfinder = 43,
  PERK_animal_friend = 44,
  PERK_scout = 45,
  PERK_mysterious_stranger = 46,
  PERK_ranger = 47,
  PERK_quick_pockets = 48,
  PERK_smooth_talker = 49,
  PERK_swift_learner = 50,
  PERK_tag = 51,
  PERK_mutate = 52,
  PERK_add_nuka = 53,
  PERK_add_buffout = 54,
  PERK_add_mentats = 55,
  PERK_add_psycho = 56,
  PERK_add_radaway = 57,
  PERK_weapon_long_range = 58,
  PERK_weapon_accurate = 59,
  PERK_weapon_penetrate = 60,
  PERK_weapon_knockback = 61,
  PERK_armor_powered = 62,
  PERK_armor_combat = 63,
  PERK_weapon_scope_range = 64,
  PERK_weapon_fast_reload = 65,
  PERK_weapon_night_sight = 66,
  PERK_weapon_flameboy = 67,
  PERK_armor_advanced_1 = 68,
  PERK_armor_advanced_2 = 69,
  PERK_add_jet = 70,
  PERK_add_tragic = 71,
  PERK_armor_charisma = 72,
  PERK_gecko_skinning_perk = 73,
  PERK_dermal_armor_perk = 74,
  PERK_dermal_enhancement_perk = 75,
  PERK_phoenix_armor_perk = 76,
  PERK_phoenix_enhancement_perk = 77,
  PERK_vault_city_inoculations_perk = 78,
  PERK_adrenaline_rush_perk = 79,
  PERK_cautious_nature_perk = 80,
  PERK_comprehension_perk = 81,
  PERK_demolition_expert_perk = 82,
  PERK_gambler_perk = 83,
  PERK_gain_strength_perk = 84,
  PERK_gain_perception_perk = 85,
  PERK_gain_endurance_perk = 86,
  PERK_gain_charisma_perk = 87,
  PERK_gain_intelligence_perk = 88,
  PERK_gain_agility_perk = 89,
  PERK_gain_luck_perk = 90,
  PERK_harmless_perk = 91,
  PERK_here_and_now_perk = 92,
  PERK_hth_evade_perk = 93,
  PERK_kama_sutra_perk = 94,
  PERK_karma_beacon_perk = 95,
  PERK_light_step_perk = 96,
  PERK_living_anatomy_perk = 97,
  PERK_magnetic_personality_perk = 98,
  PERK_negotiator_perk = 99,
  PERK_pack_rat_perk = 100,
  PERK_pyromaniac_perk = 101,
  PERK_quick_recovery_perk = 102,
  PERK_salesman_perk = 103,
  PERK_stonewall_perk = 104,
  PERK_thief_perk = 105,
  PERK_weapon_handling_perk = 106,
  PERK_vault_city_training_perk = 107,
  PERK_alcohol_hp_bonus1_perk = 108,
  PERK_alcohol_hp_bonus2_perk = 109,
  PERK_alcohol_hp_neg1_perk = 110,
  PERK_alcohol_hp_neg2_perk = 111,
  PERK_autodoc_hp_bonus1_perk = 112,
  PERK_autodoc_hp_bonus2_perk = 113,
  PERK_autodoc_hp_neg1_perk = 114,
  PERK_autodoc_hp_neg2_perk = 115,
  PERK_expert_excrement_expediter_perk = 116,
  PERK_weapon_knockout_perk = 117,
  PERK_jinxed_perk = 118,
  PERK_count = 119
};

enum Skill : long
{
  SKILL_SMALL_GUNS = 0,
  SKILL_BIG_GUNS = 1,
  SKILL_ENERGY_WEAPONS = 2,
  SKILL_UNARMED_COMBAT = 3,
  SKILL_MELEE = 4,
  SKILL_THROWING = 5,
  SKILL_FIRST_AID = 6,
  SKILL_DOCTOR = 7,
  SKILL_SNEAK = 8,
  SKILL_LOCKPICK = 9,
  SKILL_STEAL = 10,
  SKILL_TRAPS = 11,
  SKILL_SCIENCE = 12,
  SKILL_REPAIR = 13,
  SKILL_CONVERSANT = 14,
  SKILL_BARTER = 15,
  SKILL_GAMBLING = 16,
  SKILL_OUTDOORSMAN = 17,
  SKILL_count = 18
};

enum AttackSubType : long
{
	NONE                      = 0,
	UNARMED                   = 1,
	MELEE                     = 2,
	THROWING                  = 3,
	GUNS                      = 4
};

enum AttackType : long
{
	ATKTYPE_LWEAPON_PRIMARY   = 0,
	ATKTYPE_LWEAPON_SECONDARY = 1,
	ATKTYPE_RWEAPON_PRIMARY   = 2,
	ATKTYPE_RWEAPON_SECONDARY = 3,
	ATKTYPE_PUNCH             = 4,
	ATKTYPE_KICK              = 5,
	ATKTYPE_LWEAPON_RELOAD    = 6,
	ATKTYPE_RWEAPON_RELOAD    = 7,
	ATKTYPE_STRONGPUNCH       = 8,
	ATKTYPE_HAMMERPUNCH       = 9,
	ATKTYPE_HAYMAKER          = 10,
	ATKTYPE_JAB               = 11,
	ATKTYPE_PALMSTRIKE        = 12,
	ATKTYPE_PIERCINGSTRIKE    = 13,
	ATKTYPE_STRONGKICK        = 14,
	ATKTYPE_SNAPKICK          = 15,
	ATKTYPE_POWERKICK         = 16,
	ATKTYPE_HIPKICK           = 17,
	ATKTYPE_HOOKKICK          = 18,
	ATKTYPE_PIERCINGKICK      = 19
};

enum KillType : long
{
	KILL_TYPE_men             = 0,
	KILL_TYPE_women           = 1,
	KILL_TYPE_children        = 2,
	KILL_TYPE_super_mutant    = 3,
	KILL_TYPE_ghoul           = 4,
	KILL_TYPE_brahmin         = 5,
	KILL_TYPE_radscorpion     = 6,
	KILL_TYPE_rat             = 7,
	KILL_TYPE_floater         = 8,
	KILL_TYPE_centaur         = 9,
	KILL_TYPE_robot           = 10,
	KILL_TYPE_dog             = 11,
	KILL_TYPE_manti           = 12,
	KILL_TYPE_deathclaw       = 13,
	KILL_TYPE_plant           = 14,
	KILL_TYPE_gecko           = 15,
	KILL_TYPE_alien           = 16,
	KILL_TYPE_giant_ant       = 17,
	KILL_TYPE_big_bad_boss    = 18,
	KILL_TYPE_count           = 19
};

*structs:
MessageNode {
  long number;
  long flags;
  char* audio;
  char* message;
}

MessageList {
  long numMsgs;
  MessageNode* nodes;
}

GameObject {
	long id;
	long tile;
	long x;
	long y;
	long sx;
	long sy;
	long frm; // current frame
	long rotation;
	long artFid;
	long flags;
	long elevation;
	long invenSize;
	long invenMax;
}

GameObjectItem {
  char updatedFlags[4];
  // for weapons - ammo in magazine, for ammo - amount of ammo in last ammo pack
  long charges;
  // current type of ammo loaded in magazine
  long ammoPid;
  char gap_44[32];
}

GameItem {
  long id;
	long tile;
	long x;
	long y;
	long sx;
	long sy;
	long frm;
	long rotation;
	long artFid;
	long flags;
	long elevation;
	long invenSize;
	long invenMax;
}

InvenItem {
  GameItem *object;
  long count;
}

// Different from GameObject* in sfall
Critter {
	long id;
	long tile;
	long x;
	long y;
	long sx;
	long sy;
	long frm;
	long rotation;
	long artFid;
	long flags;
	long elevation;
	long invenSize;
	long invenMax;
	InvenItem* invenTable;

  char updatedFlags[4];
  // for weapons - ammo in magazine, for ammo - amount of ammo in last ammo pack
  long charges;
  // current type of ammo loaded in magazine
  long ammoPid;
  char gap_44[32];

  long reaction;
  // 1 - combat, 2 - enemies out of sight, 4 - running away
  long combatState;
  // aka action points
  long movePoints;
  long damageFlags;
  long damageLastTurn;
  long aiPacket;
  long teamNum;
  long whoHitMe;
  long health;
  long rads;
  long poison;

	DWORD protoId;
	long cid;
	long lightDistance;
	long lightIntensity;
	DWORD outline;
	long scriptId;
	Critter* owner;
	long scriptIndex;
}

DbFile {
	long fileType;
	DWORD* handle;
};

ElevatorExit {
	long id;
	long elevation;
	long tile;
};

FrmFile {
	long id;
	short fps;
	short actionFrame;
	short frames;
	short xshift[6];
	short yshift[6];
	long oriFrameOffset[6];
	long frameAreaSize;
	short width;
	short height;
	long frameSize;
	short xoffset;
	short yoffset;
	BYTE pixels[2880];
};

FrmHeaderData {
	DWORD version;        // version num
	WORD fps;             // frames per sec
	WORD actionFrame;
	WORD numFrames;       // number of frames per direction
	WORD xCentreShift[6]; // shift in the X direction, of frames with orientations [0-5]
	WORD yCentreShift[6]; // shift in the Y direction, of frames with orientations [0-5]
	DWORD oriOffset[6];   // offset of first frame for direction [0-5] from begining of frame area
	DWORD frameAreaSize;  // size of all frames area
};

FrmFrameData {
	WORD width;
	WORD height;
	DWORD size;   // width * height
	WORD x;
	WORD y;
	BYTE data[1]; // begin frame image data
};

FrmData {
	FrmHeaderData header;
	FrmFrameData frame;
};

SkillInfo {
	char* name;
	char* description;
	long attr;
	long image;
	long base;
	long statMulti;
	long statA;
	long statB;
	long skillPointMulti;
	// Default experience for using the skill: 25 for Lockpick, Steal, Traps, and First Aid, 50 for Doctor, and 100 for Outdoorsman.
	long experience;
	// 1 for Lockpick, Steal, Traps; 0 otherwise
	long f;
};

StatInfo {
	char* dame;
	char* description;
	long image;
	long minValue;
	long maxValue;
	long defaultValue;
};

TraitInfo {
	char* name;
	char* description;
	long image;
};

PathNode {
	char* path;
	DWORD* pDat;
	long isDat;
	PathNode* next;
};

RECT {
  long left;
  long top;
  long right;
  long bottom;
}

Window {
	long wID; // window position in the _window_index array
	long flags;
	RECT wRect;
	long  width;
	long  height;
	long  clearColour;
	long  randX;   // not used by engine
	long* randY;   // used by sfall for additional surfaces
	BYTE* surface; // bytes frame data ref to palette
	long* buttonsList;
	long  buttonT1; // buttonptr?
	long  buttonT2;
	long* menuBar;
};

RectList {
	RECT wRect;
	RectList* nextRect;
};

Program {
	const char* fileName; // path and file name of the script "scripts\*.int"
	long *codeStackPtr;
	long field_8;
	long field_C;
	long codePosition;  // position in the code stack when reading script opcodes
	long field_14;      // unused?
	long field_18;      // unused?
	long *dStackPtr;
	long *aStackPtr;
	long *dStackOffs;
	long *aStackOffs;
	long field_2C;
	long *stringRefPtr;
	long *procTablePtr;
	long *codeStack;    // same as codeStackPtr
	long savedEnv[12];  // saved register values
	long field_6C;      // unused?
	long field_70;      // unused?
	long field_74;      // unused?
	long timerTick;     // unused?
	long func_7C;       // always null?
	short flags;
	short fetchOpcode;
	long currentScriptWin; // current window for executing script
	long shouldRemove;
};

MessageList {
	long numMsgs;
	MessageNode *nodes;
};

Proto {
	long pid;
	long messageNum;
	long fid;
	// range 0-8 in hexes
	long lightDistance;
	// range 0 - 65536
	long lightIntensity;
}

ProtoTile {
	long pid;
	long messageNum;
	long fid;
	// range 0-8 in hexes
	long lightDistance;
	// range 0 - 65536
	long lightIntensity;
	long scriptId;
	Material material;
}

ScriptInstance {
	long id; // same as sid
	long next;
	long elevationAndTile; // first 3 bits - elevation, rest - tile number
	long spatialRadius;
	long flags;
	long scriptIdx; // script index in scripts.lst?
	Program* program;
	long ownerObjectId;
	long localVarOffset; // data
	long numLocalVars;
	long returnValue;
	long action;
	long fixedParam;
	GameObject* selfObject;
	GameObject* sourceObject;
	GameObject* targetObject;
	long actionNum;
	long scriptOverrides;
	long field_48; // unknown
	long howMuch;
	long field_50; // unused
	long procedureTable[28];
	long gap[7];
};

AIcap {
	const char* name;
	long packet_num;
	long max_dist;
	long min_to_hit;
	long min_hp;
	long aggression; // unused
	long hurt_too_much;
	long secondary_freq;
	long called_freq;
	long font;
	long color;
	long outline_color;
	long chance_message;
	long combat_message_data[24];
	AreaAttack area_attack_mode;
	RunAway run_away_mode;
	WeaponPref pref_weapon;
	Distance distance;
	AttackWho attack_who;
	ChemUse chem_use;
	long chem_primary_desire[3];
	Disposition disposition;
	const char* body_type;    // unused
	const char* general_type; // unused
};

BlendColorTableData {
	BYTE colors[256];
	BlendData data[16]; // [0] - without blending (filled values from 0 to 255)
};

*functions:
0x410010 abil_init
0x410058 abil_resize
0x410094 abil_free
0x4100A8 abil_find
0x410130 abil_search
0x410154 abil_insert
0x41021C abil_delete
0x41026C abil_copy
0x4102B0 abil_load
0x4102EC abil_read_ability_data
0x410378 abil_save
0x4103B8 abil_write_ability_data
0x410410 switch_dude
0x410468 action_knockback
0x410568 action_blood
0x41060C DWORD pick_death(GameObject* attacker, GameObject* target, GameObject* weapon, DWORD amount, DWORD anim, DWORD hitFromBack)
0x410814 check_death
0x4108C8 internal_destroy
0x4108D0 show_damage_to_object
0x410E24 show_death
0x410F48 show_damage_target
0x410FEC show_damage_extras
0x4110AC show_damage
0x411224 action_attack
0x4112B4 action_melee
0x4115CC throw_change_fid
0x411600 action_ranged
0x411D50 use_an_object
0x411D68 is_next_to
0x411DB4 action_climb_ladder
0x411F2C action_use_an_item_on_object
0x412114 action_use_an_object
0x412120 get_an_object
0x412134 action_get_an_object
0x4123E8 action_loot_container
0x4124E0 action_skill_use
0x412500 action_use_skill_in_combat_error
0x41255C action_use_skill_on
0x4129CC pick_object
0x412A54 pick_hex
0x412BC4 is_hit_from_front
0x412BEC can_see
0x412C1C pick_fall
0x412CE4 action_explode_running
0x412CF4 action_explode
0x413144 report_explosion
0x4132C0 finished_explosion
0x4132CC compute_explosion_damage
0x413330 action_talk_to
0x413420 can_talk_to
0x413488 talk_to
0x413494 action_dmg
0x41363C report_dmg
0x413660 compute_dmg_damage
0x4136EC action_can_be_pushed
0x413790 action_push_critter
0x413970 action_can_talk_to
0x4139C0 autorun_mutex_create
0x413A00 autorun_mutex_destroy
0x413A20 anim_init
0x413A40 anim_reset
0x413AB8 anim_exit
0x413AF4 DWORD register_begin(DWORD regType)
0x413B80 anim_free_slot
0x413C20 register_priority
0x413C4C register_clear
0x413CCC DWORD register_end()
0x413D6C anim_preload
0x413D98 anim_cleanup
0x413E2C check_registry
0x413EC8 anim_busy
0x413F5C DWORD register_object_move_to_object(GameObject* source, GameObject* target, DWORD distance, DWORD delay)
0x41405C DWORD register_object_run_to_object(GameObject* source, GameObject* target, DWORD distance, DWORD delay)
0x414294 register_object_move_to_tile
0x414394 register_object_run_to_tile
0x4145D0 register_object_move_straight_to_tile
0x4146C4 register_object_animate_and_move_straight
0x4147B8 register_object_move_on_stairs
0x4148F0 register_object_check_falling
0x4149D0 DWORD register_object_animate(GameObject* object, DWORD anim, DWORD delay)
0x414AA8 register_object_animate_reverse
0x414B7C DWORD register_object_animate_and_hide(GameObject* object, DWORD anim, DWORD delay)
0x414C50 DWORD register_object_turn_towards(GameObject* object, DWORD tileNum, DWORD nothing)
0x414CC8 DWORD register_object_inc_rotation(GameObject* object)
0x414D38 DWORD register_object_dec_rotation(GameObject* object)
0x414DA8 DWORD register_object_erase(GameObject* object)
0x414E20 DWORD register_object_must_erase(GameObject* object)
0x414E98 void register_object_call(DWORD* target, DWORD* source, void* func, DWORD delay)
0x414F20 register_object_call3
0x414FAC register_object_must_call
0x415034 register_object_fset
0x4150A8 DWORD register_object_funset(GameObject* object, DWORD action, DWORD delay)
0x41511C register_object_flatten
0x41518C DWORD register_object_change_fid(GameObject* object, DWORD artFid, DWORD delay)
0x415238 DWORD register_object_take_out(GameObject* object, DWORD holdFrameId, DWORD nothing)
0x415334 DWORD register_object_light(GameObject* object, DWORD lightRadius, DWORD delay)
0x4153A8 register_object_outline
0x41541C DWORD register_object_play_sfx(GameObject* object, char* sfxName, DWORD delay)
0x4154C4 register_object_animate_forever
0x415598 register_ping
0x4156A8 anim_set_check
0x415B44 anim_set_continue
0x415B9C anim_set_end
0x415E24 DWORD anim_can_use_door(GameObject* source, GameObject* object)
0x415EE8 make_path
0x415EFC DWORD make_path_func(GameObject* objectFrom, DWORD tileFrom, DWORD tileTo, char* pathDataBuffer, DWORD checkTileTo, void* blockingFunc)
0x41633C idist
0x416360 DWORD tile_idistance(DWORD sourceTile, DWORD targetTile)
0x4163AC make_straight_path
0x4163C8 DWORD make_straight_path_func(GameObject* objFrom, DWORD tileFrom, DWORD tileTo, void* arrayPtr, DWORD* outObject, DWORD flags, void* blockingFunc)
0x4167F8 anim_move_to_object
0x41695C make_stair_path
0x416CFC anim_move_to_tile
0x416DFC anim_move
0x416F54 anim_move_straight_to_tile
0x41712C anim_move_on_stairs
0x417248 check_for_falling
0x417360 object_move
0x4177C0 object_straight_move
0x4179B8 anim_animate
0x417B30 object_animate
0x417F18 object_anim_compact
0x417FFC check_move
0x4180B4 dude_move
0x41810C dude_run
0x418168 dude_fidget
0x418378 dude_stand
0x418574 dude_standup
0x4185B8 anim_turn_towards
0x4185EC anim_adj_rotation
0x41862C anim_hide
0x418660 anim_change_fid
0x4186CC anim_stop
0x418708 check_gravity
0x418794 compute_tpf
0x418840 art_init
0x418EBC art_exit
0x418F1C art_dir
0x418F34 art_get_disable
0x418F50 art_toggle_disable
0x418F64 art_total
0x418F7C art_head_fidgets
0x418FFC scale_art
0x419160 FrmHeaderData* art_ptr_lock(DWORD frmId, DWORD* lockPtr)
0x419188 unsigned char* art_ptr_lock_data(DWORD frmId, DWORD frameNum, DWORD rotation, DWORD* lockPtr)
0x4191CC unsigned char* art_lock(DWORD frmId, DWORD* lockPtr, DWORD* widthOut, DWORD* heightOut)
0x419260 DWORD art_ptr_unlock(DWORD lockId)
0x41927C void art_flush()
0x419294 art_discard
0x4192B0 art_get_base_name
0x419314 art_get_code
0x419428 char* art_get_name(DWORD artFID)
0x419664 art_read_lst
0x419760 art_frame_fps
0x419778 art_frame_action_frame
0x41978C art_frame_max_frame
0x4197A0 DWORD art_frame_width(FrmHeaderData* frm, DWORD frameNum, DWORD rotation)
0x4197B8 DWORD art_frame_length(FrmHeaderData* frm, DWORD frameNum, DWORD rotation)
0x4197D4 art_frame_width_length
0x419820 art_frame_hot
0x41984C art_frame_offset
0x419870 unsigned char* art_frame_data(FrmHeaderData* frm, DWORD frameNum, DWORD rotation)
0x419880 FrmFrameData* frame_ptr(FrmHeaderData* frm, DWORD frame, DWORD direction)
0x4198C8 bool art_exists(DWORD artFid)
0x419930 art_fid_valid
0x419998 art_alias_num
0x4199AC artCritterFidShouldRun
0x4199D4 art_alias_fid
0x419A78 art_data_size
0x419B78 art_data_load
0x419C80 art_data_free
0x419C88 DWORD art_id(DWORD artType, DWORD lstIndex, DWORD animCode, DWORD weaponCode, DWORD directionCode)
0x419D60 art_readSubFrameData
0x419E1C art_readFrameData
0x419EC0 DWORD load_frame(char* filename, FrmFile** frmPtr)
0x419FC0 load_frame_into
0x41A070 art_writeSubFrameData
0x41A138 art_writeFrameData
0x41A1E8 save_frame
0x41A2B0 defaultCompressionFunc
0x41A2D0 decodeRead
0x41A2EC audioOpen
0x41A50C audioCloseFile
0x41A574 audioRead
0x41A5E0 audioSeek
0x41A78C audioFileSize
0x41A7A8 audioTell
0x41A7C4 audioWrite
0x41A7D4 initAudio
0x41A818 audioClose
0x41A850 defaultCompressionFunc__
0x41A870 decodeRead_
0x41A88C audiofOpen
0x41AAA0 audiofCloseFile
0x41AB08 audiofRead
0x41AB74 audiofSeek
0x41AD20 audiofFileSize
0x41AD3C audiofTell
0x41AD58 audiofWrite
0x41AD68 initAudiof
0x41ADAC audiofClose
0x41B7F4 automap_init
0x41B808 automap_reset
0x41B81C automap_exit
0x41B87C automap_load
0x41B898 automap_save
0x41B8B4 automapDisplayMap
0x41B8BC automap
0x41BD1C draw_top_down_map
0x41C004 draw_top_down_map_pipboy
0x41C0F0 automap_pip_save
0x41C844 WriteAM_Entry
0x41C8CC AM_ReadEntry
0x41CAD8 WriteAM_Header
0x41CB50 AM_ReadMainHeader
0x41CBA4 decode_map_data
0x41CC98 am_pip_init
0x41CD34 YesWriteIndex
0x41CD6C copy_file_data
0x41CE74 ReadAMList
0x41CF20 dialog_out
0x41DE90 file_dialog
0x41EA78 save_file_dialog
0x41FBDC PrntFlist
0x41FCC0 cache_init
0x41FD4C cache_resize
0x41FD50 cache_exit
0x41FDC0 cache_query
0x41FDE8 cache_lock
0x41FEF4 cache_lock_alias
0x4200B8 cache_unlock
0x4200EC cache_discard
0x42012C cache_flush
0x420184 cache_size
0x42019C cache_stats
0x4201C0 cache_create_list
0x420384 cache_destroy_list
0x4203AC cache_add
0x4205E8 cache_insert
0x420654 cache_find
0x4206C0 cache_create_item
0x420708 cache_init_item
0x420740 cache_destroy_item
0x420764 cache_unlock_all
0x4207D4 cache_reset_counter
0x42084C cache_make_room
0x42099C cache_purge
0x420A40 cache_resize_array
0x420A74 cache_compare_make_room
0x420AE8 cache_compare_reset_counter
0x420CC0 combat_init
0x420DA0 combat_reset
0x420E14 combat_exit
0x420E24 find_cid
0x420E4C combat_load
0x421244 combat_save
0x4213E8 combat_safety_invalidate_weapon
0x4213FC DWORD combat_safety_invalidate_weapon_func(GameObject* source, GameObject* weapon, DWORD hitMode, GameObject* targetA, DWORD* outSafeRange, GameObject* targetB)
0x4217BC combatTestIncidentalHit
0x4217D4 combat_whose_turn
0x4217E8 combat_data_init
0x4217FC combatInitAIInfoList
0x421850 combatCopyAIInfo
0x421880 combatAIInfoGetFriendlyDead
0x4218AC combatAIInfoSetFriendlyDead
0x4218EC combatAIInfoGetLastTarget
0x421918 combatAIInfoSetLastTarget
0x42196C combatAIInfoGetLastItem
0x421998 combatAIInfoSetLastItem
0x4219CC combatAIInfoGetLastMove
0x421A00 combatAIInfoSetLastMove
0x421A34 combat_begin
0x421C8C combat_begin_extra
0x421D18 combat_update_critters_in_los
0x421D50 combat_update_critter_outline_for_los
0x421EFC combat_over
0x422194 combat_over_from_load
0x4221B4 combat_give_exps
0x4222A8 combat_add_noncoms
0x422374 combat_in_range
0x4223C8 compare_faster
0x42243C combat_sequence_init
0x422580 combat_sequence
0x422694 combat_end
0x4227DC combat_turn_run
0x4227F4 combat_input
0x42290C combat_end_turn
0x422914 combat_set_move_all
0x42299C DWORD combat_turn(GameObject* critter, DWORD isDudeTurn)
0x422C60 combat_should_end
0x422D2C combat
0x422EC4 combat_ctd_init
0x422F3C combat_attack
0x423104 combat_bullet_start
0x423128 check_ranged_miss
0x423284 shoot_along_path
0x423488 compute_spray
0x423714 correctAttackForPerks
0x42378C compute_attack
0x423C10 compute_explosion_on_extras
0x423EB4 attack_crit_success
0x424088 attackFindInvalidFlags
0x4240DC attack_crit_failure
0x42432C do_random_cripple
0x42436C DWORD determine_to_hit(GameObject* source, GameObject* target, DWORD bodyPart, DWORD hitMode)
0x424380 determine_to_hit_no_range
0x424394 determine_to_hit_from_tile
0x4243A8 determine_to_hit_func
0x4247B8 compute_damage
0x424BAC death_checks
0x424C04 apply_damage
0x424EE8 void check_for_death(GameObject* critter, DWORD amountDamage, DWORD* flags)
0x424F2C set_new_results
0x425020 damage_object
0x425170 combat_display
0x425A9C combat_display_hit
0x425BA4 combat_display_flags
0x425E3C combat_anim_begin
0x425E80 combat_anim_finished
0x425FBC combat_standup
0x42603C print_tohit
0x42612C combat_get_loc_name
0x4261B4 draw_loc_off
0x426218 get_called_shot_location
0x426614 combat_check_bad_shot
0x426744 combat_to_hit
0x4267CC combat_attack_this
0x426AA8 combat_outline_on
0x426BC0 combat_outline_off
0x426C64 combat_highlight_change
0x426CC4 combat_is_shot_blocked
0x426D94 combat_player_knocked_out_by
0x426DB8 combat_explode_scenery
0x426DDC combat_delete_critter
0x426EC4 combatKillCritterOutsideCombat
0x426F00 parse_hurt_str
0x426FA4 cai_match_str_to_list
0x426FE0 cai_init_cap
0x42703C combat_ai_init
0x4279F8 combat_ai_reset
0x4279FC combat_ai_exit
0x427AD8 combat_ai_load
0x427B50 combat_ai_save
0x427BC8 cai_cap_load
0x427E1C cai_cap_save
0x428058 combat_ai_num
0x428060 combat_ai_name
0x4280B4 AIcap* ai_cap(GameObject* critter)
0x42811C ai_cap_from_packet
0x428184 ai_get_burst_value
0x428190 ai_get_run_away_value
0x4281FC ai_get_weapon_pref_value
0x428208 ai_get_distance_pref_value
0x428214 ai_get_attack_who_value
0x428220 ai_get_chem_use_value
0x42822C ai_set_burst_value
0x428248 ai_set_run_away_value
0x4282D0 ai_set_weapon_pref_value
0x4282EC ai_set_distance_pref_value
0x428308 ai_set_attack_who_value
0x428324 ai_set_chem_use_value
0x428340 ai_get_disposition
0x428354 ai_set_disposition
0x428398 DWORD ai_magic_hands(GameObject* source, GameObject* object, DWORD msgNumber)
0x428480 ai_check_drugs
0x428868 ai_run_away
0x42899C ai_move_away
0x428AC4 ai_find_friend
0x428B1C compare_nearer
0x428B74 ai_sort_list_distance
0x428B8C compare_strength
0x428BD0 ai_sort_list_strength
0x428BE4 compare_weakness
0x428C28 ai_sort_list_weakness
0x428C3C ai_find_nearest_team
0x428CF4 ai_find_nearest_team_in_combat
0x428DB0 ai_find_attackers
0x428F4C ai_danger_source
0x4291C4 caiSetupTeamCombat
0x429210 caiTeamCombatInit
0x4292C0 caiTeamCombatExit
0x4292D4 DWORD ai_have_ammo(GameObject* critter, GameObject* item, GameObject** outAmmo)
0x42938C caiHasWeapPrefType
0x4293BC GameObject* ai_best_weapon(GameObject* source, GameObject* prevItem, GameObject* checkItem, GameObject* target)
0x4298EC bool ai_can_use_weapon(GameObject* critter, GameObject* item, DWORD hitMode)
0x4299A0 GameObject* ai_search_inven_weap(GameObject* source, DWORD apCheck, GameObject* target)
0x429A6C ai_search_inven_armor
0x429B44 ai_can_use_drug
0x429C18 GameObject* ai_search_environ(GameObject* critter, DWORD itemType)
0x429D60 GameObject* ai_retrieve_object(GameObject* critter, GameObject* item)
0x429DB4 DWORD ai_pick_hit_mode(GameObject* source, GameObject* item, GameObject* target)
0x429FC8 ai_move_steps_closer
0x42A1C0 ai_move_closer
0x42A1D4 cai_retargetTileFromFriendlyFire
0x42A410 cai_retargetTileFromFriendlyFireSubFunc
0x42A518 cai_attackWouldIntersect
0x42A5B8 ai_switch_weapons
0x42A670 ai_called_shot
0x42A748 ai_attack
0x42A7D8 ai_try_attack
0x42AE90 cAIPrepWeaponItem
0x42AECC cai_attempt_w_reload
0x42AF78 combat_ai_begin
0x42AFBC combat_ai_over
0x42AFDC cai_perform_distance_prefs
0x42B100 cai_get_min_hp
0x42B130 combat_ai
0x42B3FC combatai_want_to_join
0x42B4A8 combatai_want_to_stop
0x42B504 combatai_switch_team
0x42B5D4 combat_ai_set_ai_packet
0x42B634 combatai_msg
0x42B80C void ai_print_msg(GameObject* object, DWORD mode)
0x42B868 combat_ai_random_target
0x42B90C combatai_rating
0x42B9D4 combatai_check_retaliation
0x42BA04 DWORD is_within_perception(GameObject* source, GameObject* target)
0x42BB34 combatai_load_messages
0x42BBD8 combatai_unload_messages
0x42BBF0 combatai_refresh_messages
0x42BC60 combatai_notify_onlookers
0x42BCD4 combatai_notify_friends
0x42BD28 combatai_delete_critter
0x42BD90 config_init
0x42BDBC config_exit
0x42BE38 config_cmd_line_parse
0x42BF48 config_get_string
0x42BF90 config_set_string
0x42C05C config_get_value
0x42C090 config_get_values
0x42C160 config_set_value
0x42C190 config_set_values
0x42C280 config_load
0x42C324 config_save
0x42C4BC config_parse_line
0x42C594 config_split_line
0x42C638 config_add_section
0x42C698 config_strip_white_space
0x42C718 config_get_double
0x42C74C config_set_double
0x42C790 counter_on
0x42C7D4 counter_off
0x42C7F4 counter
0x42C860 credits
0x42CE6C credits_get_next_line
0x42CF50 critter_init
0x42CFE4 critter_reset
0x42D004 critter_exit
0x42D01C critter_load
0x42D058 critter_save
0x42D094 critter_copy
0x42D0A8 char* critter_name(GameObject* critter)
0x42D138 void critter_pc_set_name(char* newName)
0x42D170 critter_pc_reset_name
0x42D18C critter_get_hits
0x42D1A4 critter_adjust_hits
0x42D1F8 critter_get_poison
0x42D210 critter_adjust_poison
0x42D318 critter_check_poison
0x42D38C critter_get_rads
0x42D3A4 critter_adjust_rads
0x42D4F4 critter_check_rads
0x42D618 get_rad_damage_level
0x42D624 clear_rad_damage
0x42D63C process_rads
0x42D740 critter_process_rads
0x42D7A0 critter_load_rads
0x42D7FC critter_save_rads
0x42D82C critter_get_base_damage_type
0x42D860 critter_kill_count_clear
0x42D878 critter_kill_count_inc
0x42D8A8 critter_kill_count
0x42D8C0 critter_kill_count_load
0x42D8F0 critter_kill_count_save
0x42D920 DWORD critter_kill_count_type(GameObject* critter)
0x42D974 critter_kill_name
0x42D9B4 critter_kill_info
0x42D9F4 critter_heal_hours
0x42DA54 critterClearObjDrugs
0x42DA64 critter_kill
0x42DCB8 critter_kill_exps
0x42DCDC critter_is_active
0x42DD18 DWORD critter_is_dead(GameObject* critter)
0x42DD58 critter_is_crippled
0x42DD80 critter_is_prone
0x42DDC4 DWORD critter_body_type(GameObject* critter)
0x42DE10 critter_load_data
0x42DE58 pc_load_data
0x42DF70 critter_read_data
0x42E044 critter_save_data
0x42E08C pc_save_data
0x42E174 critter_write_data
0x42E220 pc_flag_off
0x42E26C void pc_flag_on(DWORD flag)
0x42E2B0 pc_flag_toggle
0x42E2F8 DWORD is_pc_flag(DWORD flag)
0x42E32C critter_sneak_check
0x42E3E4 critter_sneak_clear
0x42E3F4 DWORD is_pc_sneak_working()
0x42E424 critter_wake_up
0x42E460 critter_wake_clear
0x42E4C0 critter_set_who_hit_me
0x42E564 critter_can_obj_dude_rest
0x42E62C critter_compute_ap_from_distance
0x42E66C DWORD critterIsOverloaded(GameObject* critter)
0x42E690 critter_is_fleeing
0x42E6AC critter_flag_check
0x42E6F0 critter_flag_set
0x42E71C critter_flag_unset
0x42E74C critter_flag_toggle
0x42E780 cycle_init
0x42E8CC cycle_reset
0x42E90C cycle_exit
0x42E930 cycle_disable
0x42E93C cycle_enable
0x42E948 cycle_is_enabled
0x42E950 change_cycle_speed
0x42E974 get_cycle_speed
0x42E97C cycle_colors
0x42EE70 defaultMangleName
0x42EE74 datafileSetFilenameFunc
0x42EE7C setBitmapLoadFunc
0x42EE84 datafileConvertData
0x42EEF8 datafileConvertDataVGA
0x42EF60 loadRawDataFile
0x42EFCC loadDataFile
0x42EFF4 load256Palette
0x42F024 trimBuffer
0x42F0E4 datafileGetPalette
0x42F0EC datafileLoadBlock
0x42F170 dialogRegisterOptionCallback
0x42F178 replyAddNew
0x42F434 getReply
0x42F4C0 replyAddOption
0x42F624 replyAddOptionProc
0x42F714 optionFree
0x42F754 replyFree
0x42F858 addWindow
0x42F928 windowTitleMessage
0x42FB94 endDialog
0x42FBFC findEnding
0x42FC58 wordWrap
0x42FC70 printLine
0x42FCF0 printStr
0x42FD84 windowDrawLines
0x430074 doReply
0x430104 abortReply
0x430180 endReply
0x4301E8 drawStr
0x430268 doOptions
0x430A34 tryMovie
0x430A38 tryCombine
0x430A94 executeReply
0x430B38 executeOption
0x430CEC doDialog
0x430D40 dialogStart
0x430DB8 dialogRestart
0x430DE4 dialogGotoReply
0x430E84 dialogTitle
0x430EFC dialogReply
0x430F04 dialogOption
0x430F38 dialogOptionProc
0x430F6C dialogOptionUserData
0x430FA0 dialogOptionProcUserData
0x430FD4 dialogMessage
0x431088 dialogGo
0x431184 dialogGetExitPoint
0x431198 dialogQuit
0x4311B8 dialogSetOptionWindow
0x4311E0 dialogSetReplyWindow
0x431208 dialogSetBorder
0x431218 dialogSetScrollUp
0x4312C0 dialogSetScrollDown
0x431368 dialogSetSpacing
0x431370 dialogSetOptionColor
0x4313C8 dialogSetReplyColor
0x431420 dialogSetOptionFlags
0x431434 dialogClose
0x431518 dialogGetDialogDepth
0x431520 dialogRegisterWinDrawCallbacks
0x431530 dialogToggleMediaFlag
0x431554 dialogGetMediaFlag
0x431610 display_init
0x431800 display_reset
0x43184C display_exit
0x43186C void display_print(char* msg)
0x431A2C display_clear
0x431A78 display_redraw
0x431B70 display_scroll_up
0x431B9C display_scroll_down
0x431BC8 display_arrow_up
0x431BD4 display_arrow_down
0x431BE0 display_arrow_restore
0x431BEC display_disable
0x431C14 display_enable
0x431DF8 editor_design
0x4329EC CharEditStart
0x433AA8 CharEditEnd
0x433BEC RstrBckgProc
0x433C0C CharEditInit
0x433C6C get_input_str
0x434060 isdoschar
0x4340D0 strmfe
0x43410C DrawFolder
0x434238 list_perks
0x434498 kills_list_comp
0x4344A4 ListKills
0x4345DC PrintBigNum
0x434920 PrintLevelWin
0x434B38 PrintBasicStat
0x434F18 PrintGender
0x43501C PrintAgeBig
0x435118 PrintBigname
0x43527C ListDrvdStats
0x436154 ListSkills
0x4365AC DrawInfoWin
0x436C4C NameWindow
0x436F70 PrintName
0x436FEC AgeWindow
0x437664 SexWindow
0x4379BC StatButton
0x437C08 OptionWindow
0x4390B4 bool db_access(char* fileName)
0x4390D0 Save_as_ASCII
0x43A4BC ResetScreen
0x43A55C AddSpaces
0x43A58C AddDots
0x43A5BC RegInfoAreas
0x43A79C CheckValidPlayer
0x43A7DC SavePlayer
0x43A8BC RestorePlayer
0x43A9CC itostndn
0x43AAEC DrawCard
0x43AE3C XltPerk
0x43AE84 FldrButton
0x43AF40 InfoButton
0x43B230 SliderBtn
0x43B64C tagskl_free
0x43B67C TagSkillSelect
0x43B8A8 ListTraits
0x43BAE8 get_trait_count
0x43BB0C TraitSelect
0x43BCE0 list_karma
0x43C1B0 editor_save
0x43C1E0 editor_load
0x43C20C editor_reset
0x43C228 UpdateLevel
0x43C398 RedrwDPrks
0x43C4F0 perks_dialog
0x43CACC InputPDLoop
0x43D0BC ListDPerks
0x43D2F8 RedrwDMPrk
0x43D668 RedrwDMTagSkl
0x43D6F8 Add4thTagSkill
0x43D81C ListNewTagSkills
0x43D960 ListMyTraits
0x43DB48 name_sort_comp
0x43DB54 DrawCard2
0x43DE94 push_perks
0x43DEBC pop_perks
0x43DF24 PerkCount
0x43DF50 is_supper_bonus
0x43DF8C folder_init
0x43E090 folder_exit
0x43E0D4 folder_scroll
0x43E200 folder_clear
0x43E28C DWORD folder_print_seperator(char* text)
0x43E3D8 DWORD folder_print_line(char* text)
0x43E470 folder_print_kill
0x43E5C4 karma_vars_init
0x43E764 karma_vars_exit
0x43E78C karma_vars_qsort_compare
0x43E798 general_reps_init
0x43E914 general_reps_exit
0x43E93C general_reps_qsort_compare
0x43EF5C elevator_select
0x43F324 elevator_start
0x43F6D0 elevator_end
0x43F73C Check4Keys
0x43F788 endgame_slideshow
0x43F810 endgame_movie
0x43F8C4 gameOverConfim
0x43F99C endgame_init
0x43FB28 endgame_exit
0x43FBDC endgame_pan_desert
0x440004 endgame_display_image
0x4401A0 endgame_load_voiceover
0x440324 endgame_play_voiceover
0x44035C endgame_stop_voiceover
0x440378 void endgame_load_palette(DWORD artType, DWORD fid)
0x4403F0 endgame_voiceover_callback
0x4403FC endgame_load_subtitles
0x4404EC endgame_show_subtitles
0x4406CC endgame_clear_subtitles
0x440728 endgame_movie_callback
0x440734 endgame_movie_bk_process
0x440770 endgame_load_slide_info
0x44095C endgame_unload_slide_info
0x440984 endgameDeathEndingInit
0x440BA8 endgameDeathEndingExit
0x440BD0 endgameSetupDeathEnding
0x440CF4 endgameSetupInit
0x440D8C endgameGetDeathEndingFileName
0x440DD0 annoy_user
0x440F10 hashName
0x440F58 findProc
0x441018 findEmptyProc
0x4410AC findVar
0x441164 exportGetVariable
0x44118C findEmptyVar
0x441220 exportStoreStringVariable
0x44127C exportStoreVariable
0x441330 exportStoreVariableByTag
0x4413D4 exportFetchVariable
0x4414B8 exportExportVariable
0x4414FC removeProgramReferences
0x44152C initExport
0x441538 exportClose
0x44158C exportFindProcedure
0x4415B0 exportExportProcedure
0x441604 exportGetVariableList
0x4417DC exportFreeVariableList
0x441824 exportClearAllVariables
0x4418A0 exportLoadAllFP
0x441A70 exportSaveAllFP
0x441C80 FMInit
0x441CEC FMExit
0x441D20 FMLoadFont
0x442120 FMtext_font
0x442168 FMtext_height
0x442188 DWORD FMtext_width(char* text)
0x4421DC FMtext_char_width
0x442210 FMtext_mono_width
0x442240 FMtext_spacing
0x442258 FMtext_size
0x442278 FMtext_max
0x4422AC FMtext_curr
0x4422B4 FMtext_to_buf
0x4424F0 FMtext_leading
0x442508 FMtext_space_width
0x442520 Swap4
0x442568 Swap2
0x442580 game_init
0x442B84 game_reset
0x442C34 game_exit
0x442D44 game_handle_input
0x443BFC game_ui_disable
0x443C30 game_ui_enable
0x443C60 game_ui_is_disabled
0x443C68 DWORD game_get_global_var(DWORD globalVar)
0x443C98 game_set_global_var
0x443CC8 game_load_info
0x443CE8 game_load_info_vars
0x443E2C game_state
0x443E34 game_state_request
0x443E90 game_state_update
0x443EC0 game_display_counter
0x443EF0 game_screendump
0x443F50 game_unload_info
0x443F74 game_help
0x4440B8 game_quit_with_confirm
0x44418C game_init_databases
0x444384 game_splash_screen
0x444570 gconfig_init
0x444C14 gconfig_save
0x444C3C gconfig_exit
0x444C90 fatal_error
0x444D1C gdialogInit
0x444D20 gdialogReset
0x444D2C gdialogActive
0x444D3C gdialogEnter
0x444FE4 gdialogSystemEnter
0x445050 gdialogSetupSpeech
0x4450C4 gdialogFreeSpeech
0x4450EC gdialogEnableBK
0x4450FC gdialogDisableBK
0x44510C gdialogInitFromScript
0x445298 gdialogExitFromScript
0x445438 gdialogSetBackground
0x445448 void gdialogDisplayMsg(char* message)
0x4454FC gdialogStart
0x445510 gdialogSayMessage
0x445538 gdialogOption
0x445578 gdialogOptionStr
0x4455B8 gdialogOptionProc
0x4455FC gdialogOptionProcStr
0x445640 gdialogReply
0x44567C gdialogReplyStr
0x4456D8 gdialogGo
0x445764 gdialogUpdatePartyStatus
0x4457EC gdHide
0x445818 gdUnhide
0x445844 gdUnhideReply
0x44585C gdAddOption
0x4458BC gdAddOptionStr
0x445938 gdReviewInit
0x445C18 gdReviewExit
0x445CA0 gdReviewPressed
0x445D44 gdReviewDisplay
0x445FDC gdReviewFree
0x446040 gdAddReviewReply
0x4460B4 gdAddReviewReplyStr
0x4461A4 gdAddReviewOptionChosen
0x4461F0 gdAddReviewOptionChosenStr
0x446288 gdProcessInit
0x446454 gdProcessCleanup
0x446498 gdProcessExit
0x446504 gdUpdateMula
0x4465C0 gdProcess
0x4468DC gdProcessChoice
0x446A18 gdProcessHighlight
0x446B5C gdProcessUnHighlight
0x446C94 gdProcessReply
0x446D30 gdProcessUpdate
0x44715C gdCreateHeadWindow
0x447294 gdDestroyHeadWindow
0x447300 gdSetupFidget
0x447598 gdWaitForFidget
0x447614 gdPlayTransition
0x447724 reply_arrow_up
0x447738 reply_arrow_down
0x44774C reply_arrow_restore
0x447758 demo_copy_title
0x447818 demo_copy_options
0x447914 gDialogRefreshOptionsRect
0x447A58 gdialog_bk
0x447CA0 talk_to_critter_reacts
0x447D98 gdialog_scroll_subwin
0x447F64 text_num_lines
0x447F80 text_to_rect_wrapped
0x447FA0 text_to_rect_func
0x448214 gdialogSetBarterMod
0x44821C gdActivateBarter
0x448268 barter_end_to_talk_to
0x448290 gdialog_barter_create_win
0x44854C gdialog_barter_destroy_win
0x448660 gdialog_barter_cleanup_tables
0x448740 gdControlCreateWin
0x448C10 gdControlDestroyWin
0x448D30 gdControlUpdateInfo
0x44928C gdControlPressed
0x4492D0 gdPickAIUpdateMsg
0x449330 gdCanBarter
0x4493B8 gdControl
0x4496A0 gdCustomCreateWin
0x449A10 gdCustomDestroyWin
0x449B3C gdCustom
0x449BB4 gdCustomUpdateInfo
0x449E64 gdCustomSelectRedraw
0x449FC0 gdCustomSelect
0x44A4E0 gdCustomUpdateSetting
0x44A52C gdialog_barter_pressed
0x44A62C gdialog_window_create
0x44A9D8 gdialog_window_destroy
0x44AAD8 talk_to_create_background_window
0x44AB18 talk_to_refresh_background_window
0x44ABA8 talkToRefreshDialogWindowRect
0x44AC68 talk_to_translucent_trans_buf_to_buf
0x44ACFC gdDisplayFrame
0x44B080 gdBlendTableInit
0x44B1D4 gdBlendTableExit
0x44B200 localmymalloc
0x44B214 localmyrealloc
0x44B228 localmyfree
0x44B23C localmystrdup
0x44B250 gmemory_init
0x44B294 gmalloc
0x44B29C grealloc
0x44B2A4 gfree
0x44B2B0 gmouse_init
0x44B2E8 gmouse_reset
0x44B3B8 gmouse_exit
0x44B454 gmouse_enable
0x44B48C gmouse_disable
0x44B4C4 gmouse_is_enabled
0x44B4CC gmouse_enable_scrolling
0x44B4D8 gmouse_disable_scrolling
0x44B4E4 gmouse_scrolling_is_enabled
0x44B4EC gmouse_set_click_to_scroll
0x44B504 gmouse_get_click_to_scroll
0x44B54C gmouse_is_scrolling
0x44B684 gmouse_bk_process
0x44BFA8 gmouse_handle_event
0x44C840 DWORD gmouse_set_cursor(DWORD picNum)
0x44C9E8 gmouse_get_cursor
0x44C9F0 gmouse_set_mapper_mode
0x44C9F8 gmouse_3d_enable_modes
0x44CA04 gmouse_3d_disable_modes
0x44CA10 gmouse_3d_modes_are_enabled
0x44CA18 void gmouse_3d_set_mode(DWORD mode)
0x44CB74 gmouse_3d_toggle_mode
0x44CBD0 gmouse_3d_refresh
0x44CBFC gmouse_3d_set_fid
0x44CCF4 gmouse_3d_get_fid
0x44CD0C gmouse_3d_reset_fid
0x44CD2C gmouse_3d_on
0x44CE34 gmouse_3d_off
0x44CEB0 gmouse_3d_is_on
0x44CEC4 GameObject* object_under_mouse(DWORD crSwitch, DWORD inclDude, DWORD elevation)
0x44CFA0 gmouse_3d_build_pick_frame
0x44D200 gmouse_3d_pick_frame_hot
0x44D214 gmouse_3d_build_menu_frame
0x44D61C gmouse_3d_menu_frame_hot
0x44D630 gmouse_3d_highlight_menu_frame
0x44D774 gmouse_3d_build_to_hit_frame
0x44D878 gmouse_3d_build_hex_frame
0x44D954 gmouse_3d_synch_item_highlight
0x44D984 gmouse_3d_init
0x44DAC0 gmouse_3d_reset
0x44DB34 gmouse_3d_exit
0x44DB78 gmouse_3d_lock_frames
0x44DE44 gmouse_3d_unlock_frames
0x44DF1C gmouse_3d_set_flat_fid
0x44DF40 gmouse_3d_reset_flat_fid
0x44DF94 gmouse_3d_move_to
0x44E42C gmouse_check_scrolling
0x44E544 gmouse_remove_item_outline
0x44E580 gmObjIsValidTarget
0x44E5C0 gmovie_init
0x44E60C gmovie_reset
0x44E638 gmovie_load
0x44E664 gmovie_save
0x44E690 gmovie_play
0x44EAE4 gmPaletteFinish
0x44EB04 gmovie_has_been_played
0x44EB14 gmovieIsPlaying
0x44EB1C gmovie_subtitle_func
0x44EBFC bit1exbit8
0x44ECCC tint_mask_buf_to_buf
0x44ED40 buf_to_color
0x44ED98 load_lbm_to_buf
0x44F250 CompLZS
0x44F5F0 InitTree
0x44F63C InsertNode
0x44F7EC DeleteNode
0x44F92C DecodeLZS
0x44FA78 InitGreyTable
0x44FC40 grey_buf
0x44FC70 gsound_init
0x450164 gsound_reset
0x450244 gsound_exit
0x4502BC gsound_sfx_enable
0x4502D0 gsound_sfx_disable
0x4502E4 gsound_sfx_is_enabled
0x4502EC gsound_set_master_volume
0x450410 gsound_get_master_volume
0x450418 gsound_set_sfx_volume
0x450454 gsound_get_sfx_volume
0x45045C gsound_background_disable
0x450488 gsound_background_enable
0x4504D4 gsound_background_is_enabled
0x4504DC gsound_background_volume_set
0x450618 gsound_background_volume_get
0x450620 DWORD gsound_background_volume_get_set(DWORD setVolume)
0x450630 gsound_background_fade_set
0x450638 gsound_background_fade_get
0x450640 gsound_background_fade_get_set
0x450650 gsound_background_callback_set
0x450658 gsound_background_callback_get
0x450660 gsound_background_callback_get_set
0x450670 gsound_background_length_get
0x45067C gsound_background_play
0x450A08 gsound_background_play_level_music
0x450A1C gsound_background_play_preloaded
0x450AB4 gsound_background_stop
0x450B0C gsound_background_restart_last
0x450B50 gsound_background_pause
0x450B64 gsound_background_unpause
0x450B78 gsound_speech_disable
0x450BC0 gsound_speech_enable
0x450BE0 gsound_speech_is_enabled
0x450BE8 gsound_speech_volume_set
0x450C5C gsound_speech_volume_get
0x450C64 gsound_speech_volume_get_set
0x450C74 gsound_speech_callback_set
0x450C7C gsound_speech_callback_get
0x450C84 gsound_speech_callback_get_set
0x450C94 gsound_speech_length_get
0x450CA0 gsound_speech_play
0x450F8C gsound_speech_play_preloaded
0x451024 gsound_speech_stop
0x451054 gsound_speech_pause
0x451068 gsound_speech_unpause
0x45108C gsound_play_sfx_file_volume
0x4510DC gsound_load_sound
0x45145C gsound_load_sound_volume
0x45148C gsound_delete_sfx
0x4514F0 gsnd_anim_sound
0x451510 gsound_play_sound
0x451534 gsound_compute_relative_volume
0x451604 gsnd_build_character_sfx_name
0x4516F0 gsnd_build_ambient_sfx_name
0x451718 gsnd_build_interface_sfx_name
0x451760 gsnd_build_weapon_sfx_name
0x451898 gsnd_build_scenery_sfx_name
0x4518DC gsnd_build_open_sfx_name
0x451970 gsound_red_butt_press
0x451978 gsound_red_butt_release
0x451988 gsound_med_butt_press
0x451990 gsound_med_butt_release
0x451998 gsound_lrg_butt_press
0x4519A0 gsound_lrg_butt_release
0x4519A8 void gsound_play_sfx_file(char* name)
0x451A00 gsound_bkg_proc
0x451A08 gsound_open
0x451A30 gsound_read
0x451A4C gsound_seek
0x451A70 gsound_tell
0x451A7C gsound_filesize
0x451A88 gsound_compressed_query
0x451A90 gsound_internal_speech_callback
0x451AB0 gsound_internal_background_callback
0x451AD0 gsound_internal_effect_callback
0x451ADC gsound_background_allocate
0x451B30 gsound_background_find_with_copy
0x451E2C gsound_background_find_dont_copy
0x451F94 gsound_speech_find_dont_copy
0x452088 gsound_background_remove_last_copy
0x4520EC gsound_background_start
0x45219C gsound_speech_start
0x452208 gsound_get_music_path
0x452350 gsound_check_active_effects
0x452378 gsound_get_sound_ready_for_effect
0x4524E0 gsound_file_exists_f
0x4524FC gsound_file_exists_db
0x452518 gsound_setup_paths
0x452628 gsound_sfx_q_start
0x452634 gsound_sfx_q_process
0x452740 gzRealUncompressCopyReal_file
0x452804 gzcompress_file
0x4528B8 gzdecompress_file
0x452974 heap_init
0x452A3C heap_exit
0x452AD0 heap_allocate
0x452CB4 heap_deallocate
0x452DE0 heap_lock
0x452EE4 heap_unlock
0x452FC4 heap_validate
0x4532AC heap_stats
0x453304 heap_create_lists
0x4533A0 heap_destroy_lists
0x453430 heap_init_handles
0x453480 heap_exit_handles
0x4534B0 heap_acquire_handle
0x453538 heap_release_handle
0x453558 heap_clear_handles
0x453588 heap_find_free_block
0x453BC4 heap_build_free_list
0x453C9C heap_sort_free_list
0x453CC4 heap_qsort_compare_free
0x453CD0 heap_build_moveable_list
0x453E54 heap_sort_moveable_list
0x453E74 heap_qsort_compare_moveable
0x453E80 heap_build_subblock_list
0x453F24 heap_sort_subblock_list
0x453F4C heap_build_fake_move_list
0x453FD0 dbg_error
0x45400C int_debug
0x45404C scripts_tile_is_visible
0x45409C void correctFidForRemovedItem(GameObject* critter, GameObject* item, DWORD slotFlag)
0x4541C8 op_give_exp_points
0x454238 op_scr_return
0x4542AC op_play_sfx
0x454314 op_set_map_start
0x4543F4 op_override_map_start
0x454568 op_has_skill
0x454634 op_using_skill
0x4546E8 op_roll_vs_skill
0x4547D4 op_skill_contest
0x454890 op_do_check
0x4549A8 op_is_success
0x454A44 op_is_critical
0x454AD0 op_how_much
0x454B6C op_mark_area_known
0x454C34 op_reaction_influence
0x454CD4 op_random
0x454D88 op_roll_dice
0x454E28 op_move_to
0x454FA8 op_create_object_sid
0x4551E4 op_destroy_object
0x455388 op_display_msg
0x455430 op_script_overrides
0x455470 op_obj_is_carrying_obj_pid
0x455534 op_tile_contains_obj_pid
0x455600 op_self_obj
0x455624 op_source_obj
0x455678 op_target_obj
0x4556CC op_dude_obj
0x4556EC op_obj_being_used_with
0x455740 op_local_var
0x4557C8 op_set_local_var
0x455858 op_map_var
0x4558C8 op_set_map_var
0x455950 op_global_var
0x4559EC op_set_global_var
0x455A90 op_script_action
0x455AE4 op_obj_type
0x455B6C op_obj_item_subtype
0x455C10 op_get_critter_stat
0x455CCC op_set_critter_stat
0x455DC8 op_animate_stand_obj
0x455E7C op_animate_stand_reverse_obj
0x455F30 op_animate_move_obj_to_tile
0x45607C op_tile_in_tile_rect
0x456174 op_tile_distance
0x456228 op_tile_distance_objs
0x456324 op_tile_num
0x4563B4 op_tile_num_in_direction
0x4564D4 op_pickup_obj
0x456580 op_drop_obj
0x45662C op_add_obj_to_inven
0x456708 op_rm_obj_from_inven
0x45681C op_wield_obj_critter
0x4569D0 op_use_obj
0x456AC4 op_obj_can_see_obj
0x456C00 op_attack
0x456DF0 op_start_gdialog
0x456F80 op_end_dialogue
0x456FA4 op_dialogue_reaction
0x457008 objs_area_turn_on_off
0x457110 op_metarule3
0x45734C op_set_map_music
0x45741C op_set_obj_visibility
0x45755C op_load_map
0x457680 op_wm_area_set_pos
0x457730 op_set_exit_grids
0x4577EC op_anim_busy
0x457880 op_critter_heal
0x457934 op_set_light_level
0x4579F4 op_game_time
0x457A18 op_game_time_in_seconds
0x457A44 op_elevation
0x457AD4 op_kill_critter
0x457BF4 correctDeath
0x457CB4 op_kill_critter_type
0x457EB4 op_critter_damage
0x457FF0 op_add_timer_event
0x458094 op_rm_timer_event
0x458108 op_game_ticks
0x458180 op_has_trait
0x45835C op_obj_can_hear_obj
0x458438 op_game_time_hour
0x45845C op_fixed_param
0x4584B0 op_tile_is_visible
0x458534 op_dialogue_system_enter
0x458594 op_action_being_used
0x4585E8 op_critter_state
0x4586C8 op_game_time_advance
0x458760 op_radiation_inc
0x458800 op_radiation_dec
0x4588B4 op_critter_attempt_placement
0x4589A0 op_obj_pid
0x458A30 op_cur_map_index
0x458A54 op_critter_add_trait
0x458C2C op_critter_rm_trait
0x458D38 op_proto_data
0x458E10 op_message_str
0x458F00 op_critter_inven_obj
0x459088 op_obj_set_light_level
0x459170 op_world_map
0x459178 op_inven_cmds
0x459280 op_float_msg
0x4594A0 op_metarule
0x4598BC op_anim
0x459B5C op_obj_carrying_pid_obj
0x459C20 op_reg_anim_func
0x459CD4 op_reg_anim_animate
0x459DC4 op_reg_anim_animate_reverse
0x459E74 op_reg_anim_obj_move_to_obj
0x459F28 op_reg_anim_obj_run_to_obj
0x459FDC op_reg_anim_obj_move_to_tile
0x45A094 op_reg_anim_obj_run_to_tile
0x45A14C op_play_gmovie
0x45A200 op_add_mult_objs_to_inven
0x45A2D4 op_rm_mult_objs_from_inven
0x45A40C op_get_month
0x45A43C op_get_day
0x45A46C op_explosion
0x45A528 op_days_since_visited
0x45A56C op_gsay_start
0x45A5B0 op_gsay_end
0x45A5D4 op_gsay_reply
0x45A6C4 op_gsay_option
0x45A8AC op_gsay_message
0x45A9B4 op_giq_option
0x45AB90 op_poison
0x45AC44 op_get_poison
0x45ACF4 op_party_add
0x45AD68 op_party_remove
0x45ADDC op_reg_anim_animate_forever
0x45AE8C op_critter_injure
0x45AF7C op_combat_is_initialized
0x45AFA0 op_gdialog_barter
0x45B010 op_difficulty_level
0x45B05C op_running_burning_guy
0x45B0A8 op_inven_unwield
0x45B0D8 op_obj_is_locked
0x45B16C op_obj_lock
0x45B1E0 op_obj_unlock
0x45B254 op_obj_is_open
0x45B2E8 op_obj_open
0x45B35C op_obj_close
0x45B3D0 op_game_ui_disable
0x45B3D8 op_game_ui_enable
0x45B3E0 op_game_ui_is_disabled
0x45B404 op_gfade_out
0x45B47C op_gfade_in
0x45B4F4 op_item_caps_total
0x45B588 op_item_caps_adjust
0x45B64C op_anim_action_frame
0x45B740 op_reg_anim_play_sfx
0x45B840 op_critter_mod_skill
0x45B9C4 op_sfx_build_char_name
0x45BAA8 op_sfx_build_ambient_name
0x45BB54 op_sfx_build_interface_name
0x45BC00 op_sfx_build_item_name
0x45BCAC op_sfx_build_weapon_name
0x45BD7C op_sfx_build_scenery_name
0x45BE58 op_sfx_build_open_name
0x45BF38 op_attack_setup
0x45C0E8 op_destroy_mult_objs
0x45C290 op_use_obj_on_obj
0x45C3B0 op_endgame_slideshow
0x45C3D0 op_move_obj_inven_to_obj
0x45C54C op_endgame_movie
0x45C56C op_obj_art_fid
0x45C5F8 op_art_anim
0x45C66C op_party_member_obj
0x45C6DC op_rotation_to_tile
0x45C778 op_jam_lock
0x45C7D4 op_gdialog_set_barter_mod
0x45C830 op_combat_difficulty
0x45C878 op_obj_on_screen
0x45C93C op_critter_is_fleeing
0x45C9DC op_critter_set_flee_state
0x45CA84 op_terminate_combat
0x45CAC8 op_debug_msg
0x45CB70 op_critter_stop_attacking
0x45CBF8 op_tile_contains_pid_obj
0x45CCC8 op_obj_name
0x45CD64 op_get_pc_stat
0x45CDD8 initIntExtra
0x45D880 intface_init
0x45E3D0 intface_reset
0x45E440 intface_exit
0x45E860 intface_load
0x45E988 intface_save
0x45E9E0 intface_hide
0x45EA10 intface_show
0x45EA5C DWORD intface_is_hidden()
0x45EA64 intface_enable
0x45EAFC intface_disable
0x45EB90 intface_is_enabled
0x45EB98 void intface_redraw()
0x45EBD8 intface_update_hit_points
0x45EDA8 void intface_update_ac(DWORD animate)
0x45EE0C void intface_update_move_points(DWORD ap, DWORD freeAP)
0x45EF6C DWORD intface_get_attack(DWORD* hitMode, DWORD* isSecondary)
0x45EFEC void intface_update_items(DWORD animate, DWORD modeLeft, DWORD modeRight)
0x45F404 intface_toggle_items
0x45F4B4 intface_get_item_states
0x45F4E0 void intface_toggle_item_state()
0x45F5EC void intface_use_item()
0x45F7FC DWORD intface_is_item_right_hand()
0x45F804 intface_get_current_item
0x45F838 intface_update_ammo_lights
0x45F96C intface_end_window_open
0x45FAC0 intface_end_window_close
0x45FC04 intface_end_buttons_enable
0x45FC98 intface_end_buttons_disable
0x45FD2C intface_init_items
0x45FD88 intface_redraw_items
0x460658 intface_redraw_items_callback
0x460660 intface_change_fid_callback
0x46066C intface_change_fid_animate
0x4607E0 intface_create_end_turn_button
0x4608C4 intface_destroy_end_turn_button
0x460940 intface_create_end_combat_button
0x460A24 intface_destroy_end_combat_button
0x460AA0 intface_draw_ammo_lights
0x460B20 intface_item_reload
0x460BA0 intface_rotate_numbers
0x461128 intface_fatal_error
0x461134 construct_box_bar_win
0x461454 deconstruct_box_bar_win
0x4614A0 reset_box_bar_win
0x4614CC refresh_box_bar_win
0x461624 bbox_comp
0x461648 draw_bboxes
0x4616F0 add_bar_box
0x461740 enable_box_bar_win
0x461760 disable_box_bar_win
0x461780 op_fillwin3x3
0x461850 op_format
0x461A5C op_print
0x461B10 op_selectfilelist
0x461CA0 op_tokenize
0x461F1C op_printrect
0x46209C op_selectwin
0x46213C op_display
0x4621B4 op_displayraw
0x46222C interpretFadePaletteBK
0x462330 interpretFadePalette
0x462340 intlibGetFadeIn
0x462348 interpretFadeOut
0x462380 interpretFadeIn
0x4623A4 interpretFadeOutNoBK
0x4623DC interpretFadeInNoBK
0x462400 op_fadein
0x4624B4 op_fadeout
0x462570 checkMovie
0x462584 op_movieflags
0x4625D0 op_playmovie
0x4626C4 op_playmovierect
0x46287C op_stopmovie
0x462890 op_deleteregion
0x462924 op_activateregion
0x4629A0 op_checkregion
0x462A1C op_addregion
0x462C10 op_addregionproc
0x462DDC op_addregionrightproc
0x462F08 op_createwin
0x46308C op_resizewin
0x463204 op_scalewin
0x46337C op_deletewin
0x4633E4 op_saystart
0x463430 op_saystartpos
0x46349C op_sayreplytitle
0x463510 op_saygotoreply
0x463584 op_sayoption
0x4636A0 op_sayreply
0x46378C checkDialog
0x4637A4 op_sayend
0x4637EC op_saygetlastpos
0x463810 op_sayquit
0x463828 getTimeOut
0x463830 setTimeOut
0x463838 op_saymessagetimeout
0x463890 op_saymessage
0x463980 op_gotoxy
0x463A38 op_addbuttonflag
0x463B10 op_addregionflag
0x463BE8 op_addbutton
0x463DF4 op_addbuttontext
0x463EEC op_addbuttongfx
0x4640DC op_addbuttonproc
0x4642A8 op_addbuttonrightproc
0x4643D4 op_showwin
0x4643E4 op_deletebutton
0x46449C op_fillwin
0x4645FC op_fillrect
0x46489C op_hidemouse
0x4648A4 op_showmouse
0x4648AC op_mouseshape
0x4649C4 op_setglobalmousefunc
0x4649D4 op_displaygfx
0x464ADC op_loadpalettetable
0x464B54 op_addNamedEvent
0x464BE8 op_addNamedHandler
0x464C80 op_clearNamed
0x464CE4 op_signalNamed
0x464D48 op_addkey
0x464E24 op_deletekey
0x464EB0 op_refreshmouse
0x464F18 op_setfont
0x464F84 op_settextflags
0x464FF0 op_settextcolor
0x465140 op_sayoptioncolor
0x465290 op_sayreplycolor
0x4653E0 op_sethighlightcolor
0x465530 op_sayreplywindow
0x465688 op_sayreplyflags
0x4656F4 op_sayoptionflags
0x465760 op_sayoptionwindow
0x4658B8 op_sayborder
0x465978 op_sayscrollup
0x465CAC op_sayscrolldown
0x465FE0 op_saysetspacing
0x46604C op_sayrestart
0x466064 soundCallbackInterpret
0x466070 soundDeleteInterpret
0x4660E8 soundCloseInterpret
0x466110 soundStartInterpret
0x46655C soundPauseInterpret
0x4665C8 soundRewindInterpret
0x46662C soundUnpauseInterpret
0x466698 op_soundplay
0x466768 op_soundpause
0x4667C0 op_soundresume
0x466818 op_soundstop
0x466870 op_soundrewind
0x4668C8 op_sounddelete
0x466920 op_setoneoptpause
0x466994 updateIntLib
0x4669A0 intlibClose
0x466A04 intLibDoInput
0x466A70 initIntlib
0x466F6C interpretRegisterProgramDeleteCallback
0x467000 interpretUnregisterProgramDeleteCallback
0x467040 removeProgramReferences_
0x4670A0 defaultTimerFunc
0x4670A8 interpretSetTimeFunc
0x4670B8 interpretMangleName
0x4670C0 outputStr
0x4670C8 checkWait
0x4670FC interpretOutputFunc
0x467104 interpretOutput
0x467160 char* findCurrentProc(Program* program)
0x4671F0 interpretError
0x467290 fetchWord
0x4672A4 fetchLong
0x4672D4 storeWord
0x4672E8 storeLong
0x467324 pushShortStack
0x46736C pushLongStack
0x4673C4 popLongStack
0x4673F0 popShortStack
0x467424 interpretIncStringRef
0x467440 interpretDecStringRef
0x46748C interpretPushShort
0x4674DC interpretPushLong
0x4674F0 DWORD interpretPopShort(Program* scriptPtr)
0x467500 DWORD interpretPopLong(Program* scriptPtr)
0x467510 rPushShort
0x467560 rPushLong
0x467574 rPopShort
0x4675B8 rPopLong
0x4675C8 detachProgram
0x4675F4 purgeProgram
0x467614 interpretFreeProgram
0x467734 Program* allocateProgram(char* filePath)
0x4678BC getOp
0x4678E0 char* interpretGetString(Program* scriptPtr, DWORD dataType, DWORD strId)
0x46790C interpretGetName
0x467918 interpretInvalidateString
0x467934 checkProgramStrings
0x4679C4 checkAllProgramStrings
0x4679E0 checkStrings
0x467A80 interpretAddString
0x467C78 getData
0x467C94 op_const
0x467CD0 op_push_base
0x467D3C op_pop_base
0x467D94 op_pop_to_base
0x467DE0 op_set_global
0x467DEC op_dump
0x467EA4 op_call_at
0x468034 op_call_condition
0x46817C op_wait
0x468218 op_cancel
0x468330 op_cancelall
0x468400 op_if
0x4684A4 op_while
0x468518 op_store
0x468678 op_fetch
0x46873C op_not_equal
0x468AA8 op_equal
0x468E14 op_less_equal
0x469180 op_greater_equal
0x4694EC op_less
0x469858 op_greater
0x469BC4 op_add
0x46A1D8 op_sub
0x46A300 op_mul
0x46A424 op_div
0x46A5B8 op_mod
0x46A6B4 op_and
0x46A8D8 op_or
0x46AACC op_not
0x46AB2C op_negate
0x46AB84 op_bwnot
0x46ABDC op_floor
0x46AC78 op_bwand
0x46ADA4 op_bwor
0x46AED0 op_bwxor
0x46AFFC op_swapa
0x46B070 op_critical_done
0x46B078 op_critical_start
0x46B080 op_jmp
0x46B108 op_call
0x46B590 op_pop_flags
0x46B63C op_pop_return
0x46B658 op_pop_exit
0x46B67C op_pop_flags_return
0x46B698 op_pop_flags_exit
0x46B6BC op_pop_flags_return_val_exit
0x46B73C op_pop_flags_return_val_exit_extern
0x46B808 op_pop_flags_return_extern
0x46B86C op_pop_flags_exit_extern
0x46B8D8 op_pop_flags_return_val_extern
0x46BA10 op_pop_address
0x46BA2C op_a_to_d
0x46BA68 op_d_to_a
0x46BAC0 op_exit_prog
0x46BAC8 op_stop_prog
0x46BAD0 op_fetch_global
0x46BB5C op_store_global
0x46BCAC op_swap
0x46BD60 op_fetch_proc_address
0x46BE10 op_pop
0x46BE4C op_dup
0x46BEC8 op_store_external
0x46BF90 op_fetch_external
0x46C044 op_export_proc
0x46C120 op_export_var
0x46C1A0 op_exit
0x46C1EC op_detach
0x46C218 op_callstart
0x46C344 op_spawn
0x46C490 op_fork
0x46C574 op_exec
0x46C5D8 op_check_arg_count
0x46C6B4 op_lookup_string_proc
0x46C7DC initInterpreter
0x46CC68 interpretClose
0x46CC74 interpretEnableInterpreter
0x46CCA4 DWORD interpret(Program* program, DWORD arg2)
0x46CED0 setupCallWithReturnVal
0x46CF78 setupCall
0x46CF9C setupExternalCallWithReturnVal
0x46D0B0 setupExternalCall
0x46D0D4 BugFixLoop
0x46D16C executeProcedureReturnValue
0x46D50C executeProcWithArgs
0x46D804 executeProcedureWithArgs
0x46DB58 executeProc
0x46DCD0 DWORD interpretFindProcedure(Program* scriptPtr, char* procName)
0x46DD2C void executeProcedure(Program* sptr, DWORD procNum)
0x46DEE4 doEvents
0x46E10C removeProgList
0x46E154 DWORD* runProgram(Program* progPtr)
0x46E19C runScript
0x46E1DC interpretSetCPUBurstSize
0x46E1EC updatePrograms
0x46E238 clearPrograms
0x46E254 clearTopProgram
0x46E26C getProgramList
0x46E31C freeProgramList
0x46E368 interpretAddFunc
0x46E398 interpretSetFilenameFunc
0x46E3A0 interpretSuspendEvents
0x46E3C0 interpretResumeEvents
0x46E4AC interpretSaveProgramState
0x46E4B0 interpretDumpStack
0x46E5EC interpretDumpStringHeap
0x46E718 inven_set_dude
0x46E724 inven_reset_dude
0x46E73C inventry_msg_load
0x46E7A0 inventry_msg_unload
0x46E7B0 handle_inventory
0x46EC90 setup_inventory
0x46FBD8 exit_inventory
0x46FDF4 void display_inventory(DWORD inventoryOffset, DWORD visibleOffset, DWORD mode)
0x47036C void display_target_inventory(DWORD inventoryOffset, DWORD visibleOffset, DWORD* targetInventory, DWORD mode)
0x4705A0 display_inventory_info
0x470650 display_body
0x470A2C inven_init
0x470B8C inven_exit
0x470BCC inven_set_mouse
0x470C2C inven_hover_on
0x470D1C inven_hover_off
0x470D5C inven_update_lighting
0x470DB8 inven_pickup
0x4714E0 switch_hand
0x4715F8 adjust_ac
0x4716E8 adjust_fid
0x4717E4 use_inventory_on
0x471B70 GameObject* inven_right_hand(GameObject* critter)
0x471BBC GameObject* inven_left_hand(GameObject* critter)
0x471C08 GameObject* inven_worn(GameObject* critter)
0x471C54 inven_pid_is_carried
0x471CA0 GameObject* inven_pid_is_carried_ptr(GameObject* invenObj, DWORD pid)
0x471CDC inven_pid_quantity_carried
0x471D34 inven_clear
0x471D5C void display_stats()
0x472698 GameObject* inven_find_type(GameObject* critter, DWORD itemType, DWORD* slot)
0x4726EC inven_find_id
0x472740 inven_index_ptr
0x472758 DWORD inven_wield(GameObject* critter, GameObject* item, DWORD slot)
0x472768 invenWieldFunc
0x472A54 DWORD inven_unwield(GameObject* critter, DWORD slot)
0x472A64 invenUnwieldFunc
0x472B54 inven_from_button
0x472D24 inven_display_msg
0x472EB8 inven_obj_examine_func
0x47304C inven_action_cursor
0x473904 loot_container
0x4746A0 inven_steal_container
0x474708 move_inventory
0x474B2C DWORD barter_compute_value(GameObject* source, GameObject* target)
0x474C50 barter_attempt_transaction
0x474DAC barter_move_inventory
0x475070 barter_move_from_table_inventory
0x475334 display_table_inventories
0x4757F0 barter_inventory
0x47620C container_enter
0x476394 container_exit
0x476464 drop_into_container
0x47650C drop_ammo_into_weapon
0x47664C draw_amount
0x47688C do_move_timer
0x476AB8 setup_move_timer_win
0x477030 exit_move_timer_win
0x477074 inven_set_timer
0x4770E0 item_init
0x477144 item_reset
0x477148 item_exit
0x477158 item_add_mult
0x4772B8 DWORD item_add_force(GameObject* critter, GameObject* item, DWORD count)
0x477490 DWORD item_remove_mult(GameObject* critter, GameObject* item, DWORD count)
0x4775D8 item_compact
0x477608 item_move_func
0x47769C item_move
0x4776A4 item_move_force
0x4776AC item_move_all
0x4776E0 item_move_all_hidden
0x477770 item_destroy_all_hidden
0x477804 item_drop_all
0x4779F0 item_identical
0x477AE4 item_name
0x477AF4 item_description
0x477AFC DWORD item_get_type(GameObject* item)
0x477B4C item_material
0x477B68 DWORD item_size(GameObject* item)
0x477B88 DWORD item_weight(GameObject* item)
0x477CAC item_cost
0x477DAC DWORD item_total_cost(GameObject* object)
0x477E98 DWORD item_total_weight(GameObject* object)
0x477F3C can_use_weapon
0x477FB0 item_inv_fid
0x477FF8 GameObject* item_hit_with(GameObject* critter, DWORD hitMode)
0x478040 item_mp_cost
0x47808C item_count
0x4780E4 item_queued
0x478154 item_replace
0x478244 item_is_hidden
0x478280 DWORD item_w_subtype(GameObject* item, DWORD hitMode)
0x4782CC item_w_skill
0x478370 item_w_skill_level
0x4783B8 item_w_damage_min_max
0x478448 DWORD item_w_damage(GameObject* critter, DWORD hitMode)
0x478570 item_w_damage_type
0x478598 item_w_is_2handed
0x4785DC item_w_anim
0x47860C DWORD item_w_anim_weap(GameObject* item, DWORD hitMode)
0x478674 DWORD item_w_max_ammo(GameObject* item)
0x4786A0 DWORD item_w_curr_ammo(GameObject* item)
0x4786C8 item_w_caliber
0x478714 item_w_set_curr_ammo
0x478768 item_w_try_reload
0x478874 item_w_can_reload
0x478918 DWORD item_w_reload(GameObject* weapon, GameObject* ammo)
0x478A1C DWORD item_w_range(GameObject* critter, DWORD hitMode)
0x478B24 DWORD item_w_mp_cost(GameObject* source, DWORD hitMode, DWORD isCalled)
0x478D08 item_w_min_st
0x478D30 item_w_crit_fail
0x478D58 item_w_perk
0x478D80 DWORD item_w_rounds(GameObject* item)
0x478DA8 DWORD item_w_anim_code(GameObject* item)
0x478DD0 item_w_proj_pid
0x478DF8 item_w_ammo_pid
0x478E18 item_w_sound_id
0x478E5C item_w_called_shot
0x478EF4 item_w_can_unload
0x478F80 item_w_unload
0x47905C DWORD item_w_primary_mp_cost(GameObject* item)
0x479084 DWORD item_w_secondary_mp_cost(GameObject* item)
0x4790AC DWORD item_w_compute_ammo_cost(GameObject* item, DWORD* rounds)
0x4790E8 item_w_is_grenade
0x47910C item_w_area_damage_radius
0x479180 item_w_grenade_dmg_radius
0x479188 item_w_rocket_dmg_radius
0x479190 item_w_ac_adjust
0x4791E0 DWORD item_w_dr_adjust(GameObject* item)
0x479230 DWORD item_w_dam_mult(GameObject* item)
0x479294 DWORD item_w_dam_div(GameObject* item)
0x4792F8 item_ar_ac
0x479318 item_ar_dr
0x479338 item_ar_dt
0x479358 item_ar_perk
0x479380 item_ar_male_fid
0x4793A8 item_ar_female_fid
0x4793D0 item_m_max_charges
0x4793F0 item_m_curr_charges
0x4793F8 item_m_set_charges
0x479434 item_m_cell
0x479454 item_m_cell_pid
0x47947C item_m_uses_charges
0x4794A4 item_m_use_charged_item
0x4795A4 DWORD item_m_dec_charges(GameObject* item)
0x4795F0 item_m_trickle
0x4796A8 item_m_on
0x4796D0 item_m_turn_on
0x479898 item_m_turn_off
0x479954 item_m_turn_off_from_queue
0x479960 item_m_stealth_effect_on
0x479998 item_m_stealth_effect_off
0x479A00 item_c_max_size
0x479A20 DWORD item_c_curr_size(GameObject* critter)
0x479A74 item_a_ac_adjust
0x479AA4 item_a_dr_adjust
0x479AD4 item_a_dam_mult
0x479B04 item_a_dam_div
0x479B34 item_k_curr_code
0x479B44 insert_drug_effect
0x479C20 perform_drug_effect
0x479EE4 drug_effect_allowed
0x479F60 DWORD item_d_take_drug(GameObject* source, GameObject* item)
0x47A178 item_d_clear
0x47A198 item_d_process
0x47A1D0 item_d_load
0x47A254 item_d_save
0x47A290 insert_withdrawal
0x47A2FC item_wd_clear
0x47A324 item_wd_clear_all
0x47A384 item_wd_process
0x47A404 item_wd_load
0x47A484 item_wd_save
0x47A4C4 perform_withdrawal_start
0x47A558 perform_withdrawal_end
0x47A5B4 pid_to_gvar
0x47A5E8 item_d_set_addict
0x47A60C item_d_unset_addict
0x47A640 item_d_check_addict
0x47A6A8 DWORD item_caps_total(GameObject* object)
0x47A6F8 item_caps_adjust
0x47A8C8 item_caps_get_amount
0x47A8D8 item_caps_set_amount
0x47A8F0 light_init
0x47A8F8 light_get_ambient
0x47A900 light_increase_ambient
0x47A96C light_decrease_ambient
0x47A980 DWORD light_get_tile(DWORD elevation, DWORD tileNum)
0x47A9C4 light_get_tile_true
0x47A9EC light_set_tile
0x47AA10 light_add_to_tile
0x47AA48 light_subtract_from_tile
0x47AA84 light_reset_tiles
0x47AAC0 lips_fix_string
0x47AAD8 lips_bkg_proc
0x47AC2C lips_play_speech
0x47AD2C lips_stop_speech
0x47AD4C lips_read_phoneme_type
0x47AD5C lips_read_marker_type
0x47AD98 lips_read_lipsynch_info
0x47AFAC lips_load_file
0x47B5D0 lips_make_speech
0x47B730 lips_free_speech
0x47B7E4 InitLoadSave
0x47B85C ResetLoadSave
0x47B88C SaveGame
0x47C5B4 QuickSnapShot
0x47C640 LoadGame
0x47D2E4 LSGameStart
0x47D824 LSGameEnd
0x47D88C SaveSlot
0x47DC60 isLoadingGame
0x47DC68 LoadSlot
0x47DF10 SaveHeader
0x47E2E4 LoadHeader
0x47E5D0 GetSlotList
0x47E6D8 ShowSlotList
0x47E8E0 DrawInfoBox
0x47EC48 LoadTumbSlot
0x47ED5C GetComment
0x47F084 get_input_str2
0x47F48C DummyFunc
0x47F490 PrepLoad
0x47F4C8 void EndLoad(DbFile* file)
0x47F510 GameMap2Slot
0x47F990 SlotMap2Game
0x47FE14 mygets
0x47FE58 copy_file
0x48000C KillOldMaps
0x480040 void MapDirErase(char* folder, char* ext)
0x480104 SaveBackup
0x4803D8 RestoreSave
0x480708 RestoreLoad
0x480710 LoadObjDudeCid
0x480734 SaveObjDudeCid
0x480754 EraseSave
0x48099C gnw_main
0x480CC0 main_init_system
0x480D0C main_reset_system
0x480D18 main_exit_system
0x480D4C main_load_new
0x480DF8 main_loadgame_new
0x480E34 main_unload_new
0x480E48 main_game_loop
0x480EE4 main_selfrun_init
0x480F38 main_selfrun_exit
0x480F64 main_selfrun_record
0x48109C main_selfrun_play
0x48118C main_death_scene
0x4814A8 main_death_voiceover_callback
0x4814B4 mainDeathGrabTextFile
0x481598 mainDeathWordWrap
0x481650 main_menu_create
0x481968 main_menu_destroy
0x481A00 main_menu_hide
0x481A48 main_menu_show
0x481A8C main_menu_is_shown
0x481AA8 main_menu_is_enabled
0x481AB0 main_menu_set_timeout
0x481AD0 main_menu_get_timeout
0x481AEC main_menu_loop
0x481C88 main_menu_fatal_error
0x481C94 main_menu_play_sound
0x481CA0 iso_init
0x481ED4 iso_reset
0x481F48 iso_exit
0x481FB4 map_init
0x482064 map_reset
0x482084 map_exit
0x4820C0 map_enable_bk_processes
0x482104 map_disable_bk_processes
0x482148 map_bk_processes_are_disabled
0x482158 map_set_elevation
0x4821F4 map_is_elevation_empty
0x482220 map_set_global_var
0x482250 map_get_global_var
0x482280 map_set_local_var
0x4822B0 map_get_local_var
0x4822E0 map_malloc_local_var
0x48234C map_set_entrance_hex
0x482360 map_set_script
0x48247C map_set_name
0x4824A4 map_get_name
0x4824CC map_get_elev_idx
0x482528 is_map_idx_same
0x4825CC get_map_idx_same
0x48261C char* map_get_short_name(DWORD mapID)
0x482684 map_get_description
0x4826B8 map_get_index_number
0x4826C0 map_scroll
0x482900 map_file_path
0x482924 mapSetEntranceInfo
0x482938 map_new_map
0x4829F0 map_load_dialog
0x482A68 map_load
0x482B34 map_load_idx
0x482B74 map_load_file
0x483188 map_load_in_game
0x48328C map_age_dead_critters
0x48358C map_target_load_area
0x4835B4 map_leave_map
0x4835F8 map_check_state
0x483784 map_fix_critter_combat_data
0x4837C0 map_save_dialog
0x483850 map_save
0x483980 map_save_file
0x483C6C map_save_as
0x483C98 map_save_in_game
0x483E28 map_setup_paths
0x483ED0 map_display_draw
0x483EE4 map_scroll_refresh_game
0x483F44 map_scroll_refresh_mapper
0x483FE4 map_allocate_global_vars
0x484038 map_free_global_vars
0x48405C map_load_global_vars
0x484080 map_allocate_local_vars
0x4840D4 map_free_local_vars
0x4840F8 map_load_local_vars
0x48411C map_place_dude_and_mouse
0x4841F0 square_init
0x484210 square_reset
0x48431C square_load
0x4843B8 map_write_MapData
0x4844B4 map_read_MapData
0x4845B0 defaultOutput
0x4845C0 memoryRegisterDebug
0x4845C8 debug_printf_
0x484610 error
0x48462C defaultMalloc
0x484634 defaultRealloc
0x48463C defaultFree
0x484644 memoryRegisterAlloc
0x48465C get_current_memory
0x484660 mymalloc
0x484688 myfree
0x4846B4 myrealloc
0x4846D8 mycalloc
0x484710 mystrdup
0x484770 init_message
0x4848F0 exit_message
0x48494C message_init
0x484964 DWORD message_exit(MessageList* msgList)
0x4849D4 message_save
0x484AA4 DWORD message_load(MessageList* msgList, char* msgFilePath)
0x484C30 DWORD message_search(MessageList* file, MessageNode* msg)
0x484C98 message_insert
0x484CA8 message_delete
0x484CB8 DWORD message_make_path(char* outpath, char* path)
0x484D10 DWORD message_find(DWORD* msgFile, DWORD msgNumber, DWORD* outBuf)
0x484D68 DWORD message_add(MessageList* file, MessageNode* msg)
0x484EB0 message_remove
0x484F60 message_parse_number
0x484FB4 message_load_field
0x48504C char* getmsg(MessageList* fileAddr, MessageNode* result, DWORD messageId)
0x485078 DWORD message_filter(MessageList* file)
0x485250 defaultNameMangler
0x485254 defaultRateCallback
0x48525C defaultTimeCallback
0x485264 setShape
0x485288 mousemgrSetNameMangler
0x485290 mousemgrSetTimeCallback
0x4852B8 freeCacheEntry
0x4853D4 cacheFlush
0x4853F8 cacheInsert
0x48554C cacheFind
0x48568C initMousemgr
0x48569C mousemgrClose
0x485704 mousemgrUpdate
0x485868 mouseSetFrame
0x485E58 mouseSetMouseShape
0x486010 mouseSetMousePointer
0x4862AC mousemgrResetMouse
0x4864BC mousemgrResetAll
0x4865C4 mouseHide
0x4865CC mouseShow
0x4865E0 movieSetPreDrawFunc
0x4865E8 movieSetFailedOpenFunc
0x4865F0 movieSetFunc
0x4865FC movieMalloc
0x486614 movieFree
0x48662C movieRead
0x486654 movie_MVE_ShowFrame
0x486900 movieShowFrame
0x486A98 movieSetFrameGrabFunc
0x486AA0 movieSetCaptureFrameFunc
0x486AA8 movieCopyLastFrame
0x486B00 movieShowFrameWin
0x486B68 movieScaleSubRect
0x486C74 movieScaleSubRectAlpha
0x486C80 blitAlpha
0x486CD4 movieScaleWindow
0x486D84 blitNormal
0x486DDC movieSetPalette
0x486E08 noop
0x486E0C initMovie
0x486E98 cleanupMovie
0x48711C movieClose
0x487150 movieStop
0x487164 movieSetFlags
0x48720C movieSetSubtitleFont
0x487214 movieSetSubtitleColor
0x48725C movieSetPaletteFunc
0x487274 movieSetCallback
0x48727C movieSetAlphaChannel
0x4872E8 cleanupLast
0x48731C openFile
0x487380 openSubtitle
0x48755C doSubtitle
0x487710 movieStart
0x487964 localMovieCallback
0x48798C movieRunToEnd
0x487AC8 movieRun
0x487B1C movieRunRect
0x487B7C stepMovie
0x487BC8 movieSetSubtitleFunc
0x487BD0 movieSetVolume
0x487BEC movieUpdate
0x487C88 moviePlaying
0x487C90 movieEnableSound
0x487CC0 moviefx_init
0x487CF4 moviefx_reset
0x487D30 moviefx_exit
0x487D7C moviefx_start
0x4880F0 moviefx_stop
0x488144 moviefx_callback_func
0x4882AC moviefx_palette_func
0x4882FC moviefx_add
0x488310 moviefx_remove_all
0x488340 nevs_alloc
0x488394 nevs_free
0x4883AC nevs_close
0x4883D4 nevs_removeprogramreferences
0x488418 nevs_initonce
0x48846C nevs_find
0x4884C8 nevs_addevent
0x488528 nevs_addCevent
0x48859C nevs_clearevent
0x4885D8 nevs_signal_with_args
0x48862C nevs_signal
0x4886AC nevs_update
0x488780 obj_init
0x488A00 obj_reset
0x488A30 obj_exit
0x488AF4 obj_read_obj
0x488CE4 obj_load
0x488CF8 obj_load_func
0x48909C obj_fix_combat_cid_for_dude
0x48911C object_fix_weapon_ammo
0x489200 obj_write_obj
0x48935C obj_save
0x489550 obj_render_pre_roof
0x4897EC obj_render_post_roof
0x489868 obj_draw
0x489A84 obj_new
0x489C9C DWORD obj_pid_new(GameObject* object, DWORD pid)
0x489CCC obj_copy
0x489EC4 DWORD obj_connect(GameObject* object, DWORD tile, DWORD elevation, RECT* rect)
0x489F34 obj_disconnect
0x489FF8 obj_offset
0x48A324 obj_move
0x48A568 DWORD obj_move_to_tile(GameObject* object, DWORD tile, DWORD elevation, RECT* rect)
0x48A9A0 obj_reset_roof
0x48AA3C obj_change_fid
0x48AA84 obj_set_frame
0x48AAF0 obj_inc_frame
0x48AB60 obj_dec_frame
0x48ABD4 obj_set_rotation
0x48AC20 obj_inc_rotation
0x48AC38 obj_dec_rotation
0x48AC54 obj_rebuild_all_light
0x48AC90 obj_set_light
0x48AD04 obj_get_visible_light
0x48AD48 obj_turn_on_light
0x48AD9C obj_turn_off_light
0x48ADF0 obj_turn_on
0x48AE68 obj_turn_off
0x48AEE4 obj_turn_on_outline
0x48AF00 obj_turn_off_outline
0x48AF24 obj_set_highlight
0x48AF2C obj_toggle_flat
0x48B040 obj_toggle_translucence
0x48B0FC DWORD obj_erase_object(GameObject* object, RECT* boundRect)
0x48B1B0 obj_inven_free
0x48B24C obj_action_can_use
0x48B278 obj_action_can_talk_to
0x48B2A8 obj_portal_is_walk_thru
0x48B2E8 objFindObjPtrFromID
0x48B304 obj_top_environment
0x48B318 obj_remove_all
0x48B3A8 GameObject* obj_find_first()
0x48B41C GameObject* obj_find_next()
0x48B48C obj_find_first_at
0x48B510 obj_find_next_at
0x48B5A8 GameObject* obj_find_first_at_tile(DWORD elevation, DWORD tileNum)
0x48B608 GameObject* obj_find_next_at_tile()
0x48B66C void obj_bound(GameObject* object, RECT* boundRect)
0x48B7F8 obj_occupied
0x48B848 GameObject* obj_blocking_at(GameObject* object, DWORD tile, DWORD elevation)
0x48B930 obj_shoot_blocking_at
0x48BA20 obj_ai_blocking_at
0x48BB44 obj_scroll_blocking_at
0x48BB88 obj_sight_blocking_at
0x48BBD4 DWORD obj_dist(GameObject* obj_src, GameObject* obj_trg)
0x48BC08 DWORD obj_dist_with_tile(GameObject* source, DWORD sourceTile, GameObject* target, DWORD targetTile)
0x48BC38 obj_create_list
0x48BDCC obj_delete_list
0x48BDD8 translucent_trans_buf_to_buf
0x48BE68 checker_trans_buf_to_buf
0x48BEFC dark_trans_buf_to_buf
0x48BF88 dark_translucent_trans_buf_to_buf
0x48C03C intensity_mask_buf_to_buf
0x48C148 obj_outline_all_items_on
0x48C1E4 obj_outline_all_items_off
0x48C294 obj_outline_all_items_toggle
0x48C2B4 obj_outline_object
0x48C2F0 obj_remove_outline
0x48C314 obj_remove_all_outlines
0x48C340 obj_intersects_with
0x48C5C4 obj_create_intersect_list
0x48C74C obj_delete_intersect_list
0x48C76C obj_set_seen
0x48C788 obj_clear_seen
0x48C7A0 obj_process_seen
0x48C8E4 object_name
0x48C914 object_description
0x48C938 obj_preload_art_cache
0x48CB6C obj_object_table_init
0x48CB88 obj_offset_table_init
0x48CDA0 obj_offset_table_exit
0x48CE10 obj_order_table_init
0x48CF20 obj_order_comp_func_even
0x48CF38 obj_order_comp_func_odd
0x48CF50 obj_order_table_exit
0x48CF8C obj_render_table_init
0x48D000 obj_render_table_exit
0x48D020 obj_light_table_init
0x48D1E4 obj_blend_table_init
0x48D2E8 obj_blend_table_exit
0x48D324 obj_misc_table_init
0x48D348 obj_save_obj
0x48D414 obj_load_obj
0x48D59C obj_save_dude
0x48D600 obj_load_dude
0x48D778 obj_create_object
0x48D7F8 obj_destroy_object
0x48D818 obj_create_object_node
0x48D84C obj_destroy_object_node
0x48D86C obj_node_ptr
0x48D8E8 obj_insert
0x48DA58 obj_remove
0x48DB28 obj_connect_to_tile
0x48DC28 obj_adjust_light
0x48EABC obj_render_outline
0x48F1B0 obj_render_object
0x48FA14 obj_fix_violence_settings
0x48FB08 obj_preload_sort
0x48FC48 do_options
0x48FC50 do_optionsFunc
0x48FE14 OptnStart
0x490244 OptnEnd
0x4902B0 PauseWindow
0x490748 ShadeScreen
0x490798 do_prefscreen
0x4908A0 PrefStart
0x490E8C DoThing
0x491A68 UpdateThing
0x492870 PrefEnd
0x4928B8 init_options_menu
0x4928E4 IncGamma
0x4929C8 DecGamma
0x492AA8 SetSystemPrefs
0x492CB0 SavePrefs
0x492F60 SetDefaults
0x493054 SaveSettings
0x493128 RestoreSettings
0x493A00 palette_init
0x493AD4 palette_fade_to
0x493B48 palette_set_to
0x493B78 palette_set_entries
0x493BC0 partyMember_init
0x4940E4 partyMember_reset
0x494134 partyMember_exit
0x4941F0 partyMemberGetAIOptions
0x49425C partyMemberAISlotInit
0x494340 partyMemberSlotInit
0x494378 partyMemberAdd
0x4944DC partyMemberRemove
0x49460C partyMemberPrepSave
0x49466C partyMemberUnPrepSave
0x4946CC partyMemberSave
0x494790 partyMemberFindID
0x4947AC partyMemberPrepLoad
0x49480C partyMemberPrepLoadInstance
0x4949C4 partyMemberRecoverLoad
0x494A88 partyMemberRecoverLoadInstance
0x494BBC partyMemberLoad
0x494D7C partyMemberClear
0x494DD0 partyMemberSyncPosition
0x494EB8 partyMemberRestingHeal
0x494F24 partyMemberFindObjFromPid
0x494F64 isPotentialPartyMember
0x494FC4 DWORD isPartyMember(GameObject* obj)
0x495010 getPartyMemberCount
0x495070 partyMemberNewObjID
0x4950F4 partyMemberNewObjIDRecurseFind
0x495140 partyMemberPrepItemSaveAll
0x495198 partyMemberPrepItemSave
0x495204 partyMemberItemSaveAll
0x495234 partyMemberItemSave
0x495388 partyMemberItemRecover
0x495490 partyMemberItemRecoverAll
0x4954C4 partyMemberClearItemList
0x495520 partyMemberSkill
0x495560 partyMemberWithHighestSkill
0x4955C8 partyMemberHighestSkillLevel
0x495620 partyFixMultipleMembers
0x495870 partyMemberSaveProtos
0x4958B0 partyMemberHasAIDisposition
0x495920 partyMemberHasAIBurstValue
0x495980 partyMemberHasAIRunAwayValue
0x4959E0 partyMemberHasAIWeaponPrefValue
0x495A40 partyMemberHasAIDistancePrefValue
0x495AA0 partyMemberHasAIAttackWhoValue
0x495B00 partyMemberHasAIChemUseValue
0x495B60 partyMemberIncLevels
0x495EA8 partyMemberCopyLevelInfo
0x495FF0 DWORD partyMemberGetCurLevel(GameObject* obj)
0x496058 partyMemberNeedsHealing
0x4960DC partyMemberMaxHealingNeeded
0x496164 partyClearDrugEffects
0x49618C partyClearDrugsOnMember
0x4961B0 getWord
0x4961D4 readPcxHeader
0x49636C pcxDecodeScanline
0x49641C readPcxVgaPalette
0x496494 loadPCX
0x4965A0 perk_init
0x4966B0 perk_reset
0x4966B8 perk_exit
0x4966E4 perk_load
0x496738 perk_save
0x49678C perkGetLevelData
0x49680C DWORD perk_can_add(GameObject* critter, DWORD perkId)
0x496A0C perk_defaults
0x496A5C perk_add
0x496A9C perk_add_force
0x496AFC perk_sub
0x496B44 perk_make_list
0x496B78 DWORD perk_level(GameObject* critter, DWORD perkId)
0x496B90 perk_name
0x496BB4 perk_description
0x496BD8 perk_skilldex_fid
0x496BFC void perk_add_effect(GameObject* critter, DWORD perkId)
0x496CE0 perk_remove_effect
0x496DD0 perk_adjust_skill
0x497004 pipboy
0x497228 StartPipboy
0x497828 EndPipboy
0x49791C pip_num
0x4979B4 pip_date
0x497A40 pip_print
0x497B64 pip_back
0x497BD4 save_pipboy
0x497BD8 PipStatus
0x498734 ListStatLines
0x4988A0 ShowHoloDisk
0x498C40 ListHoloDiskTitles
0x498D34 qscmp
0x498D40 PipAutomaps
0x498F30 PrintAMelevList
0x499150 PrintAMList
0x49932C PipArchives
0x4993DC ListArchive
0x499518 PipAlarm
0x4996B4 DrawAlarmText
0x4997B8 DrawAlrmHitPnts
0x499870 NewFuncDsply
0x4998C0 AddHotLines
0x4999C0 NixHotLines
0x499A24 TimedRest
0x499FCC Check4Health
0x49A008 AddHealth
0x49A03C ClacTime
0x49A0C8 ScreenSaver
0x49A5D4 quest_init
0x49A7E4 quest_exit
0x49A818 quest_qsort_compare
0x49A824 holodisks_init
0x49A968 holodisks_exit
0x49A9A0 obj_sid
0x49A9B4 obj_new_sid
0x49AAC0 DWORD obj_new_sid_inst(GameObject* object, DWORD sType, DWORD scriptIndex)
0x49AB7C obj_powered_item_charges
0x49ABC8 obj_use_powered_item_charges
0x49AC3C obj_look_at
0x49AC4C obj_look_at_func
0x49AD78 obj_examine
0x49AD88 obj_examine_func
0x49B650 obj_pickup
0x49B73C obj_remove_from_inven
0x49B8B0 void obj_drop(GameObject* source, GameObject* objectToDrop)
0x49B9A0 DWORD obj_destroy(GameObject* object)
0x49B9F0 obj_use_book
0x49BBA8 obj_use_flare
0x49BC60 obj_use_radio
0x49BCB4 obj_use_explosive
0x49BDE8 obj_use_power_on_car
0x49BE88 obj_use_misc_item
0x49BF38 protinst_use_item
0x49BFE8 protinstTestDroppedExplosive
0x49C124 obj_use_item
0x49C240 protinst_default_use_item
0x49C3CC protinst_use_item_on
0x49C5FC obj_use_item_on
0x49C6AC rebuild_all_light
0x49C6BC check_scenery_ap_cost
0x49C740 obj_use
0x49C900 obj_use_ladder_top
0x49C9A4 obj_use_ladder_bottom
0x49CA48 obj_use_stairs
0x49CAEC obj_use_elevator
0x49CAF4 set_door_state_open
0x49CB04 set_door_state_closed
0x49CB14 check_door_state
0x49CCB8 obj_use_door
0x49CE7C obj_use_container
0x49D078 obj_use_skill_on
0x49D140 obj_is_a_portal
0x49D178 obj_is_lockable
0x49D1C8 obj_is_locked
0x49D20C obj_lock
0x49D250 obj_unlock
0x49D294 bool obj_is_openable(GameObject* object)
0x49D2E4 obj_is_open
0x49D2F4 obj_toggle_open
0x49D3D8 obj_open
0x49D3F4 obj_close
0x49D410 DWORD obj_lock_is_jammed(GameObject* object)
0x49D448 obj_jam_lock
0x49D480 void obj_unjam_lock(GameObject* object)
0x49D4B8 obj_unjam_all_locks
0x49D4D4 obj_attempt_placement
0x49D628 objPMAttemptPlacement
0x49D6D8 proto_inst_add_to_inven
0x49D758 proto_choose_pid_inven_fid
0x49D77C proto_choose_multi_pids_update
0x49D9B0 proto_choose_multi_pids_func
0x49DD5C proto_choose_multi_pids
0x49DD68 proto_choose_pid
0x49E070 proto_edit_mod_pid
0x49E270 void proto_make_path(char* buffer, DWORD pid)
0x49E2F8 proto_list_new
0x49E4D4 proto_find_str
0x49E758 proto_list_str
0x49E984 proto_size
0x49E99C proto_action_can_use
0x49E9DC proto_action_can_use_on
0x49EA1C proto_action_can_look_at
0x49EA24 proto_action_can_talk_to
0x49EA5C proto_action_can_pickup
0x49EAA4 char* proto_get_msg_info(DWORD pid, DWORD msgType)
0x49EAFC proto_name
0x49EB1C proto_description
0x49EB2C proto_item_init
0x49EBFC proto_item_subdata_init
0x49EDB4 proto_critter_init
0x49EEA4 clear_pupdate_data
0x49EEB8 proto_read_CombatData
0x49EF40 proto_write_CombatData
0x49F004 proto_read_protoUpdateData
0x49F350 proto_read_bonusDB
0x49F398 proto_write_bonusDB
0x49F428 proto_write_protoUpdateData
0x49F73C proto_update_gen
0x49F8A0 proto_update_init
0x49F984 void proto_dude_update_gender()
0x49FA64 proto_dude_init
0x49FBBC proto_scenery_init
0x49FC74 proto_scenery_subdata_init
0x49FCFC proto_wall_init
0x49FD84 proto_tile_init
0x49FDFC proto_misc_init
0x49FE74 proto_copy_proto
0x49FEDC proto_is_subtype
0x49FFD8 proto_data_member
0x4A0390 proto_init
0x4A0814 proto_reset
0x4A0898 proto_exit
0x4A08E0 proto_header_load
0x4A0AEC proto_read_item_data
0x4A0ED0 proto_read_scenery_data
0x4A0FA0 proto_read_protoSubNode
0x4A1390 proto_write_item_data
0x4A16E4 proto_write_scenery_data
0x4A17B4 proto_write_protoSubNode
0x4A1B30 proto_save_pid
0x4A1C3C proto_load_pid
0x4A1D98 proto_find_free_subnode
0x4A1E90 proto_new
0x4A1F1C proto_flush
0x4A2040 proto_remove_some_list
0x4A2094 proto_remove_list
0x4A20F4 proto_remove_all
0x4A2108 DWORD proto_ptr(DWORD pid, Proto** ptrPtr)
0x4A21DC proto_new_id
0x4A21F8 proto_undo_new_id
0x4A2214 proto_max_id
0x4A2220 proto_find_art_match
0x4A22C0 ResetPlayer
0x4A2320 queue_init
0x4A2330 queue_reset
0x4A2338 queue_load
0x4A24E0 queue_save
0x4A258C DWORD queue_add(DWORD time, GameObject* object, void* data, DWORD qType)
0x4A25F4 queue_remove
0x4A264C void queue_remove_this(GameObject* object, DWORD qType)
0x4A26A8 queue_find
0x4A26D0 queue_process
0x4A2748 queue_clear
0x4A2790 void queue_clear_type(DWORD qType, void* func)
0x4A2808 queue_next_time
0x4A281C queue_destroy
0x4A2828 queue_explode
0x4A2830 queue_explode_exit
0x4A28E4 queue_premature
0x4A2920 queue_leaving_map
0x4A294C queue_is_empty
0x4A295C void* queue_find_first(GameObject* object, DWORD qType)
0x4A2994 void* queue_find_next(GameObject* object, DWORD qType)
0x4A29D0 reaction_set
0x4A29E4 level_to_reaction
0x4A29E8 reaction_to_level
0x4A2A2C reaction_to_level_internal
0x4A2B28 reaction_get
0x4A2B50 regionSetBound
0x4A2C14 pointInRegion
0x4A2D78 allocateRegion
0x4A2E68 regionAddPoint
0x4A2F0C regionDelete
0x4A2F54 regionAddName
0x4A2F80 regionGetName
0x4A2F98 regionGetUserData
0x4A2FB4 regionSetUserData
0x4A2FD0 regionSetFlag
0x4A2FD4 regionGetFlag
0x4A2FE0 roll_init
0x4A3000 roll_check
0x4A3030 roll_check_critical
0x4A30C0 DWORD roll_random(DWORD minValue, DWORD maxValue)
0x4A30FC ran1
0x4A3174 init_random
0x4A31A0 roll_set_seed
0x4A31C4 random_seed
0x4A31E0 seed_generator
0x4A3258 timer_read
0x4A3264 check_chi_squared
0x4A3330 game_time
0x4A3338 game_time_date
0x4A33C8 game_time_hour
0x4A3420 game_time_hour_str
0x4A347C set_game_time
0x4A349C set_game_time_in_seconds
0x4A34CC inc_game_time
0x4A3518 inc_game_time_in_seconds
0x4A3570 gtime_q_add
0x4A3620 gtime_q_process
0x4A3690 scriptsCheckGameEvents
0x4A382C scr_map_q_process
0x4A386C DWORD new_obj_id()
0x4A38C0 scr_find_obj
0x4A390C DWORD scr_find_sid_from_program(Program* program)
0x4A39AC GameObject* scr_find_obj_from_program(Program* program)
0x4A3AAC script_name
0x4A3B0C scr_set_objs
0x4A3B34 scr_set_ext_param
0x4A3B54 scr_set_action_num
0x4A3B74 Program* loadProgram(char* fileName)
0x4A3C2C doBkProcesses
0x4A3CA0 script_chk_critters
0x4A3D84 script_chk_timed_events
0x4A3E30 scrSetQueueTestVals
0x4A3E3C scrQueueRemoveFixed
0x4A3E60 script_q_add
0x4A3EDC script_q_save
0x4A3F04 script_q_load
0x4A3F4C script_q_process
0x4A3F80 scripts_clear_state
0x4A3F90 scripts_clear_combat_requests
0x4A3FB4 scripts_check_state
0x4A43A0 scripts_check_state_in_combat
0x4A457C scripts_request_combat
0x4A45D4 scripts_request_combat_locked
0x4A461C scripts_request_townmap
0x4A4644 scripts_request_worldmap
0x4A466C scripts_request_elevator
0x4A4730 scripts_request_explosion
0x4A4754 scripts_request_dialog
0x4A4770 scripts_request_endgame_slideshow
0x4A477C scripts_request_loot_container
0x4A479C scripts_request_steal_container
0x4A47BC script_make_path
0x4A4810 exec_script_proc
0x4A49D0 void scr_build_lookup_table(ScriptInstance* script)
0x4A4A08 scriptHasProc
0x4A4A3C scr_list_new
0x4A4B38 scr_find_str
0x4A4B44 scr_find_str_index
0x4A4D50 scrInitListInfo
0x4A4EFC scrExitListInfo
0x4A4F28 scr_find_str_run_info
0x4A4F60 scr_index_to_name
0x4A4F90 scr_set_dude_script
0x4A5044 scr_clear_dude_script
0x4A50A8 scr_init
0x4A5120 scr_reset
0x4A5138 scr_game_init
0x4A5240 scr_game_reset
0x4A5274 scr_exit
0x4A52F4 scr_message_free
0x4A535C scr_game_exit
0x4A53A8 scr_enable
0x4A53D0 scr_disable
0x4A53E0 scr_enable_critters
0x4A53F0 scr_disable_critters
0x4A5400 scr_game_save
0x4A5424 scr_game_load
0x4A5448 scr_game_load2
0x4A5490 scr_header_load
0x4A5590 scr_write_ScriptSubNode
0x4A5704 scr_write_ScriptNode
0x4A5768 scr_save
0x4A5A1C scr_read_ScriptSubNode
0x4A5BE8 scr_read_ScriptNode
0x4A5C50 scr_load
0x4A5E34 DWORD scr_ptr(DWORD scriptId, ScriptInstance** scriptPtr)
0x4A5ED8 scr_new_id
0x4A5F1C scr_max_id
0x4A5F28 DWORD scr_new(DWORD* scriptID, DWORD sType)
0x4A6088 scr_add_spatial
0x4A60D4 scr_remove_local_vars
0x4A61D4 DWORD scr_remove(DWORD scriptID)
0x4A63D8 scr_remove_spatial
0x4A63E0 scr_remove_all
0x4A64A8 scr_remove_all_force
0x4A6524 ScriptInstance* scr_find_first_at(DWORD elevation)
0x4A6564 ScriptInstance* scr_find_next_at()
0x4A65E8 scr_spatials_enabled
0x4A65F0 scr_spatials_enable
0x4A6600 scr_spatials_disable
0x4A6610 scr_chk_spatials_in
0x4A6714 tile_in_tile_bound
0x4A672C scr_num_active_scripts
0x4A6754 scr_num_nodes
0x4A677C scr_load_all_scripts
0x4A67DC scr_exec_map_enter_scripts
0x4A67E4 scr_exec_map_update_scripts
0x4A69A0 scr_exec_map_exit_scripts
0x4A69AC scr_print_script_usage
0x4A6B64 scr_get_dialog_msg_file
0x4A6C50 scr_get_msg_str
0x4A6C5C scr_get_msg_str_speech
0x4A6D64 DWORD scr_get_local_var(DWORD sid, DWORD varId, DWORD* value)
0x4A6E58 DWORD scr_set_local_var(DWORD sid, DWORD varId, DWORD value)
0x4A6EFC scr_end_combat
0x4A6F70 scr_explode_scenery
0x4A71D0 select_character
0x4A7468 select_init
0x4A7AD4 select_exit
0x4A7D58 select_update_display
0x4A7E08 select_display_portrait
0x4A7EA8 select_display_stats
0x4A8AE4 select_display_bio
0x4A8BD0 select_fatal_error
0x4A8BE0 selfrun_get_list
0x4A8C10 selfrun_free_list
0x4A8C28 selfrun_prep_playback
0x4A8C88 selfrun_playback_loop
0x4A8D28 selfrun_prep_recording
0x4A8DDC selfrun_recording_loop
0x4A8E74 selfrun_playback_callback
0x4A8E8C selfrun_load_data
0x4A8EF4 selfrun_save_data
0x4A8FC0 sfxc_init
0x4A90FC sfxc_exit
0x4A9140 sfxc_is_initialized
0x4A9148 sfxc_flush
0x4A915C sfxc_cached_open
0x4A9220 sfxc_cached_close
0x4A9274 sfxc_cached_read
0x4A9350 sfxc_cached_write
0x4A9358 sfxc_cached_seek
0x4A93F4 sfxc_cached_tell
0x4A9418 sfxc_cached_file_size
0x4A9434 sfxc_effect_size
0x4A945C sfxc_effect_load
0x4A94CC sfxc_effect_free
0x4A94D4 sfxc_handle_list_create
0x4A9518 sfxc_handle_list_destroy
0x4A9550 sfxc_handle_create
0x4A9604 sfxc_handle_destroy
0x4A961C sfxc_handle_is_legal
0x4A9660 sfxc_mode_is_legal
0x4A967C sfxc_decode
0x4A9774 sfxc_ad_reader
0x4A98E0 sfxl_tag_is_legal
0x4A98F4 sfxl_init
0x4A9C04 sfxl_exit
0x4A9C28 sfxl_name_to_tag
0x4A9CD8 sfxl_name
0x4A9D90 sfxl_size_full
0x4A9DBC sfxl_size_cached
0x4A9DE8 sfxl_index
0x4A9E20 sfxl_index_to_tag
0x4A9E44 sfxl_destroy
0x4A9EA0 sfxl_get_names
0x4AA000 sfxl_copy_names
0x4AA050 sfxl_get_sizes
0x4AA200 sfxl_sort_by_name
0x4AA228 sfxl_compare_by_name
0x4AA234 sfxl_ad_reader
0x4AA250 compare
0x4AA25C getDirList
0x4AA290 freeDirList
0x4AA2A4 getFileList
0x4AA2DC freeFileList
0x4AA318 skill_init
0x4AA448 skill_reset
0x4AA478 skill_exit
0x4AA488 skill_load
0x4AA4A8 skill_save
0x4AA4C8 skill_set_defaults
0x4AA4E4 void skill_set_tags(DWORD* tags, DWORD num)
0x4AA508 void skill_get_tags(DWORD* tags, DWORD num)
0x4AA52C DWORD skill_is_tagged(DWORD skill)
0x4AA558 DWORD skill_level(GameObject* critter, DWORD statID)
0x4AA654 skill_base
0x4AA680 skill_points
0x4AA6BC skill_inc_point
0x4AA7F8 DWORD skill_inc_point_force(GameObject* critter, DWORD skill)
0x4AA87C skillLevelCost
0x4AA8C4 skill_dec_point
0x4AAA34 DWORD skill_dec_point_force(GameObject* critter, DWORD skill)
0x4AAAA4 skill_result
0x4AAB34 skill_contest
0x4AAB9C skill_name
0x4AABC0 skill_description
0x4AABE4 skill_attribute
0x4AAC08 skill_pic
0x4AAC2C show_skill_use_messages
0x4AAD08 skill_use
0x4ABBE4 skill_check_stealing
0x4ABDEC skill_game_difficulty
0x4ABE44 skill_use_slot_available
0x4ABEB8 skill_use_slot_add
0x4ABF24 skill_use_slot_clear
0x4ABF3C skill_use_slot_save
0x4ABF5C skill_use_slot_load
0x4ABF7C skillGetPartyMemberString
0x4ABFD0 skilldex_select
0x4AC054 skilldex_start
0x4AC67C skilldex_end
0x4AC6F0 defaultMalloc_2
0x4AC6F8 defaultRealloc_2
0x4AC700 defaultFree_2
0x4AC708 soundRegisterAlloc
0x4AC71C soundFileSize
0x4AC750 soundTellData
0x4AC758 soundWriteData
0x4AC760 soundReadData
0x4AC768 soundOpenData
0x4AC774 soundSeekData
0x4AC77C soundCloseData
0x4AC784 soundGetDefaultFileIO
0x4AC790 soundError
0x4AC7B0 refreshSoundBuffers
0x4ACC58 soundInit
0x4AD04C soundClose
0x4AD0FC soundAllocate
0x4AD2BC soundSetBuffers
0x4AD308 preloadBuffers
0x4AD498 soundLoad
0x4AD504 soundRewind
0x4AD5C8 addSoundData
0x4AD6C0 soundSetData
0x4AD73C soundPlay
0x4AD828 soundStop
0x4AD8DC soundDelete
0x4AD940 numSoundsPlaying
0x4AD948 soundContinue
0x4ADA84 soundPlaying
0x4ADAC4 soundDone
0x4ADB04 soundFading
0x4ADB44 soundPaused
0x4ADB84 soundFlags
0x4ADBC4 soundType
0x4ADC6C soundSetUserData
0x4ADCAC soundUserData
0x4ADCEC soundSetNameMangler
0x4ADD00 soundLoop
0x4ADD68 soundVolumeHMItoDirectSound
0x4ADE0C soundVolume
0x4ADE80 soundGetVolume
0x4ADF68 soundPanLocation
0x4ADFE0 soundPitch
0x4ADFF0 soundSetCallback
0x4AE02C soundSetChannel
0x4AE09C soundSetDefaultChannel
0x4AE0B0 soundSetReadLimit
0x4AE0E4 soundPause
0x4AE1F0 soundUnpause
0x4AE2FC soundSetFileIO
0x4AE378 soundMgrDelete
0x4AE49C soundSetHardwareSettings
0x4AE4AC soundSetLibPath
0x4AE4BC detectSoundDevice
0x4AE4CC soundTimerInit
0x4AE4DC soundGetDriver
0x4AE4E0 setSoundDevice
0x4AE4F0 soundStageLoop
0x4AE578 soundSetMasterVolume
0x4AE5E0 registerTimedEvent
0x4AE614 removeTimedEvent
0x4AE634 soundGetPosition
0x4AE6CC soundSetPosition
0x4AE7E0 soundSetMinReadBuffer
0x4AE830 removeFadeSound
0x4AE888 soundRemoveFadingSound
0x4AE8B0 fadeSounds
0x4AE988 internalSoundFade
0x4AEB0C soundFade
0x4AEB18 soundFadePause
0x4AEB28 soundMgrInsert
0x4AEB54 soundFlushAllSounds
0x4AEB74 soundMgrClose
0x4AEBC0 soundUpdate_
0x4AEBE0 soundUpdate
0x4AEC00 soundSetDefaultFileIO
0x4AEC60 soundPauseAll
0x4AECAC soundPauseFadeAll
0x4AED0C soundUnpauseAll
0x4AED2C soundSetDeleteCallback
0x4AED70 stat_init
0x4AEEC0 stat_reset
0x4AEEE4 stat_exit
0x4AEEF4 stat_load
0x4AEF20 stat_save
0x4AEF48 DWORD stat_level(GameObject* critter, DWORD statId)
0x4AF3E0 DWORD stat_get_base(GameObject* critter, DWORD statID)
0x4AF408 DWORD stat_get_base_direct(GameObject* critter, DWORD statID)
0x4AF474 DWORD stat_get_bonus(GameObject* critter, DWORD statID)
0x4AF4BC stat_set_base
0x4AF5D4 inc_stat
0x4AF608 dec_stat
0x4AF63C DWORD stat_set_bonus(GameObject* critter, DWORD statID, DWORD amount)
0x4AF6CC stat_set_defaults
0x4AF6FC stat_recalc_derived
0x4AF854 stat_name
0x4AF898 stat_description
0x4AF8DC stat_level_description
0x4AF8FC stat_pc_get
0x4AF910 stat_pc_set
0x4AF980 stat_pc_set_defaults
0x4AF9A0 stat_pc_min_exp
0x4AF9F4 stat_pc_name
0x4AFA14 stat_pc_description
0x4AFA34 stat_picture
0x4AFA78 stat_result
0x4AFAA8 void stat_pc_add_experience(DWORD amount)
0x4AFAB8 statPCAddExperienceCheckPMs
0x4AFC38 statPcResetExperience
0x4AFD10 strParseValue
0x4AFD88 strParseStringN
0x4AFE08 strParseStrFromList
0x4AFEDC strParseStrFromFunc
0x4AFF7C strParseStrSepVal
0x4B005C strParseStrAndSepVal
0x4B0130 text_object_init
0x4B021C text_object_reset
0x4B0280 text_object_exit
0x4B02A4 text_object_disable
0x4B02B0 text_object_enable
0x4B02BC text_object_is_enabled
0x4B02C4 text_object_set_base_delay
0x4B0308 text_object_get_base_delay
0x4B031C text_object_set_line_delay
0x4B0358 text_object_get_line_delay
0x4B036C DWORD text_object_create(GameObject* object, char* text, DWORD font, DWORD colorText, DWORD colorOutline, RECT* rect)
0x4B06E8 text_object_render
0x4B07F0 text_object_count
0x4B07F8 text_object_bk
0x4B0954 text_object_get_offset
0x4B0C00 text_object_remove
0x4B0C40 tile_init
0x4B11E4 tile_set_border
0x4B12A0 tile_refresh_enabled
0x4B12A8 tile_disable_refresh
0x4B12B4 tile_enable_refresh
0x4B12C0 void tile_refresh_rect(RECT* boundRect, DWORD elevation)
0x4B12D8 void tile_refresh_display()
0x4B12F8 tile_set_center
0x4B1554 refresh_mapper
0x4B15E8 refresh_game
0x4B1634 tile_toggle_roof
0x4B166C tile_roof_visible
0x4B1674 DWORD tile_coord(DWORD tile, DWORD* outX, DWORD* outY)
0x4B1754 tile_num
0x4B185C DWORD tile_dist(DWORD scrTile, DWORD dstTile)
0x4B1994 tile_in_front_of
0x4B1A00 tile_to_right_of
0x4B1A6C DWORD tile_num_in_direction(DWORD tile, DWORD rotation, DWORD distance)
0x4B1ABC DWORD tile_dir(DWORD scrTile, DWORD dstTile)
0x4B1B84 tile_num_beyond
0x4B1D20 DWORD tile_on_edge(DWORD tile)
0x4B1D80 tile_enable_scroll_blocking
0x4B1D8C tile_disable_scroll_blocking
0x4B1D98 tile_get_scroll_blocking
0x4B1DA0 tile_enable_scroll_limiting
0x4B1DAC tile_disable_scroll_limiting
0x4B1DB8 tile_get_scroll_limiting
0x4B1DC0 DWORD square_coord(DWORD square, DWORD* outX, DWORD* outY)
0x4B1E60 square_coord_roof
0x4B1F04 square_num
0x4B1F4C square_num_roof
0x4B1F94 square_xy
0x4B203C square_xy_roof
0x4B20E8 square_render_roof
0x4B22D0 roof_fill_on
0x4B23D4 tile_fill_roof
0x4B24E0 roof_draw
0x4B2944 square_render_floor
0x4B2B10 square_roof_intersect
0x4B2C78 squares_in_rect
0x4B2E60 grid_toggle
0x4B2E78 grid_on
0x4B2E84 grid_off
0x4B2E90 get_grid_flag
0x4B2E98 grid_render
0x4B2EF0 grid_draw
0x4B2F4C draw_grid
0x4B30C4 floor_draw
0x4B372C tile_make_line
0x4B3924 tile_scroll_to
0x4B39F0 trait_init
0x4B3ADC trait_reset
0x4B3AF8 trait_exit
0x4B3B08 trait_load
0x4B3B28 trait_save
0x4B3B48 trait_set
0x4B3B54 trait_get
0x4B3B68 trait_name
0x4B3B88 trait_description
0x4B3BA8 trait_pic
0x4B3BC8 DWORD trait_level(DWORD traitID)
0x4B3C7C trait_adjust_stat
0x4B40FC trait_adjust_skill
0x4B4190 trap_init
0x4B4194 trap_data_fill
0x4B41D8 trap_check_individual
0x4B4244 trap_check_heap
0x4B42AC trap_check_duplicate
0x4B43A4 trap_report
0x4B4430 duplicate_report
0x4B44F0 heap_report
0x4B4568 trap_check_bk
0x4B4580 getverstr
0x4B45A0 deleteChar
0x4B45C8 insertChar
0x4B45F8 doCursor
0x4B4788 textInputRegionDispatch
0x4B4C24 winUpdateBackgroundTextInputRegion
0x4B4D54 winSetupBackgroundTextInputRegion
0x4B4E90 winDoBackgroundTextInputRegion
0x4B5154 winDeleteBackgroundTextInputRegion
0x4B51D4 win_add_text_input_region
0x4B53A8 windowSelectTextInputRegion
0x4B53D0 win_delete_all_text_input_regions
0x4B541C win_delete_text_input_region
0x4B54C8 win_set_text_input_delete_func
0x4B5508 win_add_text_region
0x4B5634 win_print_text_region
0x4B5714 win_print_substr_region
0x4B57E4 win_update_text_region
0x4B5864 win_delete_text_region
0x4B58A0 win_delete_all_update_regions
0x4B58E8 win_text_region_style
0x4B5998 win_delete_widgets
0x4B5A04 widgetDoInput
0x4B5A2C win_center_str
0x4B5A64 showRegion
0x4B5BE8 draw_widgets
0x4B5C24 update_widgets
0x4B5C4C win_register_update
0x4B5D0C win_delete_update_region
0x4B5D54 win_do_updateregions
0x4B5D78 freeStatusBar
0x4B5DE4 initWidgets
0x4B5E1C widgetsClose
0x4B5E7C drawStatusBar
0x4B5F5C real_win_set_status_bar
0x4B5F80 real_win_update_status_bar
0x4B5FD4 real_win_increment_status_bar
0x4B6020 real_win_add_status_bar
0x4B60CC real_win_get_status_info
0x4B6100 real_win_modify_status_info
0x4B6120 windowGetFont
0x4B6128 windowSetFont
0x4B6138 windowResetTextAttributes
0x4B6160 windowGetTextFlags
0x4B6168 windowSetTextFlags
0x4B6174 windowGetTextColor
0x4B6198 windowGetHighlightColor
0x4B61BC windowSetTextColor
0x4B6208 windowSetHighlightColor
0x4B6254 windowNumLines
0x4B62E4 checkRegion
0x4B6858 windowCheckRegion
0x4B69BC windowRefreshRegions
0x4B6A54 checkAllRegions
0x4B6C48 windowAddInputFunc
0x4B6CE8 doRegionRightFunc
0x4B6D68 doRegionFunc
0x4B6DE8 windowActivateRegion
0x4B6ED0 getInput
0x4B6F60 doButtonOn
0x4B7028 doButtonOff
0x4B7034 doButtonPress
0x4B703C doButtonRelease
0x4B7048 doRightButtonPress
0x4B710C doRightButtonRelease
0x4B7118 setButtonGFX
0x4B75F4 redrawButton
0x4B7610 windowHide
0x4B7648 windowShow
0x4B7680 windowDraw
0x4B76B8 windowDrawRect
0x4B76F8 windowDrawRectID
0x4B7734 DWORD windowWidth()
0x4B7754 windowHeight
0x4B7774 windowSX
0x4B77A4 windowSY
0x4B77D4 pointInWindow
0x4B7828 windowGetRect
0x4B7854 windowGetID
0x4B785C windowGetGNWID
0x4B787C windowGetSpecificGNWID
0x4B78A4 deleteWindow
0x4B7AC4 resizeWindow
0x4B7E7C scaleWindow
0x4B7F3C DWORD createWindow(char* winName, DWORD x, DWORD y, DWORD width, DWORD height, DWORD color, DWORD flags)
0x4B80A4 windowOutput
0x4B814C windowGotoXY
0x4B81C4 DWORD selectWindowID(DWORD sWinID)
0x4B821C selectWindow
0x4B82A0 windowGetDefined
0x4B82DC windowGetBuffer
0x4B8308 windowGetName
0x4B8330 pushWindow
0x4B83D4 popWindow
0x4B8414 windowPrintBuf
0x4B8638 windowWordWrap
0x4B880C windowFreeWordList
0x4B8854 DWORD windowWrapLineWithSpacing(DWORD winID, char* text, DWORD width, DWORD height, DWORD x, DWORD y, DWORD color, DWORD alignment, DWORD lineSpacing)
0x4B88FC windowWrapLine
0x4B8920 windowPrintRect
0x4B89B0 windowFormatMessage
0x4B8A14 windowFormatMessageColor
0x4B8A60 windowPrint
0x4B8ADC windowPrintFont
0x4B8B10 displayInWindow
0x4B8C68 displayFile
0x4B8CA8 displayFileRaw
0x4B8CE8 windowDisplayWithPalette
0x4B8E0C windowDisplayRaw
0x4B8E50 windowDisplay
0x4B8EA0 windowDisplayScaled
0x4B8EF0 windowDisplayBuf
0x4B8F64 windowDisplayTransBuf
0x4B8FD8 windowDisplayBufScaled
0x4B9048 windowGetXres
0x4B9050 windowGetYres
0x4B9058 removeProgramReferences_3
0x4B9190 initWindow
0x4B9454 windowSetWindowFuncs
0x4B947C windowClose
0x4B9548 windowDeleteButton
0x4B97F8 windowEnableButton
0x4B98C4 windowGetButtonID
0x4B9928 windowSetButtonFlag
0x4B99B4 windowRegisterButtonSoundFunc
0x4B99C8 windowAddButton
0x4B9DD0 windowAddButtonGfx
0x4B9F40 windowAddButtonMask
0x4B9FC8 windowAddButtonBuf
0x4BA11C windowAddButtonProc
0x4BA1B4 windowAddButtonRightProc
0x4BA238 windowAddButtonCfunc
0x4BA2B4 windowAddButtonRightCfunc
0x4BA34C windowAddButtonText
0x4BA364 windowAddButtonTextWithOffsets
0x4BA694 windowFill
0x4BA738 windowFillRect
0x4BA844 windowEndRegion
0x4BA8A4 windowRegionGetUserData
0x4BA914 windowRegionSetUserData
0x4BA988 windowCheckRegionExists
0x4BA9FC windowStartRegion
0x4BAB68 windowAddRegionPoint
0x4BAC58 windowAddRegionRect
0x4BACA0 windowAddRegionCfunc
0x4BAD30 windowAddRegionRightCfunc
0x4BADC0 windowAddRegionProc
0x4BAE8C windowAddRegionRightProc
0x4BAF2C windowSetRegionFlag
0x4BAFA8 windowAddRegionName
0x4BB0A8 windowDeleteRegion
0x4BB220 updateWindows
0x4BB234 windowMoviePlaying
0x4BB23C windowSetMovieFlags
0x4BB24C windowPlayMovie
0x4BB280 windowPlayMovieRect
0x4BB2C4 windowStopMovie
0x4BB2CC copyRect
0x4BB3A8 drawScaled
0x4BB5D0 drawScaledBuf
0x4BB7D8 alphaBltBuf
0x4BB9E4 alphaBltBufRect
0x4BBFC4 fillBuf3x3
0x4BC5E0 windowEnableCheckRegion
0x4BC5F0 windowDisableCheckRegion
0x4BC600 windowSetHoldTime
0x4BC60C windowAddTextRegion
0x4BC668 windowPrintTextRegion
0x4BC670 windowUpdateTextRegion
0x4BC678 windowDeleteTextRegion
0x4BC680 windowTextRegionStyle
0x4BC698 windowAddTextInputRegion
0x4BC6A0 windowDeleteTextInputRegion
0x4BC6E4 windowSetTextInputDeleteFunc
0x4BC6F0 DWORD _word_wrap(char* text, BYTE maxWidth, DWORD* buf, unsigned char* count)
0x4BC890 wmSetFlags
0x4BC89C wmWorldMap_init
0x4BC984 wmGenDataInit
0x4BCBFC wmGenDataReset
0x4BCE00 wmWorldMap_exit
0x4BCEF8 wmWorldMap_reset
0x4BCF28 wmWorldMap_save
0x4BD28C wmWorldMap_load
0x4BD678 wmWorldMapSaveTempData
0x4BD6B4 wmWorldMapLoadTempData
0x4BD6F0 wmConfigInit
0x4BD9F0 wmReadEncounterType
0x4BDB64 wmParseEncounterTableIndex
0x4BDCA8 wmParseEncounterSubEncStr
0x4BDE94 wmParseFindSubEncTypeMatch
0x4BDED8 wmFindEncBaseTypeMatch
0x4BDF34 wmReadEncBaseType
0x4BE140 wmParseEncBaseSubTypeStr
0x4BE2A0 wmEncBaseTypeSlotInit
0x4BE2C4 wmEncBaseSubTypeSlotInit
0x4BE32C wmEncounterSubEncSlotInit
0x4BE34C wmEncounterTypeSlotInit
0x4BE3B8 wmEncounterTableSlotInit
0x4BE3D4 wmTileSlotInit
0x4BE400 wmTerrainTypeSlotInit
0x4BE414 wmParseTerrainTypes
0x4BE598 wmParseTerrainRndMaps
0x4BE61C wmParseSubTileInfo
0x4BE6D4 wmParseFindEncounterTypeMatch
0x4BE73C wmParseFindTerrainTypeMatch
0x4BE7A4 wmParseEncounterItemType
0x4BE888 wmParseItemType
0x4BE988 wmParseConditional
0x4BEA24 wmParseSubConditional
0x4BEEBC wmParseConditionalEval
0x4BEF1C wmAreaSlotInit
0x4BEF68 wmAreaInit
0x4BF3E0 wmParseFindMapIdxMatch
0x4BF448 wmEntranceSlotInit
0x4BF47C wmMapSlotInit
0x4BF4BC wmMapInit
0x4BF954 wmRStartSlotInit
0x4BF96C wmMapMaxCount
0x4BF974 wmMapIdxToName
0x4BF9BC wmMapMatchNameToIdx
0x4BFA44 wmMapIdxIsSaveable
0x4BFA64 wmMapIsSaveable
0x4BFA90 wmMapDeadBodiesAge
0x4BFABC wmMapCanRestHere
0x4BFAFC wmMapPipboyActive
0x4BFB08 wmMapMarkVisited
0x4BFB64 wmMatchEntranceFromMap
0x4BFBE8 wmMatchEntranceElevFromMap
0x4BFC7C wmMatchAreaFromMap
0x4BFD50 wmMapMarkMapEntranceState
0x4BFE0C wmWorldMap
0x4BFE10 wmWorldMapFunc
0x4C056C wmCheckGameAreaEvents
0x4C05C4 wmInterfaceCenterOnParty
0x4C0624 wmCheckGameEvents
0x4C0634 wmRndEncounterOccurred
0x4C0BE4 wmPartyFindCurSubTile
0x4C0C00 wmFindCurSubTileFromPos
0x4C0CA8 wmFindCurTileFromPos
0x4C0CF4 wmRndEncounterPick
0x4C0FA4 wmSetupRandomEncounter
0x4C11FC wmSetupCritterObjs
0x4C155C wmSetupRndNextTileNumInit
0x4C16F0 wmSetupRndNextTileNum
0x4C1A64 DWORD wmEvalTileNumForPlacement(DWORD tile)
0x4C1AC8 wmEvalConditional
0x4C1C0C wmEvalSubConditional
0x4C1C50 wmGameTimeIncrement
0x4C1CE8 wmGrabTileWalkMask
0x4C1D9C wmWorldPosInvalid
0x4C1E54 wmPartyInitWalking
0x4C1F90 void wmPartyWalkingStep()
0x4C219C wmInterfaceScrollTabsStart
0x4C2270 wmInterfaceScrollTabsStop
0x4C2290 wmInterfaceScrollTabsUpdate
0x4C2324 wmInterfaceInit
0x4C2E44 wmInterfaceExit
0x4C31E8 wmInterfaceScroll
0x4C3200 wmInterfaceScrollPixel
0x4C32EC wmMouseBkProc
0x4C340C wmMarkSubTileOffsetVisited
0x4C3420 wmMarkSubTileOffsetKnown
0x4C3434 wmMarkSubTileOffsetVisitedFunc
0x4C3550 wmMarkSubTileRadiusVisited
0x4C35A8 wmSubTileMarkRadiusVisited
0x4C3740 wmSubTileGetVisitedState
0x4C37EC wmTileGrabArt
0x4C3830 wmInterfaceRefresh
0x4C3C9C wmInterfaceRefreshDate
0x4C3F00 wmMatchWorldPosToArea
0x4C3FA8 wmInterfaceDrawCircleOverlay
0x4C40A8 void wmInterfaceDrawSubTileRectFogged(unsigned char* surface, DWORD width, DWORD height, DWORD surfaceWidth)
0x4C40E4 wmInterfaceDrawSubTileList
0x4C41EC wmDrawCursorStopped
0x4C4490 wmCursorIsVisible
0x4C44D8 wmGetAreaName
0x4C450C wmGetAreaIdxName
0x4C453C wmAreaIsKnown
0x4C457C wmAreaVisitedState
0x4C45BC wmMapIsKnown
0x4C4624 wmAreaMarkVisited
0x4C4634 wmAreaMarkVisitedState
0x4C46CC wmAreaSetVisibleState
0x4C4710 wmAreaSetWorldPos
0x4C47A4 wmGetPartyWorldPos
0x4C47C0 wmGetPartyCurArea
0x4C47D8 wmMarkAllSubTiles
0x4C4850 wmTownMap
0x4C485C wmTownMapFunc
0x4C4A6C wmTownMapInit
0x4C4BD0 wmTownMapRefresh
0x4C4D00 wmTownMapExit
0x4C4DA4 void wmCarUseGas(DWORD gasAmount)
0x4C4E34 wmCarFillGas
0x4C4E74 wmCarGasAmount
0x4C4E7C wmCarIsOutOfGas
0x4C4E8C wmCarCurrentArea
0x4C4E94 wmCarGiveToParty
0x4C4F28 wmSfxMaxCount
0x4C4F5C wmSfxRollNextIdx
0x4C5004 wmSfxIdxName
0x4C50F4 void wmRefreshInterfaceOverlay(DWORD isRedraw)
0x4C5244 wmInterfaceRefreshCarFuel
0x4C52B0 wmRefreshTabs
0x4C55D4 wmMakeTabsLabelList
0x4C56C8 wmTabsCompareNames
0x4C5710 wmFreeTabsLabelList
0x4C5734 wmRefreshInterfaceDial
0x4C57BC wmInterfaceDialSyncTime
0x4C5804 wmAreaFindFirstValidMap
0x4C58C0 wmMapMusicStart
0x4C5928 wmSetMapMusic
0x4C59A4 wmMatchAreaContainingMapIdx
0x4C5A1C wmTeleportToArea
0x4C5A80 mem_strdup
0x4C5AD0 mem_malloc
0x4C5AD8 my_malloc
0x4C5B50 void* mem_realloc(void* lpmem, DWORD msize)
0x4C5B58 my_realloc
0x4C5C24 void mem_free(void* mem)
0x4C5C2C my_free
0x4C5C5C mem_check
0x4C5CA8 mem_register_func
0x4C5CC4 mem_prep_block
0x4C5CE4 mem_check_block
0x4C5D30 db_init
0x4C5D58 db_total
0x4C5D60 db_exit
0x4C5D68 DWORD db_dir_entry(char* fileName, DWORD* sizeOut)
0x4C5DD4 db_read_to_buf
0x4C5EB4 DWORD db_fclose(DbFile* file)
0x4C5EC8 DbFile* db_fopen(char* path, char* mode)
0x4C5ED0 db_fprintf
0x4C5F18 db_vfprintf
0x4C5F24 db_fgetc
0x4C5F70 char* db_fgets(char* buf, DWORD max_count, DbFile* file)
0x4C5FE4 db_fputc
0x4C5FEC db_fputs
0x4C5FF4 db_ungetc
0x4C5FFC DWORD db_fread(void* buf, DWORD elsize, DWORD count, DbFile* file)
0x4C60B8 db_fwrite
0x4C60C0 DWORD db_fseek(DbFile* file, DWORD pos, DWORD origin)
0x4C60C8 db_ftell
0x4C60D0 db_rewind
0x4C60D8 db_feof
0x4C60E0 DWORD db_freadByte(DbFile* file, unsigned char* _out)
0x4C60F4 DWORD db_freadShort(DbFile* file, ushort* _out)
0x4C614C DWORD db_freadInt(DbFile* file, DWORD* _out)
0x4C61AC DWORD db_fwriteByte(DbFile* file, DWORD value)
0x4C61C8 db_fwriteShort
0x4C6214 DWORD db_fwriteInt(DbFile* file, DWORD value)
0x4C6244 db_fwriteLong
0x4C62C4 db_fwriteFloat
0x4C62FC DWORD db_freadByteCount(DbFile* file, unsigned char* dest, DWORD count)
0x4C6330 DWORD db_freadShortCount(DbFile* file, ushort* dest, DWORD count)
0x4C63BC DWORD db_freadIntCount(DbFile* file, DWORD* dest, DWORD count)
0x4C6438 db_freadLongCount
0x4C6464 DWORD db_fwriteByteCount(DbFile* file, char* cptr, DWORD count)
0x4C6490 db_fwriteShortCount
0x4C64F8 db_fwriteIntCount
0x4C6550 db_fwriteLongCount
0x4C65F0 db_fwriteFloatCount
0x4C6628 DWORD db_get_file_list(char* searchMask, char*** fileList)
0x4C6868 void db_free_file_list(char*** fileList, DWORD arg2)
0x4C68BC db_filelength
0x4C68C4 db_register_callback
0x4C68E8 db_list_compare
0x4C6900 GNW_rect_exit
0x4C6924 rect_clip_list
0x4C6AAC rect_clip
0x4C6BB8 rect_malloc
0x4C6C04 rect_free
0x4C6C18 rect_min_bound
0x4C6C68 rect_inside_bound
0x4C6CD0 GNW_debug_init
0x4C6CDC debug_register_mono
0x4C6D18 debug_register_log
0x4C6D5C debug_register_screen
0x4C6D90 debug_register_env
0x4C6F18 debug_register_func
0x4C6F48 debug_printf
0x4C6F94 debug_puts
0x4C6FAC debug_clear
0x4C7004 debug_mono
0x4C7028 debug_log
0x4C7068 debug_screen
0x4C709C debug_putc
0x4C71AC debug_scroll
0x4C71E8 debug_exit
0x4C7200 colorOpen
0x4C7218 colorRead
0x4C7230 colorClose
0x4C7248 colorInitIO
0x4C725C defaultMalloc_
0x4C7264 defaultRealloc_
0x4C726C defaultFree_
0x4C7274 colorSetNameMangler
0x4C727C colorMixAdd
0x4C7298 colorMixMul
0x4C72B4 calculateColor
0x4C72CC RGB2Color
0x4C72D5 Index2RGB
0x4C7320 fadeSystemPalette
0x4C73D4 colorSetFadeBkFunc
0x4C73DC setBlackSystemPalette
0x4C73E4 setSystemPalette
0x4C7420 getSystemPalette
0x4C7428 setSystemPaletteEntries
0x4C74D0 setSystemPaletteEntry
0x4C752C getSystemPaletteEntry
0x4C7550 setIntensityTableColor
0x4C7658 setIntensityTables
0x4C769C setMixTableColor
0x4C78CC setMixTable
0x4C78E4 loadColorTable
0x4C7AB4 colorError
0x4C7ABC setColorPalette
0x4C7AF8 setColorPaletteEntry
0x4C7B20 getColorPaletteEntry
0x4C7B44 buildBlendTable
0x4C7D90 rebuildColorBlendTables
0x4C7DC0 BlendColorTableData* getColorBlendTable(DWORD color)
0x4C7E20 void freeColorBlendTable(DWORD color)
0x4C7E58 colorRegisterAlloc
0x4C7E6C colorGamma
0x4C7F0C colorGetGamma
0x4C7F14 colorMappedColor
0x4C7F28 colorBuildColorTable
0x4C824C colorSetColorTable
0x4C8268 redloop
0x4C83EC greenloop
0x4C8690 blueloop
0x4C8804 maxfill
0x4C8828 colorPushColorPalette
0x4C88E0 colorPopColorPalette
0x4C89CC initColors
0x4C8A18 colorsClose
0x4C8A64 getColorPalette
0x4C8A70 GNW_input_init
0x4C8B40 GNW_input_exit
0x4C8B78 DWORD get_input()
0x4C8BC8 get_input_position
0x4C8BDC void process_bk()
0x4C8C9C get_input_buffer
0x4C8D04 flush_input_buffer
0x4C8D1C GNW_do_bk_process
0x4C8D74 add_bk_process
0x4C8DC4 remove_bk_process
0x4C8DE4 enable_bk
0x4C8DF0 disable_bk
0x4C8DFC pause_game
0x4C8E38 default_pause_window
0x4C8F34 register_pause
0x4C8F4C dump_screen
0x4C8FF0 buf_blit
0x4C9048 default_screendump
0x4C9358 register_screendump
0x4C9370 get_time
0x4C937C pause_for_tocks
0x4C93B8 DWORD block_for_tocks(DWORD ticks)
0x4C93E0 elapsed_time
0x4C9400 elapsed_tocks
0x4C9410 get_bk_time
0x4C9418 set_repeat_rate
0x4C9420 get_repeat_rate
0x4C9428 set_repeat_delay
0x4C9430 get_repeat_delay
0x4C9438 void set_focus_func(void* func)
0x4C9440 get_focus_func
0x4C9448 set_idle_func
0x4C9450 get_idle_func
0x4C9458 sub_4C945
0x4C9490 GNW95_build_key_map
0x4C9BB4 GNW95_hook_input
0x4C9C20 GNW95_input_init
0x4C9C28 GNW95_hook_keyboard
0x4C9C4C GNW95_keyboard_hook
0x4C9CF0 GNW95_process_message
0x4C9DF0 GNW95_clear_time_stamps
0x4C9E14 GNW95_process_key
0x4C9EEC GNW95_lost_focus
0x4C9F40 GNW_mouse_init
0x4C9FD8 GNW_mouse_exit
0x4CA01C mouse_colorize
0x4CA064 mouse_get_shape
0x4CA0AC mouse_set_shape
0x4CA20C mouse_get_anim
0x4CA26C mouse_set_anim_frames
0x4CA2D0 mouse_anim
0x4CA34C void mouse_show()
0x4CA534 void mouse_hide()
0x4CA59C mouse_info
0x4CA698 mouse_simulate_input
0x4CA8C8 DWORD mouse_in(DWORD x, DWORD y, DWORD x_offs, DWORD y_offs)
0x4CA934 DWORD mouse_click_in(DWORD x, DWORD y, DWORD x_offs, DWORD y_offs)
0x4CA9A0 mouse_get_rect
0x4CA9DC void mouse_get_position(DWORD* outX, DWORD* outY)
0x4CAA04 mouse_set_position
0x4CAA38 mouse_clip
0x4CAAA0 mouse_get_buttons
0x4CAAA8 mouse_hidden
0x4CAAB0 mouse_get_hotspot
0x4CAAC4 mouse_set_hotspot
0x4CAB54 mouse_query_exist
0x4CAB5C mouse_get_raw_state
0x4CAC1C mouse_disable
0x4CAC28 mouse_enable
0x4CAC34 mouse_is_disabled
0x4CAC3C mouse_set_sensitivity
0x4CAC6C mouse_get_sensitivity
0x4CAC74 mouse_elapsed_time
0x4CACB4 mouse_reset_elapsed_time
0x4CACD0 mmxEnable
0x4CAD08 init_mode_320_200
0x4CAD24 init_mode_320_240
0x4CAD40 init_mode_320_400
0x4CAD5C init_mode_640_480_16
0x4CAD64 init_mode_640_480
0x4CAD78 init_mode_640_480_hi
0x4CAD94 init_mode_640_400
0x4CADA8 init_mode_800_600
0x4CADBC init_mode_1024_768
0x4CADD0 init_mode_1280_1024
0x4CADE4 GNW95_init_mode
0x4CADFC zero_vid_mem
0x4CAE0C set_update_palette_func
0x4CAE14 get_update_palette_func
0x4CAE1C GNW95_init_mode_ex
0x4CAECC init_vesa_mode
0x4CAEDC GNW95_init_window
0x4CAF50 ffs
0x4CAF9C GNW95_init_DirectDraw
0x4CB1B0 GNW95_reset_mode
0x4CB218 GNW95_SetPaletteEntry
0x4CB310 GNW95_SetPaletteEntries
0x4CB450 GNW95_GetPaletteEntry
0x4CB568 GNW95_SetPalette
0x4CB68C GNW95_GetPalette
0x4CB850 GNW95_ShowRect
0x4CB91C palcpy
0x4CB93C GNW95_MouseShowRect16
0x4CBA44 GNW95_ShowRect16
0x4CBA84 trans_palcpy
0x4CBAB0 GNW95_MouseShowTransRect16
0x4CBBC8 GNW95_zero_vid_mem
0x4CBC90 GNW_kb_set
0x4CBD00 GNW_kb_restore
0x4CBD14 kb_wait
0x4CBDA8 kb_clear
0x4CBDE8 kb_getch
0x4CBE00 kb_disable
0x4CBE0C kb_enable
0x4CBE18 kb_is_disabled
0x4CBE20 kb_disable_numpad
0x4CBE2C kb_enable_numpad
0x4CBE38 kb_numpad_is_disabled
0x4CBE40 kb_disable_numlock
0x4CBE4C kb_enable_numlock
0x4CBE58 kb_numlock_is_disabled
0x4CBE74 kb_set_layout
0x4CBEEC kb_get_layout
0x4CBEF4 kb_ascii_to_scan
0x4CBF50 kb_elapsed_time
0x4CBF5C kb_reset_elapsed_time
0x4CBF68 kb_simulate_key
0x4CC2F0 kb_next_ascii_English_US
0x4CC5BC kb_next_ascii_French
0x4CC94C kb_next_ascii_German
0x4CCE14 kb_next_ascii_Italian
0x4CD0E0 kb_next_ascii_Spanish
0x4CDA4C kb_next_ascii
0x4CDC08 kb_map_ascii_English_US
0x4D0400 kb_map_ascii_French
0x4D0C54 kb_map_ascii_German
0x4D1758 kb_map_ascii_Italian
0x4D1E24 kb_map_ascii_Spanish
0x4D24F8 kb_init_lock_status
0x4D2540 kb_toggle_caps
0x4D255C kb_toggle_num
0x4D2578 kb_toggle_scroll
0x4D2594 kb_buffer_put
0x4D25D4 kb_buffer_get
0x4D2614 kb_buffer_peek
0x4D2680 vcr_record
0x4D27EC vcr_play
0x4D28F4 vcr_stop
0x4D2918 vcr_status
0x4D2930 vcr_update
0x4D2C64 vcr_create_buffer
0x4D2C98 vcr_destroy_buffer
0x4D2CD0 vcr_clear_buffer
0x4D2CF0 vcr_dump_buffer
0x4D2D74 vcr_load_buffer
0x4D2E00 vcr_save_record
0x4D2EE4 vcr_load_record
0x4D2FC0 draw_line
0x4D31A4 draw_box
0x4D322C draw_shaded_box
0x4D32B4 draw_circle
0x4D33F0 void cscale(unsigned char* src, DWORD sWidth, DWORD sHeight, DWORD sStride, unsigned char* dst, DWORD width, DWORD height, DWORD stride)
0x4D3560 void trans_cscale(void* fromBuff, DWORD width, DWORD height, DWORD fromPitch, void* toBuff, DWORD toWidth, DWORD toHeight, DWORD toPitch)
0x4D36D4 buf_to_buf
0x4D3704 trans_buf_to_buf
0x4D3734 mask_buf_to_buf
0x4D37A8 mask_trans_buf_to_buf
0x4D3820 rev_trans_buf_to_buf
0x4D387C buf_fill
0x4D38E0 buf_texture
0x4D3A48 lighten_buf
0x4D3A8C swap_color_buf
0x4D3AE0 buf_outline
0x4D3BB0 bytes_init
0x4D3BE0 ByteReaderFill
0x4D3C30 bits_init
0x4D3C78 init_pack_tables
0x4D4ADC untransform_subband0
0x4D4D1C untransform_subband
0x4D4E80 untransform_all
0x4D4F58 AudioDecoder_fill
0x4D4FA0 AudioDecoder_Read
0x4D5048 AudioDecoder_Close
0x4D50A8 Create_AudioDecoder
0x4D555C GNW_text_init
0x4D55CC GNW_text_exit
0x4D55FC load_font
0x4D5780 text_add_manager
0x4D57F4 text_remove_manager
0x4D58AC GNW_text_font
0x4D58D4 text_curr
0x4D58DC DWORD text_font(DWORD fontNum)
0x4D595C text_font_exists
0x4D59B0 GNW_text_to_buf
0x4D5B54 GNW_text_height
0x4D5B60 GNW_text_width
0x4D5BA4 GNW_text_char_width
0x4D5BB8 GNW_text_mono_width
0x4D5BD8 GNW_text_spacing
0x4D5BE4 GNW_text_size
0x4D5BF8 GNW_text_max
0x4D5C30 win_init
0x4D5FB8 win_reinit
0x4D6164 win_active
0x4D616C win_exit
0x4D6238 DWORD win_add(DWORD x, DWORD y, DWORD width, DWORD height, DWORD bgColorIndex, DWORD flags)
0x4D6468 void win_delete(DWORD winRef)
0x4D650C win_free
0x4D6558 win_buffering
0x4D6568 win_border
0x4D6698 win_no_texture
0x4D6708 win_texture
0x4D6818 win_set_bk_color
0x4D684C void win_print(DWORD winID, char* text, DWORD textWidth, DWORD xPos, DWORD yPos, DWORD colorFlags)
0x4D69DC win_text
0x4D6B24 win_line
0x4D6B88 win_box
0x4D6C18 win_shaded_box
0x4D6CC8 win_fill
0x4D6DAC void win_show(DWORD winRef)
0x4D6E64 void win_hide(DWORD winRef)
0x4D6EA0 win_move
0x4D6F5C void win_draw(DWORD winRef)
0x4D6F80 void win_draw_rect(DWORD winRef, RECT* rect)
0x4D6FD8 void GNW_win_refresh(Window* win, RECT* rect, DWORD* buffer)
0x4D759C win_refresh_all
0x4D75B0 void win_clip(Window* window, RectList** rects, void* buffer)
0x4D765C win_drag
0x4D77F8 win_get_mouse_buf
0x4D7814 refresh_all
0x4D7888 Window* GNW_find(DWORD winRef)
0x4D78B0 unsigned char* win_get_buf(DWORD winRef)
0x4D78CC DWORD win_get_top_win(DWORD x, DWORD y)
0x4D7918 win_width
0x4D7934 win_height
0x4D7950 win_get_rect
0x4D797C win_check_all_buttons
0x4D79DC GNW_find_button
0x4D7A34 GNW_check_menu_bars
0x4D7AC4 load_texture
0x4D80D8 win_set_minimized_title
0x4D814C win_set_trans_b2b
0x4D8174 colorOpen_
0x4D81E0 colorClose_
0x4D81E8 colorRead_
0x4D8200 GNWSystemError
0x4D8260 win_register_button
0x4D8308 win_register_text_button
0x4D8674 win_register_button_disable
0x4D86A8 win_register_button_image
0x4D8758 win_register_button_func
0x4D8798 win_register_right_button
0x4D87F8 win_register_button_sound_func
0x4D8828 win_register_button_mask
0x4D8854 button_create
0x4D89E4 win_button_down
0x4D8A10 GNW_check_buttons
0x4D9214 button_under_mouse
0x4D927C win_button_winID
0x4D92B4 win_last_button_winID
0x4D92BC win_delete_button
0x4D9374 GNW_delete_button
0x4D9430 win_delete_button_win
0x4D9458 button_new_id
0x4D9474 win_enable_button
0x4D94D0 win_disable_button
0x4D9554 win_set_button_rest_state
0x4D962C win_group_check_buttons
0x4D96EC win_group_radio_buttons
0x4D9744 button_check_group
0x4D9808 button_draw
0x4D9A58 GNW_button_refresh
0x4D9AA0 win_button_press_and_release
0x4D9B90 default_malloc
0x4D9B98 default_realloc
0x4D9BA0 default_free
0x4D9BA8 assoc_init
0x4D9C0C assoc_resize
0x4D9C48 assoc_free
0x4D9CC4 assoc_find
0x4D9D5C assoc_search
0x4D9D88 assoc_insert
0x4D9EE8 assoc_delete
0x4D9F84 assoc_copy
0x4D9FE4 assoc_find_first
0x4DA090 assoc_read_long
0x4DA0F4 assoc_read_assoc_array
0x4DA158 assoc_load
0x4DA2EC assoc_write_long
0x4DA360 assoc_write_assoc_array
0x4DA3A4 assoc_save
0x4DA498 assoc_register_mem
0x4DA4CD strtod
0x4DA6C0 win_list_select
0x4DA70C win_list_select_at
0x4DB478 win_get_str
0x4DB694 win_output
0x4DB920 win_yes_no
0x4DBA98 win_msg
0x4DBBC4 win_pull_down
0x4DBC34 create_pull_down
0x4DBD04 process_pull_down
0x4DC30C win_debug
0x4DC65C win_debug_delete
0x4DC674 win_register_menu_bar
0x4DC768 win_register_menu_pulldown
0x4DC8D0 win_delete_menu_bar
0x4DC930 GNW_process_menu
0x4DC9F0 find_first_letter
0x4DCA30 win_width_needed
0x4DCA5C win_input_str
0x4DCD68 win_get_num_i
0x4DD03C calc_max_field_chars_wcursor
0x4DD0AC get_num_i
0x4DD3EC GNW_intr_init
0x4DD49C win_timed_msg_defaults
0x4DD4A4 GNW_intr_exit
0x4DD4C8 win_timed_msg
0x4DD66C tm_watch_msgs
0x4DD6C0 tm_kill_msg
0x4DD744 tm_kill_out_of_order
0x4DD82C tm_click_response
0x4DD870 tm_index_active
0x4DD8B0 gz_open
0x4DDB88 gzopen
0x4DDB98 gzdopen
0x4DDBC8 gzsetparams
0x4DDC30 get_byte
0x4DDCB0 check_header
0x4DDDD4 destroy
0x4DDE84 gzread
0x4DE080 gzgetc
0x4DE0A8 gzgets
0x4DE100 gzwrite
0x4DE18C gzprintf
0x4DE1F4 gzputc
0x4DE220 gzputs
0x4DE240 do_flush
0x4DE310 gzflush
0x4DE334 gzseek
0x4DE480 gzrewind
0x4DE4E4 gztell
0x4DE4F8 gzeof
0x4DE50C putLong
0x4DE530 getLong
0x4DE574 gzclose
0x4DE5EC gzerror
0x4DE700 WinMain
0x4DE7F4 InitClass
0x4DE864 InitInstance
0x4DE8D0 LoadDirectX
0x4DE988 UnloadDirectX
0x4DE9F4 SignalHandler
0x4DE9FC WindowProc
0x4DEC6D pow_ri
0x4DEC90 pow
0x4DECCA atan
0x4DECD6 atan2
0x4DECE6 stricmp
0x4DED30 xremove
0x4DED38 xrename
0x4DED40 xtmpfile
0x4DED64 xtmpnam
0x4DED6C xfclose
0x4DEDD4 xfflush
0x4DEE2C DbFile* xfopen(char* fileName, char* flags)
0x4DEFE0 xfreopen
0x4DF040 xsetbuf
0x4DF0A8 xsetvbuf
0x4DF11C xfprintf
0x4DF164 xfscanf
0x4DF1AC xvfprintf
0x4DF22C xfgetc
0x4DF280 xfgets
0x4DF320 xfputc
0x4DF380 xfputs
0x4DF3F4 xungetc
0x4DF44C xfread
0x4DF4E8 xfwrite
0x4DF584 xfgetpos
0x4DF5D8 DWORD xfseek(DbFile* file, DWORD fOffset, DWORD origin)
0x4DF63C xfsetpos
0x4DF690 xftell
0x4DF6E4 xrewind
0x4DF738 xclearerr
0x4DF780 xfeof
0x4DF7D4 xferror
0x4DF828 xfilelength
0x4DF878 xsetpath
0x4DF8F0 xenumpath
0x4DF938 xaddpath
0x4DFAB4 xremovepath
0x4DFB3C xenumfiles
0x4DFF28 xbuild_filelist
0x4DFF48 xfree_filelist
0x4DFFAC xmkdir
0x4E0114 xrmdir
0x4E01F8 xclearpath
0x4E0238 xpathexit
0x4E0278 xlistenumfunc
0x4E02EF assert
0x4E030E Full_at_exit_rtn
0x4E0349 atexit
0x4E0385 getenv
0x4E03E6 fflush
0x4E0400 dxinput_init
0x4E0478 dxinput_exit
0x4E04E8 dxinput_acquire_mouse
0x4E0514 dxinput_unacquire_mouse
0x4E053C dxinput_get_mouse_state
0x4E05A8 dxinput_acquire_keyboard
0x4E05D4 dxinput_unacquire_keyboard
0x4E05FC dxinput_flush_keyboard_buffer
0x4E0650 dxinput_read_keyboard_buffer
0x4E070C dxinput_mouse_init
0x4E078C dxinput_mouse_exit
0x4E07B8 dxinput_keyboard_init
0x4E0874 dxinput_keyboard_exit
0x4E08A0 mmxTest
0x4E08E0 mmxSrcCopy
0x4E0DB0 srcCopy
0x4E0ED5 transSrcCopy
0x4E1037 fputs
0x4E119F Norm
0x4E1228 _Scale
0x4E1269 _Scale10V
0x4E1790 get_crc_table
0x4E1798 crc32
0x4E1950 deflateInit
0x4E1968 deflateInit2
0x4E1B8C deflateSetDictionary
0x4E1CA4 deflateReset
0x4E1D38 deflateParams
0x4E1E28 putShortMSB
0x4E1E54 flush_pending
0x4E1EC4 deflate
0x4E2218 deflateEnd
0x4E22C8 deflateCopy
0x4E24A0 read_buf
0x4E2514 lm_init
0x4E25E8 longest_match
0x4E27AC fill_window
0x4E2954 deflate_stored
0x4E2ACC deflate_fast
0x4E2E2C deflate_slow
0x4E3274 inflateReset
0x4E32CC inflateEnd
0x4E3314 inflateInit2
0x4E3434 inflateInit
0x4E3480 inflate
0x4E387C inflateSetDictionary
0x4E3908 inflateSync
0x4E39D4 inflateSyncPoint
0x4E39FC fdopen
0x4E3AFE ftell
0x4E3B50 zlibVersion
0x4E3B58 zError
0x4E3B6C zcalloc
0x4E3B84 zcfree
0x4E3B90 DOSCmdLineInit
0x4E3BA4 DOSCmdLineCreate
0x4E3D3C DOSCmdLineDestroy
0x4E3D88 DOSCmdLineFatalError
0x4E3DE9 CtrlHandlerIsNeeded
0x4E3E28 StartCtrlHandler
0x4E3E54 KillCtrlHandler
0x4E3F10 signal
0x4E4480 WinMainCRTStartup
0x4E45F2 exp
0x4E4600 fdiv_main_routine
0x4E4D50 tmpfile
0x4E4E1F putbits
0x4E4E47 init_name
0x4E4E80 tmpnam
0x4E4F58 void* dbase_open(char* fileName)
0x4E5270 void dbase_close(void* dbPtr)
0x4E5308 dbase_findfirst
0x4E53A0 dbase_findnext
0x4E541C dbase_findclose
0x4E5424 dfile_filelength
0x4E542C dfile_fclose
0x4E54E0 dfile_fflush
0x4E5504 dfile_fopen
0x4E556C dfile_freopen
0x4E55D4 dfile_setbuf
0x4E5610 dfile_setvbuf
0x4E5630 dfile_fprintf
0x4E5678 dfile_fscanf
0x4E56C0 dfile_vfprintf
0x4E5700 dfile_fgetc
0x4E5764 dfile_fgets
0x4E5830 dfile_fputc
0x4E5854 dfile_fputs
0x4E5894 dfile_ungetc
0x4E58FC dfile_fread
0x4E59F8 dfile_fwrite
0x4E5A38 dfile_fgetpos
0x4E5A74 dfile_fseek
0x4E5C4C dfile_fsetpos
0x4E5C88 dfile_ftell
0x4E5CB0 dfile_rewind
0x4E5CE8 dfile_clearerr
0x4E5D10 dfile_feof
0x4E5D40 dfile_ferror
0x4E5D70 dinfo_bsearch_compare
0x4E5D78 dbase_find
0x4E5D9C dfile_fopen_helper
0x4E5F9C dfile_fgetc_helper
0x4E6078 dfile_read_comp_bytes
0x4E613C dfile_zungetc
0x4E6147 setbuf
0x4E6164 setvbuf
0x4E61DD vfprintf
0x4E61E2 ungetc
0x4E627D fgetpos
0x4E6290 fsetpos
0x4E629C strdup
0x4E62E1 getcwd
0x4E635A chdir
0x4E6380 xsys_findfirst
0x4E63A8 xsys_findnext
0x4E63CC xsys_findclose
0x4E63DE pickup
0x4E63F2 _makepath
0x4E65DD rmdir
0x4E660F exit
0x4E6627 _exit
0x4E6736 flushall
0x4E6996 _CmpBigIn
0x4E69D0 _Rnd2In
0x4E6A3B _Bin2Strin
0x4E6B60 adler32
0x4E75A4 _tr_ini
0x4E7618 init_block
0x4E7694 pqdownheap
0x4E77A8 gen_bitlen
0x4E7A20 gen_codes
0x4E7A8C build_tree
0x4E7D10 scan_tree
0x4E7E0C send_tree
0x4E8578 build_bl_tree
0x4E85E8 send_all_trees
0x4E8944 _tr_stored_bloc
0x4E8A44 _tr_alig
0x4E8DAC _tr_flush_bloc
0x4E903C _tr_tall
0x4E90DC compress_block
0x4E96AC set_data_type
0x4E971C bi_reverse
0x4E9738 bi_flush
0x4E97D0 bi_windup
0x4E9844 copy_block
0x4E993C inflate_blocks_reset
0x4E99A8 inflate_blocks_new
0x4E9A74 inflate_blocks
0x4EAB1C inflate_blocks_free
0x4EAB4C inflate_set_dictionary
0x4EAB7C inflate_blocks_sync_point
0x4EAD1D _fsopen
0x4EAD56 fopen
0x4EAD60 close_file
0x4EADDA freopen
0x4EAFEC calloc
0x4EB004 _control87
0x4EB091 _fpreset
0x4EB111 initConsoleHandles
0x4EB810 fclose
0x4EB980 getpid
0x4EB9E4 fpattern_isvalid
0x4EBAAC fpattern_submatch
0x4EBCF8 fpattern_match
0x4EBD2C fpattern_matchn
0x4EBD3C file_putc
0x4EBDDE _dosret0
0x4EBE49 is_directory
0x4EBED6 _opendir
0x4EBFA9 opendir
0x4EBFB6 readdir
0x4EC029 closedir
0x4EC076 _mbptov
0x4EC0B4 _mbvtop
0x4EC133 _mbgetcode
0x4EC1A0 _mbsnextc
0x4EC1F2 _mbsinc
0x4EC238 _mbsdec
0x4EC470 _do_nothing_
0x4EC940 inflate_codes_new
0x4EC9B4 inflate_codes
0x4ED2D8 inflate_codes_free
0x4ED508 huft_build
0x4EDB84 inflate_trees_bits
0x4EDC14 inflate_trees_dynamic
0x4EDD60 inflate_trees_fixed
0x4EDF20 inflate_flush
0x4EE0AD open
0x4EE0D1 sopen
0x4EE288 isatty
0x4EE2CA _do_nothing
0x4EE308 stackavail
0x4EE342 _set_matherr
0x4EE390 _matherr
0x4EE7CD getprintspecs
0x4EE90B evalflags
0x4EE96A far_strlen
0x4EE98E far_other_strlen
0x4EE9B1 fmt4hex
0x4EEA0F FixedPoint_Format
0x4EEB04 float_format
0x4EEB0B formstring
0x4EEFF4 zupstr
0x4EF142 fcloseall
0x4EF1C5 nmalloc
0x4EF2B4 nfree
0x4EF460 inflate_fast
0x4EF946 _no_support_loaded
0x4EF97D ultoa
0x4EF9C7 ltoa
0x4EFCFA _beginthread
0x4EFD01 _endthread
0x4EFD4E matherr
0x4EFD51 _heapenable
0x4EFD72 _heapshrink
0x4EFE37 _begin_thread_helpe
0x4EFFE1 memmove
0x4F002E mem_putc_
0x4F0041 sprintf
0x4F0080 memset
0x4F0098 atoi
0x4F0105 strpbrk
0x4F014F strncpy
0x4F0174 strrchr
0x4F018E fread
0x4F038D filelength
0x4F0428 fseek
0x4F051C remove
0x4F0521 rename
0x4F0538 byteswap
0x4F055E med3
0x4F05B6 void qsort(void* base, DWORD number, DWORD elSize, DWORD comp)
0x4F09EF copypart
0x4F0A25 _splitpath
0x4F0AFE strlwr
0x4F0B23 strspn
0x4F0B67 strcspn
0x4F0BB0 strcmp
0x4F0C76 utoa
0x4F0CC0 itoa
0x4F0CDB fgets
0x4F0D56 fprintf
0x4F0D78 clock
0x4F0D7D toupper
0x4F0D8B _getdrive
0x4F0D9C _getdiskfree
0x4F0DA1 strupr
0x4F0DC6 strtok
0x4F0E6A tolower
0x4F0E78 strncmp
0x4F0EA1 cget_string
0x4F0ECA uncget_string
0x4F0ECE vsscanf
0x4F0EF5 sscanf
0x4F0F16 access
0x4F0F48 printf
0x4F0F6A strncat
0x4F0FA9 fwrite
0x4F118F mkdir
0x4F11BE strerror
0x4F11D5 fgetc
0x4F134E fputc
0x4F1411 rewind
0x4F1428 mem_putc
0x4F143B vsprintf
0x4F1450 strstr
0x4F150E _setjmp
0x4F154D longjmp
0x4F15D2 time
0x4F1601 _localtime
0x4F1652 localtime
0x4F1669 nrealloc
0x4F16E3 strnicmp
0x4F1736 initrandnext
0x4F1740 rand
0x4F1764 srand
0x4F1774 bsearch
0x4F17DF tell
0x4F181C lseek
0x4F1856 write
0x4F1B0E read
0x4F1CB5 close
0x4F1DAF unlink
0x4F1DC8 _mbsnccnt
0x4F1E06 _mbsnbcnt
0x4F1E37 _mbsninc
0x4F1E95 _mbscat
0x4F1EE6 _mbscpy
0x4F1F05 _mbsdup
0x4F1F46 _mbsncat
0x4F1FA3 _mbsnbcat
0x4F2095 _mbsncpy
0x4F20B4 _mbsnbcpy
0x4F2183 getclock
0x4F21A3 get_clock_time
0x4F21AF _dos_getdrive
0x4F21E0 _dos_getdiskfree
0x4F2250 cget
0x4F2257 uncget
0x4F24A6 get_opt
0x4F259B scan_white
0x4F25DA scan_char
0x4F266F scan_string
0x4F2792 report_scan
0x4F27F0 makelist
0x4F2833 scan_arb
0x4F292D scan_float
0x4F2C44 scan_int
0x4F2E34 radix_value__
0x4F2E5B cgetw
0x4F2E81 getche
0x4F2EA3 default_handler
0x4F2F09 mktime
0x4F30B1 tryOSTimeZone
0x4F31A7 tzset
0x4F31F0 parse_time
0x4F3214 parse_offset
0x4F333D parse_rule
0x4F3624 _gmtim
0x4F3642 gmtime
0x4F3694 calc_yday
0x4F3779 check_order
0x4F3A70 time_less
0x4F3AA0 _nmsize
0x4F3AA9 _nexpand
0x4F3CE2 _EFG_Forma
0x4F3DCC forcedecpt
0x4F3E86 do_getch
0x4F3F91 getch
0x4F4007 putch
0x4F4069 _SetMaxPrec
0x4F406F DoEFormat
0x4F4112 DoFFormat
0x4F4175 AdjField
0x4F41E6 _FtoS
0x4F44FD log
0x4F4509 log10
0x4F4515 log2
0x4F4521 floor
0x4F4776 modf
0x4F478F frexp
0x4F4800 MVE_memCallbacks
0x4F4820 sub_4F482
0x4F4850 sub_4F485
0x4F4860 MVE_ioCallbacks
0x4F4870 MVE_memIO
0x4F4890 MVE_MemInit
0x4F48C0 MVE_MemFree
0x4F48F0 MVE_sndInit
0x4F4900 sub_4F490
0x4F4920 sub_4F492
0x4F4940 MVE_sfSVGA
0x4F49F0 MVE_sfCallbacks
0x4F4A10 MVE_palCallbacks
0x4F4A20 sub_4F4A2
0x4F4A50 sub_4F4A5
0x4F4B20 sub_4F4B2
0x4F4B50 sub_4F4B5
0x4F4B60 sub_4F4B6
0x4F4B80 sub_4F4B8
0x4F4B90 MVE_rmCallbacks
0x4F4BA0 sub_4F4BA
0x4F4BB0 sub_4F4BB
0x4F4BD0 MVE_rmFrameCounts
0x4F4BF0 MVE_rmPrepMovie
0x4F4C90 ioReset
0x4F4D00 ioRead
0x4F4D40 MVE_MemAlloc
0x4F4DA0 ioNextRecord
0x4F4DD0 sub_4F4DD
0x4F4E20 MVE_rmHoldMovie
0x4F4E40 syncWait
0x4F4EA0 MVE_sndPause
0x4F4EC0 MVE_rmStepMovie
0x4F54F0 syncInit
0x4F5540 syncReset
0x4F5570 MVE_sndConfigure
0x4F56C0 MVE_syncSync
0x4F56F0 MVE_sndReset
0x4F5720 MVE_sndSync
0x4F59B0 syncWaitLevel
0x4F5A00 CallsSndBuff_Loc
0x4F5B70 MVE_sndAdd
0x4F5CA0 MVE_sndResume
0x4F5CB0 nfConfig
0x4F5E60 sub_4F5E6
0x4F5EF0 sub_4F5EF
0x4F5F20 sub_4F5F2
0x4F5F40 sfShowFrame
0x4F6080 do_nothing_
0x4F60C0 SetPalette_
0x4F60F0 palMakeSynthPalette
0x4F6210 palLoadPalette
0x4F6240 MVE_rmEndMovie
0x4F6270 syncRelease
0x4F6280 MVE_RunMovie
0x4F62F0 MVE_RunMovieContinue
0x4F6350 MVE_ReleaseMem
0x4F6370 ioRelease
0x4F6380 MVE_sndRelease
0x4F6390 nfRelease
0x4F63D0 MVE_strerror
0x4F6480 MVE_frOpen
0x4F6550 frLoad
0x4F6610 frSave
0x4F66D0 MVE_frGet
0x4F6930 MVE_frClose
0x4F697C MVE_sndDecompM16
0x4F69AD MVE_sndDecompS16
0x4F69FB nfHiColorDecomp
0x4F6C20 nfHiColorDecompChg
0x4F6E94 nfDecomp
0x4F70AE nfDecompChg
0x4F731D nfPkConfig
0x4F7359 nfPkDecomp
0x4F8DD4 nfPkDecompH
0x4F9F28 nfHPkDecomp
0x4FBE91 mve_ShowFrameField
0x4FC10D mve_ShowFrameFieldHi
0x4FCBC1 MVE_SetPalette
0x4FCC02 palLoadCompPalette
0x4FCC9B gfxMode
0x4FCCAD gfxLoadCrtc
0x4FCD1C gfxGetCrtc
0x4FCD46 gfxVres
0x4FCE17 MVE_gfxWaitRetrace
0x4FCE34 MVE_gfxSetSplit
0x4FE112 WaitForSingleObject_
0x4FE118 CreateMutexA_
0x4FE124 CloseHandle_
0x4FE1A8 LoadLibraryA_

*globals:
0x41B560 displayMapList
0x43E95C intotal
0x43EA1C btncnt
0x43EA7C retvals
0x501A8C aTextSCuts
0x50281C fallout_config
0x503530 aTextSCutsS
0x50B01C aTextSCutsSS
0x50DBE8 aDialogS_msg
0x51071C curr_anim_set
0x510738 art
0x510898 use_language
0x5108A4 art_vault_guy_num
0x5108A8 art_vault_person_nums
0x51093C combat_turn_running
0x510940 combatNumTurns
0x510944 combat_state
0x510948 aiInfoList
0x51094C gcsd
0x510954 hit_location_penalty
0x510978 crit_succ_eff
0x5179B0 pc_crit_succ_eff
0x517F98 combat_end_due_to_load
0x51805C combat_obj
0x518060 num_caps
0x518064 cap
0x51833C name_critter
0x518438 critterClearObj
0x51850C disp_init
0x518510 disp_rect
0x518538 character_points
0x51866C endgame_subtitle_characters
0x5186B4 game_ui_disabled
0x5186C0 game_global_vars
0x5186C4 num_game_global_vars
0x5186CC game_user_wants_to_quit
0x5186D8 gdNumOptions
0x5186F4 fidgetFID
0x5186FC fidgetFp
0x518704 lipsFID
0x518710 gdialog_speech_playing
0x518714 dialogue_state
0x518718 dialogue_switch_mode
0x51873C gdBarterMod
0x518740 dialogueBackWindow
0x518744 dialogueWindow
0x518748 backgrndRects
0x5187D8 gDialogMusicVol
0x518848 dialog_target
0x51884C dialog_target_is_party
0x518850 dialogue_head
0x518C0C gmouse_current_cursor
0x518D1E gmouse_3d_action_nums
0x518D38 gmouse_3d_current_mode
0x518D94 outlined_object
0x518DA0 movie_list
0x518E30 gsound_initialized
0x518E40 gsound_background_fade
0x518E54 gsound_speech_tag
0x518E78 sound_music_path1
0x518E7C sound_music_path2
0x518E84 master_volume
0x518E88 background_volume
0x518E8C speech_volume
0x518E90 sndfx_volume
0x518F10 intfaceEnabled
0x518F28 optionsButtonUpKey
0x518F2C optionsButtonDownKey
0x518F78 itemCurrentItem
0x518F7C itemButtonRect
0x518FA0 endWindowRect
0x518FD4 movePointRect
0x519024 interfaceWindow
0x519058 inven_dude
0x51905C inven_pid
0x519068 iscr_data
0x5190E0 dropped_explosive
0x5190E4 inven_scroll_up_bid
0x5190E8 inven_scroll_dn_bid
0x5191CC drugInfoList
0x519238 name_item
0x51923C ambient_light
0x519248 lips_draw_head
0x5193B8 slot_cursor
0x5193BC quick_done
0x5193CC patches
0x5194C4 loadingGame
0x5194F0 main_window
0x5194F4 main_window_buf
0x5194FC button_up_data
0x519500 button_down_data
0x519540 map_scroll_refresh
0x519558 mapEntranceElevation
0x51955C mapEntranceTileNum
0x51956C map_global_vars
0x519574 num_map_global_vars
0x519578 map_elevation
0x519594 freePtr
0x5195B8 GNWWin
0x519640 preload_list_index
0x519798 objItemOutlineState
0x519D9C partyMemberMaxCount
0x519DA0 partyMemberPidList
0x519DA8 partyMemberList
0x519DAC partyMemberCount
0x519DB8 partyMemberAIOptions
0x519DBC partyMemberLevelUpInfoList
0x519DCC perk_data
0x51C120 perkLevelDataList
0x51C128 quests
0x51C12C quest_count
0x51C290 protoLists
0x51C370 pc_proto
0x51C710 script_path_base
0x51C714 script_engine_running
0x51C720 fallout_game_time
0x51C758 procTableStrs
0x51C7C8 scriptListInfo
0x51C7CC maxScriptNum
0x51C7D4 cur_id
0x51D118 skill_data
0x51D430 gIsSteal
0x51D480 fadeEventHandle
0x51D53C stat_data
0x51D944 text_object_index
0x51D954 scroll_blocking_on
0x51D958 scroll_limiting_on
0x51D964 tile_refresh
0x51D968 refresh_enabled
0x51DB84 trait_data
0x51DCB8 currentWindow
0x51DD80 lastWin
0x51DD90 wmYesNoStrs
0x51DDF0 wmMaxTileNum
0x51DDF4 wmNumHorizontalTiles
0x51DDF8 wmAreaInfoList
0x51DDFC wmMaxAreaNum
0x51DE10 wmMaxMapNum
0x51DE14 wmBkWin
0x51DE24 wmBkWinBuf
0x51DE2C wmWorldOffsetX
0x51DE30 wmWorldOffsetY
0x51DE38 wmInterfaceWasInitialized
0x51DEA0 wmLastRndTime
0x51DEEC read_callback
0x51DEF4 rectList
0x51DF04 debug_func
0x51DF34 cmap
0x51E234 idle_func
0x51E23C GNW95_repeat_rate
0x51E240 GNW95_repeat_delay
0x51E2AC last_buttons
0x51E2B4 GNW95_DDPrimarySurface
0x51E2B8 GNW95_DDRestoreSurface
0x51E2BC GNW95_DDPrimaryPalette
0x51E2EA kb_lock_flags
0x51E3B0 curr_font_num
0x51E3B8 text_to_buf
0x51E3BC text_height
0x51E3C0 text_width
0x51E3C4 text_char_width
0x51E3C8 text_mono_width
0x51E3CC text_spacing
0x51E3D4 text_max
0x51E3E0 GNW_win_init_flag
0x51E3FC screen_buffer
0x51E404 last_button_winID
0x51E434 GNW95_hwnd
0x51E444 GNW95_isActive
0x51E44C GNW95_hDDrawLib
0x530014 sad
0x54CC14 anim_set
0x56C7DC curr_anim_counter
0x56C970 language
0x56C9E4 art_name
0x56CAEC anon_alias
0x56CAF0 artCritterFidShouldRunData
0x56D2B0 main_ctd
0x56D37C list_total
0x56D388 combat_turn_obj
0x56D390 combat_list
0x56D394 list_com
0x56D39C combat_free_move
0x56D518 target_str
0x56D624 attack_str
0x56D744 name_color
0x56D748 title_font
0x56D74C name_font
0x56D750 title_color
0x56D75C pc_name
0x56D77C sneak_working
0x56D780 pc_kill_counts
0x56D7E0 pal
0x56DBFC display_string_buf
0x56FB40 max_disp
0x56FB48 disp_curr
0x56FB4C intface_full_width
0x56FB50 max
0x56FB54 disp_start
0x56FB58 lastTime
0x56FCA8 editor_message_file
0x56FCB0 name_sort_list
0x570514 optionsButtonUp1
0x570518 optionsButtonDown1
0x5705B0 folder_card_fid
0x5705B8 folder_card_title
0x5705BC folder_card_title2
0x5705CC folder_card_desc
0x57060C edit_win
0x5707A4 bckgnd
0x5707B4 last_level
0x5707D0 info_line
0x5707D8 frstc_draw1
0x57082C Educated
0x570854 Lifegiver
0x5708B0 Tag_
0x5708B4 Mutate_
0x5709C4 frame_time
0x5709D0 glblmode
0x5709EC card_old_fid1
0x570A29 free_perk
0x570AB8 endgame_voiceover_loaded
0x570BD0 endgame_subtitle_done
0x570BF0 endgame_window_buffer
0x58E93C gCurrentFont
0x58E948 master_db_handle
0x58E94C critter_db_handle
0x58E950 game_config
0x58E978 gconfig_file_name
0x58ECC0 optionRect
0x58F46C dialog_red_button_up_key
0x58F4A4 dialog_red_button_down_buf
0x58F4AC dialog_red_button_up_buf
0x58F4BC dialog_red_button_down_key
0x596C78 gmovie_played_list
0x596FC2 background_fname_requested
0x5970E0 bboxslot
0x5970F8 itemButtonItems
0x59D3FC optionsButtonUp
0x59D400 optionsButtonDown
0x59E78C currentProgram
0x59E7EC target_stack_offset
0x59E814 inventry_message_file
0x59E81C target_stack
0x59E844 stack_offset
0x59E86C stack
0x59E934 ptable
0x59E944 btable
0x59E948 target_curr_stack
0x59E954 i_worn
0x59E958 i_lhand
0x59E95C i_fid
0x59E960 pud
0x59E964 i_wid
0x59E968 i_rhand
0x59E96C curr_stack
0x59E970 i_wid_max_y
0x59E974 i_wid_max_x
0x59E978 target_pud
0x59E98C wd_obj
0x613D30 LSData
0x6142C4 lsgwin
0x614808 flptr
0x614838 main_death_voiceover_done
0x631D28 map_state
0x631D2C elevation
0x631D30 tile
0x631D34 rotation
0x631D50 display_buf
0x631D58 map_name
0x631D88 map_number
0x631E40 square
0x631E4C display_win
0x638E10 mve_win_rect
0x638E64 lastMovieH
0x638E68 lastMovieW
0x638E6C lastMovieX
0x638E70 lastMovieY
0x638E74 subtitleList
0x638EA0 subtitleH
0x639DA0 objectTable
0x6610A0 buf_size
0x6610B8 obj_dude
0x6610BC obj_seen_check
0x662445 obj_seen
0x663900 optnwin
0x663974 subtitles
0x6639D0 current_palette
0x663FD0 black_palette
0x6642D0 fade_steps
0x664338 pipmesg
0x664348 pipboy_message_file
0x664450 mouse_y
0x66445C holopages
0x6644C4 pip_win
0x6644F4 holodisk
0x6644F8 hot_line_count
0x664508 crnt_func
0x664514 cursor_line
0x664520 view_page
0x664524 bottom_line
0x664529 holo_flag
0x66452A stat_flag
0x6647AC proto_msg_files
0x6647FC proto_main_msg_file
0x6648C0 queue
0x668070 tag_skill
0x668140 skldxwin
0x668154 masterVol
0x66815C sampleRate
0x668164 deviceInit
0x6681AC curr_pc_stat
0x6681B0 Level_pc
0x6681B4 Experience_pc
0x6681C0 text_object_list
0x66B9C4 tile_mask
0x66BBD4 buf_rect_2
0x66BDE4 square_rect
0x66BDF8 tile_offy
0x66BDFC tile_offx
0x66BE08 squares
0x66BE14 buf_length_2
0x66BE18 tile_x
0x66BE1C tile_y
0x66BE30 buf_width_2
0x66BE34 tile_center_tile
0x66BE40 pc_trait
0x66BE44 pc_trait2
0x6727B0 sWindows
0x672E04 Meet_Frank_Horrigan
0x672E08 WorldMapCurrArea
0x672E0C world_xpos
0x672E10 world_ypos
0x672E14 world_subtile
0x672E1C In_WorldMap
0x672E20 target_xpos
0x672E24 target_ypos
0x672E48 wmEncounterIconShow
0x672E4C EncounterMapID
0x672E58 wmRndCursorFid
0x672E5C old_world_xpos
0x672E60 old_world_ypos
0x672E64 Move_on_Car
0x672E68 carCurrentArea
0x672E6C carGasAmount
0x672EFC wmViewportRightScrlLimit
0x672F00 wmViewportBottomtScrlLimit
0x672FB0 wmMsgFile
0x6A38D0 colorTable
0x6A38EF BlueColor
0x6A3A90 DarkGreenColor
0x6A3CB0 GreenColor
0x6A3DF1 DarkGreenGreyColor
0x6A59D8 DarkGreyColor
0x6A76BF LightGreyColor
0x6A82F3 PeanutButter
0x6A8B64 NearWhiteColor
0x6AA8D0 DarkRedColor
0x6AB472 DarkYellowColor
0x6AB4D0 RedColor
0x6AB4EF GoodColor
0x6AB61A LightRedColor
0x6AB718 DullPinkColor
0x6AB8BB YellowColor
0x6AB8CF WhiteColor
0x6AC780 bk_disabled
0x6AC788 bk_process_time
0x6AC790 mouse_is_hidden
0x6AC7A4 mouse_y_
0x6AC7A8 mouse_x_
0x6AC7B0 mouse_buttons
0x6AC7CC mouse_hoty
0x6AC7D0 mouse_hotx
0x6AC9F0 scr_size
0x6ACA18 scr_blit
0x6ADD90 window_index
0x6ADE58 window
0x6ADF24 num_windows
0x6ADF38 doing_refresh_all
0x6B24D0 paths
0x6B36A8 rm_FrameCount
0x6B3CFC mveBW
0x6B402F mveBH

*strings:
