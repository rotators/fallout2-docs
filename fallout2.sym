*enums:
enum Distance : long
{
	unset                 = -1,
	stay_close            = 0, // the attacker will stay at a distance no more than 5 hexes from the player (behavior only for party members, defined in ai_move_steps_closer, cai_perform_distance_prefs)
	charge                = 1, // AI will always try to get close to its target before or after attack
	snipe                 = 2, // keep distance, when the distance between the attacker and the target decreases, the attacker will try to move away from the target to a distance of up to 10 hexes
	on_your_own           = 3, // no special behavior defined for this
	stay                  = 4  // the attacker will, if possible, stay at the hex where the combat started (behavior defined in ai_move_steps_closer, ai_move_away)
};

// presets for party members
enum Disposition : long
{
	none                  = -1,
	custom                = 0,
	coward                = 1,
	defensive             = 2,
	aggressive            = 3,
	berserk               = 4
};

enum AttackWho : long
{
	no_attack_mode        = -1,
	whomever_attacking_me = 0, // attack the target that the player is attacking (only for party members)
	strongest             = 1, // attack stronger targets (will always switch to stronger ones in combat)
	weakest               = 2, // attack weaker targets (will always switch to weaker ones in combat)
	whomever              = 3, // anyone, will attack the chosen target until it dies, or until retaliation occurs (combatai_check_retaliation_)
	closest               = 4, // only attack near targets
};

enum RunAway : long
{
	none                  = -1, // get the value from the cap.min_hp (in cai_get_min_hp_)
	coward                = 0,  // 0%
	finger_hurts          = 1,  // 25% of the lost amount of health
	bleeding              = 2,  // 40% of the lost amount of health
	not_feeling_good      = 3,  // 60% of the lost amount of health
	tourniquet            = 4,  // 75% of the lost amount of health
	never                 = 5   // 100%
};

enum WeaponPref : long
{
	unset                 = -1, // same as no_pref
	no_pref               = 0,  // Guns > ...
	melee                 = 1,
	melee_over_ranged     = 2,
	ranged_over_melee     = 3,
	ranged                = 4,
	unarmed               = 5,
	unarmed_over_thrown   = 6, // not available for party member in control panel
	random                = 7  // not available for party member in control panel
};

enum AreaAttack : long
{
	no_pref               = -1, // special logic for NPC (not available for party member in control panel)
	always                = 0,
	sometimes             = 1,  // use random value from cap.secondary_freq
	be_sure               = 2,  // 85% hit chance
	be_careful            = 3,  // 50% hit chance
	be_absolutely_sure    = 4,  // 95% hit chance
};

enum ChemUse : long
{
	unset                  = -1,
	clean                  = 0,
	stims_when_hurt_little = 1,
	stims_when_hurt_lots   = 2,
	sometimes              = 3,
	anytime                = 4,
	always                 = 5,
};

enum Animation : long
{
  ANIM_stand = 0,
  ANIM_walk = 1,
  ANIM_jump_begin = 2,
  ANIM_jump_end = 3,
  ANIM_climb_ladder = 4,
  ANIM_falling = 5,
  ANIM_up_stairs_right = 6,
  ANIM_up_stairs_left = 7,
  ANIM_down_stairs_right = 8,
  ANIM_down_stairs_left = 9,
  ANIM_magic_hands_ground = 10,
  ANIM_magic_hands_middle = 11,
  ANIM_magic_hands_up = 12,
  ANIM_dodge_anim = 13,
  ANIM_hit_from_front = 14,
  ANIM_hit_from_back = 15,
  ANIM_throw_punch = 16,
  ANIM_kick_leg = 17,
  ANIM_throw_anim = 18,
  ANIM_running = 19,
  ANIM_fall_back = 20,
  ANIM_fall_front = 21,
  ANIM_bad_landing = 22,
  ANIM_big_hole = 23,
  ANIM_charred_body = 24,
  ANIM_chunks_of_flesh = 25,
  ANIM_dancing_autofire = 26,
  ANIM_electrify = 27,
  ANIM_sliced_in_half = 28,
  ANIM_burned_to_nothing = 29,
  ANIM_electrified_to_nothing = 30,
  ANIM_exploded_to_nothing = 31,
  ANIM_melted_to_nothing = 32,
  ANIM_fire_dance = 33,
  ANIM_fall_back_blood = 34,
  ANIM_fall_front_blood = 35,
  ANIM_prone_to_standing = 36,
  ANIM_back_to_standing = 37,
  ANIM_take_out = 38,
  ANIM_put_away = 39,
  ANIM_parry_anim = 40,
  ANIM_thrust_anim = 41,
  ANIM_swing_anim = 42,
  ANIM_point = 43,
  ANIM_unpoint = 44,
  ANIM_fire_single = 45,
  ANIM_fire_burst = 46,
  ANIM_fire_continuous = 47,
  ANIM_fall_back_sf = 48,
  ANIM_fall_front_sf = 49,
  ANIM_bad_landing_sf = 50,
  ANIM_big_hole_sf = 51,
  ANIM_charred_body_sf = 52,
  ANIM_chunks_of_flesh_sf = 53,
  ANIM_dancing_autofire_sf = 54,
  ANIM_electrify_sf = 55,
  ANIM_sliced_in_half_sf = 56,
  ANIM_burned_to_nothing_sf = 57,
  ANIM_electrified_to_nothing_sf = 58,
  ANIM_exploded_to_nothing_sf = 59,
  ANIM_melted_to_nothing_sf = 60,
  ANIM_fire_dance_sf = 61,
  ANIM_fall_back_blood_sf = 62,
  ANIM_fall_front_blood_sf = 63,
  ANIM_called_shot_pic = 64,
};

enum MiscFlags : unsigned long
{
	Opened       = 0x00000001,
	CantUse      = 0x00000010, // determines whether the weapon can be used in combat (sfall flag)
	Locked       = 0x02000000,
	Jammed       = 0x04000000,
};

enum DamageFlag : unsigned long
{
	DAM_KNOCKED_OUT     = 0x1,
	DAM_KNOCKED_DOWN    = 0x2,
	DAM_CRIP_LEG_LEFT   = 0x4,
	DAM_CRIP_LEG_RIGHT  = 0x8,
	DAM_CRIP_ARM_LEFT   = 0x10,
	DAM_CRIP_ARM_RIGHT  = 0x20,
	DAM_BLIND           = 0x40,
	DAM_DEAD            = 0x80,
	DAM_HIT             = 0x100,
	DAM_CRITICAL        = 0x200,
	DAM_ON_FIRE         = 0x400,
	DAM_BYPASS          = 0x800,
	DAM_EXPLODE         = 0x1000,
	DAM_DESTROY         = 0x2000,
	DAM_DROP            = 0x4000,
	DAM_LOSE_TURN       = 0x8000,
	DAM_HIT_SELF        = 0x10000,
	DAM_LOSE_AMMO       = 0x20000,
	DAM_DUD             = 0x40000,
	DAM_HURT_SELF       = 0x80000,
	DAM_RANDOM_HIT      = 0x100000,
	DAM_CRIP_RANDOM     = 0x200000,
	DAM_BACKWASH        = 0x400000,
	DAM_PERFORM_REVERSE = 0x800000,
	// sfall flags
	DAM_KNOCKOUT_WOKEN  = 0x40000000, // internal for op_critter_state_
	DAM_PRESERVE_FLAGS  = 0x80000000  // used for attack_complex
};

enum DamageType
{
	DMG_normal       = 0,
	DMG_laser        = 1,
	DMG_fire         = 2,
	DMG_plasma       = 3,
	DMG_electrical   = 4,
	DMG_emp          = 5,
	DMG_explosion    = 6,
	DMG_BYPASS_ARMOR = 256,
	DMG_NOANIMATE    = 512,
};

enum Gender
{
  GENDER_MALE = 0,
  GENDER_FEMALE = 1,
};

// Some global variables referenced by engine
enum GlobalVar : long
{
  GVAR_PLAYER_REPUTATION = 0,
  GVAR_ENEMY_ARROYO = 7,
  GVAR_PLAYER_GOT_CAR = 18,
  GVAR_NUKA_COLA_ADDICT = 21,
  GVAR_BUFF_OUT_ADDICT = 22,
  GVAR_MENTATS_ADDICT = 23,
  GVAR_PSYCHO_ADDICT = 24,
  GVAR_RADAWAY_ADDICT = 25,
  GVAR_ALCOHOL_ADDICT = 26,
  GVAR_LOAD_MAP_INDEX = 27,
  GVAR_TOWN_REP_ARROYO = 47,
  GVAR_ADDICT_TRAGIC = 295,
  GVAR_ADDICT_JET = 296,
  GVAR_CAR_BLOWER = 439,
  GVAR_CAR_UPGRADE_FUEL_CELL_REGULATOR = 453,
  GVAR_NEW_RENO_CAR_UPGRADE = 455,
  GVAR_NEW_RENO_SUPER_CAR = 456,
  GVAR_MODOC_SHITTY_DEATH = 491,
  GVAR_FALLOUT_2 = 494,
  GVAR_CAR_PLACED_TILE = 633,
};

// Physical material type, used for items and tiles.
enum Material : long
{
  Glass = 0x0,
  Metal = 0x1,
  Plastic = 0x2,
  Wood = 0x3,
  Dirt = 0x4,
  Stone = 0x5,
  Cement = 0x6,
  Leather = 0x7
};

enum ObjType : char
{
  OBJ_TYPE_ITEM = 0,
  OBJ_TYPE_CRITTER = 1,
  OBJ_TYPE_SCENERY = 2,
  OBJ_TYPE_WALL = 3,
  OBJ_TYPE_TILE = 4,
  OBJ_TYPE_MISC = 5,
  OBJ_TYPE_SPATIAL = 6
};

enum ArtType : char
{
  OBJ_TYPE_INTRFACE   = 6,
  OBJ_TYPE_INVEN      = 7,
  OBJ_TYPE_HEAD       = 8,
  OBJ_TYPE_BACKGROUND = 9,
  OBJ_TYPE_SKILLDEX   = 10
};

enum Stat : long
{
	STAT_st = 0, // strength
	STAT_pe = 1, // perception
	STAT_en = 2, // endurance
	STAT_ch = 3, // charisma
	STAT_iq = 4, // intelligence
	STAT_ag = 5, // agility
	STAT_lu = 6, // luck

	// derived stats
	STAT_max_hit_points = 7,
	STAT_max_move_points = 8,
	STAT_ac = 9,
	STAT_unused = 10,
	STAT_melee_dmg = 11,
	STAT_carry_amt = 12,
	STAT_sequence = 13,
	STAT_heal_rate = 14,
	STAT_crit_chance = 15,
	STAT_better_crit = 16,
	STAT_dmg_thresh = 17,
	STAT_dmg_thresh_laser = 18,
	STAT_dmg_thresh_fire = 19,
	STAT_dmg_thresh_plasma = 20,
	STAT_dmg_thresh_electrical = 21,
	STAT_dmg_thresh_emp = 22,
	STAT_dmg_thresh_explosion = 23,
	STAT_dmg_resist = 24,
	STAT_dmg_resist_laser = 25,
	STAT_dmg_resist_fire = 26,
	STAT_dmg_resist_plasma = 27,
	STAT_dmg_resist_electrical = 28,
	STAT_dmg_resist_emp = 29,
	STAT_dmg_resist_explosion = 30,
	STAT_rad_resist = 31,
	STAT_poison_resist = 32,
	// poison_resist MUST be the last derived stat

	// non-derived stats
	STAT_age = 33,
	STAT_gender = 34,
	// gender MUST be the last non-derived stat

	STAT_current_hp = 35,
	STAT_current_poison = 36,
	STAT_current_rad = 37,

	STAT_real_max_stat = 38,
	STAT_base_count = 7
};

enum Perk : long
{
  PERK_bonus_awareness = 0,
  PERK_bonus_hth_attacks = 1,
  PERK_bonus_hth_damage = 2,
  PERK_bonus_move = 3,
  PERK_bonus_ranged_damage = 4,
  PERK_bonus_rate_of_fire = 5,
  PERK_earlier_sequence = 6,
  PERK_faster_healing = 7,
  PERK_more_criticals = 8,
  PERK_night_vision = 9,
  PERK_presence = 10,
  PERK_rad_resistance = 11,
  PERK_toughness = 12,
  PERK_strong_back = 13,
  PERK_sharpshooter = 14,
  PERK_silent_running = 15,
  PERK_survivalist = 16,
  PERK_master_trader = 17,
  PERK_educated = 18,
  PERK_healer = 19,
  PERK_fortune_finder = 20,
  PERK_better_criticals = 21,
  PERK_empathy = 22,
  PERK_slayer = 23,
  PERK_sniper = 24,
  PERK_silent_death = 25,
  PERK_action_boy = 26,
  PERK_mental_block = 27,
  PERK_lifegiver = 28,
  PERK_dodger = 29,
  PERK_snakeater = 30,
  PERK_mr_fixit = 31,
  PERK_medic = 32,
  PERK_master_thief = 33,
  PERK_speaker = 34,
  PERK_heave_ho = 35,
  PERK_friendly_foe = 36,
  PERK_pickpocket = 37,
  PERK_ghost = 38,
  PERK_cult_of_personality = 39,
  PERK_scrounger = 40,
  PERK_explorer = 41,
  PERK_flower_child = 42,
  PERK_pathfinder = 43,
  PERK_animal_friend = 44,
  PERK_scout = 45,
  PERK_mysterious_stranger = 46,
  PERK_ranger = 47,
  PERK_quick_pockets = 48,
  PERK_smooth_talker = 49,
  PERK_swift_learner = 50,
  PERK_tag = 51,
  PERK_mutate = 52,
  PERK_add_nuka = 53,
  PERK_add_buffout = 54,
  PERK_add_mentats = 55,
  PERK_add_psycho = 56,
  PERK_add_radaway = 57,
  PERK_weapon_long_range = 58,
  PERK_weapon_accurate = 59,
  PERK_weapon_penetrate = 60,
  PERK_weapon_knockback = 61,
  PERK_armor_powered = 62,
  PERK_armor_combat = 63,
  PERK_weapon_scope_range = 64,
  PERK_weapon_fast_reload = 65,
  PERK_weapon_night_sight = 66,
  PERK_weapon_flameboy = 67,
  PERK_armor_advanced_1 = 68,
  PERK_armor_advanced_2 = 69,
  PERK_add_jet = 70,
  PERK_add_tragic = 71,
  PERK_armor_charisma = 72,
  PERK_gecko_skinning_perk = 73,
  PERK_dermal_armor_perk = 74,
  PERK_dermal_enhancement_perk = 75,
  PERK_phoenix_armor_perk = 76,
  PERK_phoenix_enhancement_perk = 77,
  PERK_vault_city_inoculations_perk = 78,
  PERK_adrenaline_rush_perk = 79,
  PERK_cautious_nature_perk = 80,
  PERK_comprehension_perk = 81,
  PERK_demolition_expert_perk = 82,
  PERK_gambler_perk = 83,
  PERK_gain_strength_perk = 84,
  PERK_gain_perception_perk = 85,
  PERK_gain_endurance_perk = 86,
  PERK_gain_charisma_perk = 87,
  PERK_gain_intelligence_perk = 88,
  PERK_gain_agility_perk = 89,
  PERK_gain_luck_perk = 90,
  PERK_harmless_perk = 91,
  PERK_here_and_now_perk = 92,
  PERK_hth_evade_perk = 93,
  PERK_kama_sutra_perk = 94,
  PERK_karma_beacon_perk = 95,
  PERK_light_step_perk = 96,
  PERK_living_anatomy_perk = 97,
  PERK_magnetic_personality_perk = 98,
  PERK_negotiator_perk = 99,
  PERK_pack_rat_perk = 100,
  PERK_pyromaniac_perk = 101,
  PERK_quick_recovery_perk = 102,
  PERK_salesman_perk = 103,
  PERK_stonewall_perk = 104,
  PERK_thief_perk = 105,
  PERK_weapon_handling_perk = 106,
  PERK_vault_city_training_perk = 107,
  PERK_alcohol_hp_bonus1_perk = 108,
  PERK_alcohol_hp_bonus2_perk = 109,
  PERK_alcohol_hp_neg1_perk = 110,
  PERK_alcohol_hp_neg2_perk = 111,
  PERK_autodoc_hp_bonus1_perk = 112,
  PERK_autodoc_hp_bonus2_perk = 113,
  PERK_autodoc_hp_neg1_perk = 114,
  PERK_autodoc_hp_neg2_perk = 115,
  PERK_expert_excrement_expediter_perk = 116,
  PERK_weapon_knockout_perk = 117,
  PERK_jinxed_perk = 118,
  PERK_count = 119
};

enum Skill : long
{
  SKILL_SMALL_GUNS = 0,
  SKILL_BIG_GUNS = 1,
  SKILL_ENERGY_WEAPONS = 2,
  SKILL_UNARMED_COMBAT = 3,
  SKILL_MELEE = 4,
  SKILL_THROWING = 5,
  SKILL_FIRST_AID = 6,
  SKILL_DOCTOR = 7,
  SKILL_SNEAK = 8,
  SKILL_LOCKPICK = 9,
  SKILL_STEAL = 10,
  SKILL_TRAPS = 11,
  SKILL_SCIENCE = 12,
  SKILL_REPAIR = 13,
  SKILL_CONVERSANT = 14,
  SKILL_BARTER = 15,
  SKILL_GAMBLING = 16,
  SKILL_OUTDOORSMAN = 17,
  SKILL_count = 18
};

enum AttackSubType : long
{
	NONE                      = 0,
	UNARMED                   = 1,
	MELEE                     = 2,
	THROWING                  = 3,
	GUNS                      = 4
};

enum AttackType : long
{
	ATKTYPE_LWEAPON_PRIMARY   = 0,
	ATKTYPE_LWEAPON_SECONDARY = 1,
	ATKTYPE_RWEAPON_PRIMARY   = 2,
	ATKTYPE_RWEAPON_SECONDARY = 3,
	ATKTYPE_PUNCH             = 4,
	ATKTYPE_KICK              = 5,
	ATKTYPE_LWEAPON_RELOAD    = 6,
	ATKTYPE_RWEAPON_RELOAD    = 7,
	ATKTYPE_STRONGPUNCH       = 8,
	ATKTYPE_HAMMERPUNCH       = 9,
	ATKTYPE_HAYMAKER          = 10,
	ATKTYPE_JAB               = 11,
	ATKTYPE_PALMSTRIKE        = 12,
	ATKTYPE_PIERCINGSTRIKE    = 13,
	ATKTYPE_STRONGKICK        = 14,
	ATKTYPE_SNAPKICK          = 15,
	ATKTYPE_POWERKICK         = 16,
	ATKTYPE_HIPKICK           = 17,
	ATKTYPE_HOOKKICK          = 18,
	ATKTYPE_PIERCINGKICK      = 19
};

enum KillType : long
{
	KILL_TYPE_men             = 0,
	KILL_TYPE_women           = 1,
	KILL_TYPE_children        = 2,
	KILL_TYPE_super_mutant    = 3,
	KILL_TYPE_ghoul           = 4,
	KILL_TYPE_brahmin         = 5,
	KILL_TYPE_radscorpion     = 6,
	KILL_TYPE_rat             = 7,
	KILL_TYPE_floater         = 8,
	KILL_TYPE_centaur         = 9,
	KILL_TYPE_robot           = 10,
	KILL_TYPE_dog             = 11,
	KILL_TYPE_manti           = 12,
	KILL_TYPE_deathclaw       = 13,
	KILL_TYPE_plant           = 14,
	KILL_TYPE_gecko           = 15,
	KILL_TYPE_alien           = 16,
	KILL_TYPE_giant_ant       = 17,
	KILL_TYPE_big_bad_boss    = 18,
	KILL_TYPE_count           = 19
};

*structs:
MessageNode {
  long number;
  long flags;
  char* audio;
  char* message;
}

MessageList {
  long numMsgs;
  MessageNode* nodes;
}

GameObject {
	long id;
	long tile;
	long x;
	long y;
	long sx;
	long sy;
	long frm; // current frame
	long rotation;
	long artFid;
	long flags;
	long elevation;
	long invenSize;
	long invenMax;
}

GameObjectItem {
  char updatedFlags[4];
  // for weapons - ammo in magazine, for ammo - amount of ammo in last ammo pack
  long charges;
  // current type of ammo loaded in magazine
  long ammoPid;
  char gap_44[32];
}

GameItem {
  long id;
	long tile;
	long x;
	long y;
	long sx;
	long sy;
	long frm;
	long rotation;
	long artFid;
	long flags;
	long elevation;
	long invenSize;
	long invenMax;
}

InvenItem {
  GameItem *object;
  long count;
}

// Different from GameObject* in sfall
Critter {
	long id;
	long tile;
	long x;
	long y;
	long sx;
	long sy;
	long frm;
	long rotation;
	long artFid;
	long flags;
	long elevation;
	long invenSize;
	long invenMax;
	InvenItem* invenTable;

  char updatedFlags[4];
  // for weapons - ammo in magazine, for ammo - amount of ammo in last ammo pack
  long charges;
  // current type of ammo loaded in magazine
  long ammoPid;
  char gap_44[32];

  long reaction;
  // 1 - combat, 2 - enemies out of sight, 4 - running away
  long combatState;
  // aka action points
  long movePoints;
  long damageFlags;
  long damageLastTurn;
  long aiPacket;
  long teamNum;
  long whoHitMe;
  long health;
  long rads;
  long poison;

	DWORD protoId;
	long cid;
	long lightDistance;
	long lightIntensity;
	DWORD outline;
	long scriptId;
	Critter* owner;
	long scriptIndex;
}

DbFile {
	long fileType;
	DWORD* handle;
};

ElevatorExit {
	long id;
	long elevation;
	long tile;
};

FrmFile {
	long id;
	short fps;
	short actionFrame;
	short frames;
	short xshift[6];
	short yshift[6];
	long oriFrameOffset[6];
	long frameAreaSize;
	short width;
	short height;
	long frameSize;
	short xoffset;
	short yoffset;
	BYTE pixels[2880];
};

FrmHeaderData {
	DWORD version;        // version num
	WORD fps;             // frames per sec
	WORD actionFrame;
	WORD numFrames;       // number of frames per direction
	WORD xCentreShift[6]; // shift in the X direction, of frames with orientations [0-5]
	WORD yCentreShift[6]; // shift in the Y direction, of frames with orientations [0-5]
	DWORD oriOffset[6];   // offset of first frame for direction [0-5] from begining of frame area
	DWORD frameAreaSize;  // size of all frames area
};

FrmFrameData {
	WORD width;
	WORD height;
	DWORD size;   // width * height
	WORD x;
	WORD y;
	BYTE data[1]; // begin frame image data
};

FrmData {
	FrmHeaderData header;
	FrmFrameData frame;
};

SkillInfo {
	char* name;
	char* description;
	long attr;
	long image;
	long base;
	long statMulti;
	long statA;
	long statB;
	long skillPointMulti;
	// Default experience for using the skill: 25 for Lockpick, Steal, Traps, and First Aid, 50 for Doctor, and 100 for Outdoorsman.
	long experience;
	// 1 for Lockpick, Steal, Traps; 0 otherwise
	long f;
};

StatInfo {
	char* dame;
	char* description;
	long image;
	long minValue;
	long maxValue;
	long defaultValue;
};

TraitInfo {
	char* name;
	char* description;
	long image;
};

PathNode {
	char* path;
	DWORD* pDat;
	long isDat;
	PathNode* next;
};

RECT {
  long left;
  long top;
  long right;
  long bottom;
}

Window {
	long wID; // window position in the _window_index array
	long flags;
	RECT wRect;
	long  width;
	long  height;
	long  clearColour;
	long  randX;   // not used by engine
	long* randY;   // used by sfall for additional surfaces
	BYTE* surface; // bytes frame data ref to palette
	long* buttonsList;
	long  buttonT1; // buttonptr?
	long  buttonT2;
	long* menuBar;
};

RectList {
	RECT wRect;
	RectList* nextRect;
};

Program {
	const char* fileName; // path and file name of the script "scripts\*.int"
	long *codeStackPtr;
	long field_8;
	long field_C;
	long codePosition;  // position in the code stack when reading script opcodes
	long field_14;      // unused?
	long field_18;      // unused?
	long *dStackPtr;
	long *aStackPtr;
	long *dStackOffs;
	long *aStackOffs;
	long field_2C;
	long *stringRefPtr;
	long *procTablePtr;
	long *codeStack;    // same as codeStackPtr
	long savedEnv[12];  // saved register values
	long field_6C;      // unused?
	long field_70;      // unused?
	long field_74;      // unused?
	long timerTick;     // unused?
	long func_7C;       // always null?
	short flags;
	short fetchOpcode;
	long currentScriptWin; // current window for executing script
	long shouldRemove;
};

MessageList {
	long numMsgs;
	MessageNode *nodes;
};

Proto {
	long pid;
	long messageNum;
	long fid;
	// range 0-8 in hexes
	long lightDistance;
	// range 0 - 65536
	long lightIntensity;
}

ProtoTile {
	long pid;
	long messageNum;
	long fid;
	// range 0-8 in hexes
	long lightDistance;
	// range 0 - 65536
	long lightIntensity;
	long scriptId;
	Material material;
}

ScriptInstance {
	long id; // same as sid
	long next;
	long elevationAndTile; // first 3 bits - elevation, rest - tile number
	long spatialRadius;
	long flags;
	long scriptIdx; // script index in scripts.lst?
	Program* program;
	long ownerObjectId;
	long localVarOffset; // data
	long numLocalVars;
	long returnValue;
	long action;
	long fixedParam;
	GameObject* selfObject;
	GameObject* sourceObject;
	GameObject* targetObject;
	long actionNum;
	long scriptOverrides;
	long field_48; // unknown
	long howMuch;
	long field_50; // unused
	long procedureTable[28];
	long gap[7];
};

AIcap {
	const char* name;
	long packet_num;
	long max_dist;
	long min_to_hit;
	long min_hp;
	long aggression; // unused
	long hurt_too_much;
	long secondary_freq;
	long called_freq;
	long font;
	long color;
	long outline_color;
	long chance_message;
	long combat_message_data[24];
	AreaAttack area_attack_mode;
	RunAway run_away_mode;
	WeaponPref pref_weapon;
	Distance distance;
	AttackWho attack_who;
	ChemUse chem_use;
	long chem_primary_desire[3];
	Disposition disposition;
	const char* body_type;    // unused
	const char* general_type; // unused
};

BlendColorTableData {
	BYTE colors[256];
	BlendData data[16]; // [0] - without blending (filled values from 0 to 255)
};

*functions:
0x41001 abil_init
0x41005 abil_resize
0x41009 abil_free
0x4100A abil_find
0x41013 abil_search
0x41015 abil_insert
0x41021 abil_delete
0x41026 abil_copy
0x4102B abil_load
0x4102E abil_read_ability_data
0x41037 abil_save
0x4103B abil_write_ability_data
0x41041 switch_dude
0x41046 action_knockback
0x41056 action_blood
0x41060 DWORD pick_death(GameObject* attacker, GameObject* target, GameObject* weapon, DWORD amount, DWORD anim, DWORD hitFromBack)
0x41081 check_death
0x4108C internal_destroy
0x4108D show_damage_to_object
0x410E2 show_death
0x410F4 show_damage_target
0x410FE show_damage_extras
0x4110A show_damage
0x41122 action_attack
0x4112B action_melee
0x4115C throw_change_fid
0x41160 action_ranged
0x411D5 use_an_object
0x411D6 is_next_to
0x411DB action_climb_ladder
0x411F2 action_use_an_item_on_object
0x41211 action_use_an_object
0x41212 get_an_object
0x41213 action_get_an_object
0x4123E action_loot_container
0x4124E action_skill_use
0x41250 action_use_skill_in_combat_error
0x41255 action_use_skill_on
0x4129C pick_object
0x412A5 pick_hex
0x412BC is_hit_from_front
0x412BE can_see
0x412C1 pick_fall
0x412CE action_explode_running
0x412CF action_explode
0x41314 report_explosion
0x4132C compute_explosion_damage
0x4132C finished_explosion
0x41333 action_talk_to
0x41342 can_talk_to
0x41348 talk_to
0x41349 action_dmg
0x41363 report_dmg
0x41366 compute_dmg_damage
0x4136E action_can_be_pushed
0x41379 action_push_critter
0x41397 action_can_talk_to
0x4139C autorun_mutex_create
0x413A0 autorun_mutex_destroy
0x413A2 anim_init
0x413A4 anim_reset
0x413AB anim_exit
0x413AF DWORD register_begin(DWORD regType)
0x413B8 anim_free_slot
0x413C2 register_priority
0x413C4 register_clear
0x413CC DWORD register_end()
0x413D6 anim_preload
0x413D9 anim_cleanup
0x413E2 check_registry
0x413EC anim_busy
0x413F5 DWORD register_object_move_to_object(GameObject* source, GameObject* target, DWORD distance, DWORD delay)
0x41405 DWORD register_object_run_to_object(GameObject* source, GameObject* target, DWORD distance, DWORD delay)
0x41429 register_object_move_to_tile
0x41439 register_object_run_to_tile
0x4145D register_object_move_straight_to_tile
0x4146C register_object_animate_and_move_straight
0x4147B register_object_move_on_stairs
0x4148F register_object_check_falling
0x4149D DWORD register_object_animate(GameObject* object, DWORD anim, DWORD delay)
0x414AA register_object_animate_reverse
0x414B7 DWORD register_object_animate_and_hide(GameObject* object, DWORD anim, DWORD delay)
0x414C5 DWORD register_object_turn_towards(GameObject* object, DWORD tileNum, DWORD nothing)
0x414CC DWORD register_object_inc_rotation(GameObject* object)
0x414D3 DWORD register_object_dec_rotation(GameObject* object)
0x414DA DWORD register_object_erase(GameObject* object)
0x414E2 DWORD register_object_must_erase(GameObject* object)
0x414E9 void register_object_call(DWORD* target, DWORD* source, void* func, DWORD delay)
0x414F2 register_object_call3
0x414FA register_object_must_call
0x41503 register_object_fset
0x4150A DWORD register_object_funset(GameObject* object, DWORD action, DWORD delay)
0x41511 register_object_flatten
0x41518 DWORD register_object_change_fid(GameObject* object, DWORD artFid, DWORD delay)
0x41523 DWORD register_object_take_out(GameObject* object, DWORD holdFrameId, DWORD nothing)
0x41533 DWORD register_object_light(GameObject* object, DWORD lightRadius, DWORD delay)
0x4153A register_object_outline
0x41541 DWORD register_object_play_sfx(GameObject* object, char* sfxName, DWORD delay)
0x4154C register_object_animate_forever
0x41559 register_ping
0x4156A anim_set_check
0x415B4 anim_set_continue
0x415B9 anim_set_end
0x415E2 DWORD anim_can_use_door(GameObject* source, GameObject* object)
0x415EE make_path
0x415EF DWORD make_path_func(GameObject* objectFrom, DWORD tileFrom, DWORD tileTo, char* pathDataBuffer, DWORD checkTileTo, void* blockingFunc)
0x41633 idist
0x41636 DWORD tile_idistance(DWORD sourceTile, DWORD targetTile)
0x4163A make_straight_path
0x4163C DWORD make_straight_path_func(GameObject* objFrom, DWORD tileFrom, DWORD tileTo, void* arrayPtr, DWORD* outObject, DWORD flags, void* blockingFunc)
0x4167F anim_move_to_object
0x41695 make_stair_path
0x416CF anim_move_to_tile
0x416DF anim_move
0x416F5 anim_move_straight_to_tile
0x41712 anim_move_on_stairs
0x41724 check_for_falling
0x41736 object_move
0x4177C object_straight_move
0x4179B anim_animate
0x417B3 object_animate
0x417F1 object_anim_compact
0x417FF check_move
0x4180B dude_move
0x41810 dude_run
0x41816 dude_fidget
0x41837 dude_stand
0x41857 dude_standup
0x4185B anim_turn_towards
0x4185E anim_adj_rotation
0x41862 anim_hide
0x41866 anim_change_fid
0x4186C anim_stop
0x41870 check_gravity
0x41879 compute_tpf
0x41884 art_init
0x418EB art_exit
0x418F1 art_dir
0x418F3 art_get_disable
0x418F5 art_toggle_disable
0x418F6 art_total
0x418F7 art_head_fidgets
0x418FF scale_art
0x41916 FrmHeaderData* art_ptr_lock(DWORD frmId, DWORD* lockPtr)
0x41918 unsigned char* art_ptr_lock_data(DWORD frmId, DWORD frameNum, DWORD rotation, DWORD* lockPtr)
0x4191C unsigned char* art_lock(DWORD frmId, DWORD* lockPtr, DWORD* widthOut, DWORD* heightOut)
0x41926 DWORD art_ptr_unlock(DWORD lockId)
0x41927 void art_flush()
0x41929 art_discard
0x4192B art_get_base_name
0x41931 art_get_code
0x41942 char* art_get_name(DWORD artFID)
0x41966 art_read_lst
0x41976 art_frame_fps
0x41977 art_frame_action_frame
0x41978 art_frame_max_frame
0x4197A DWORD art_frame_width(FrmHeaderData* frm, DWORD frameNum, DWORD rotation)
0x4197B DWORD art_frame_length(FrmHeaderData* frm, DWORD frameNum, DWORD rotation)
0x4197D art_frame_width_length
0x41982 art_frame_hot
0x41984 art_frame_offset
0x41987 unsigned char* art_frame_data(FrmHeaderData* frm, DWORD frameNum, DWORD rotation)
0x41988 FrmFrameData* frame_ptr(FrmHeaderData* frm, DWORD frame, DWORD direction)
0x4198C bool art_exists(DWORD artFid)
0x41993 art_fid_valid
0x41999 art_alias_num
0x4199A artCritterFidShouldRun
0x4199D art_alias_fid
0x419A7 art_data_size
0x419B7 art_data_load
0x419C8 DWORD art_id(DWORD artType, DWORD lstIndex, DWORD animCode, DWORD weaponCode, DWORD directionCode)
0x419C8 art_data_free
0x419D6 art_readSubFrameData
0x419E1 art_readFrameData
0x419EC DWORD load_frame(char* filename, FrmFile** frmPtr)
0x419FC load_frame_into
0x41A07 art_writeSubFrameData
0x41A13 art_writeFrameData
0x41A1E save_frame
0x41A2B defaultCompressionFunc
0x41A2D decodeRead
0x41A2E audioOpen
0x41A50 audioCloseFile
0x41A57 audioRead
0x41A5E audioSeek
0x41A78 audioFileSize
0x41A7A audioTell
0x41A7C audioWrite
0x41A7D initAudio
0x41A81 audioClose
0x41A85 defaultCompressionFunc__
0x41A87 decodeRead_
0x41A88 audiofOpen
0x41AAA audiofCloseFile
0x41AB0 audiofRead
0x41AB7 audiofSeek
0x41AD2 audiofFileSize
0x41AD3 audiofTell
0x41AD5 audiofWrite
0x41AD6 initAudiof
0x41ADA audiofClose
0x41B7F automap_init
0x41B80 automap_reset
0x41B81 automap_exit
0x41B87 automap_load
0x41B89 automap_save
0x41B8B automapDisplayMap
0x41B8B automap
0x41BD1 draw_top_down_map
0x41C00 draw_top_down_map_pipboy
0x41C0F automap_pip_save
0x41C84 WriteAM_Entry
0x41C8C AM_ReadEntry
0x41CAD WriteAM_Header
0x41CB5 AM_ReadMainHeader
0x41CBA decode_map_data
0x41CC9 am_pip_init
0x41CD3 YesWriteIndex
0x41CD6 copy_file_data
0x41CE7 ReadAMList
0x41CF2 dialog_out
0x41DE9 file_dialog
0x41EA7 save_file_dialog
0x41FBD PrntFlist
0x41FCC cache_init
0x41FD4 cache_resize
0x41FD5 cache_exit
0x41FDC cache_query
0x41FDE cache_lock
0x41FEF cache_lock_alias
0x4200B cache_unlock
0x4200E cache_discard
0x42012 cache_flush
0x42018 cache_size
0x42019 cache_stats
0x4201C cache_create_list
0x42038 cache_destroy_list
0x4203A cache_add
0x4205E cache_insert
0x42065 cache_find
0x4206C cache_create_item
0x42070 cache_init_item
0x42074 cache_destroy_item
0x42076 cache_unlock_all
0x4207D cache_reset_counter
0x42084 cache_make_room
0x42099 cache_purge
0x420A4 cache_resize_array
0x420A7 cache_compare_make_room
0x420AE cache_compare_reset_counter
0x420CC combat_init
0x420DA combat_reset
0x420E1 combat_exit
0x420E2 find_cid
0x420E4 combat_load
0x42124 combat_save
0x4213E combat_safety_invalidate_weapon
0x4213F DWORD combat_safety_invalidate_weapon_func(GameObject* source, GameObject* weapon, DWORD hitMode, GameObject* targetA, DWORD* outSafeRange, GameObject* targetB)
0x4217B combatTestIncidentalHit
0x4217D combat_whose_turn
0x4217E combat_data_init
0x4217F combatInitAIInfoList
0x42185 combatCopyAIInfo
0x42188 combatAIInfoGetFriendlyDead
0x4218A combatAIInfoSetFriendlyDead
0x4218E combatAIInfoGetLastTarget
0x42191 combatAIInfoSetLastTarget
0x42196 combatAIInfoGetLastItem
0x42199 combatAIInfoSetLastItem
0x4219C combatAIInfoGetLastMove
0x421A0 combatAIInfoSetLastMove
0x421A3 combat_begin
0x421C8 combat_begin_extra
0x421D1 combat_update_critters_in_los
0x421D5 combat_update_critter_outline_for_los
0x421EF combat_over
0x42219 combat_over_from_load
0x4221B combat_give_exps
0x4222A combat_add_noncoms
0x42237 combat_in_range
0x4223C compare_faster
0x42243 combat_sequence_init
0x42258 combat_sequence
0x42269 combat_end
0x4227D combat_turn_run
0x4227F combat_input
0x42290 combat_end_turn
0x42291 combat_set_move_all
0x42299 DWORD combat_turn(GameObject* critter, DWORD isDudeTurn)
0x422C6 combat_should_end
0x422D2 combat
0x422EC combat_ctd_init
0x422F3 combat_attack
0x42310 combat_bullet_start
0x42312 check_ranged_miss
0x42328 shoot_along_path
0x42348 compute_spray
0x42371 correctAttackForPerks
0x42378 compute_attack
0x423C1 compute_explosion_on_extras
0x423EB attack_crit_success
0x42408 attackFindInvalidFlags
0x4240D attack_crit_failure
0x42432 do_random_cripple
0x42436 DWORD determine_to_hit(GameObject* source, GameObject* target, DWORD bodyPart, DWORD hitMode)
0x42438 determine_to_hit_no_range
0x42439 determine_to_hit_from_tile
0x4243A determine_to_hit_func
0x4247B compute_damage
0x424BA death_checks
0x424C0 apply_damage
0x424EE void check_for_death(GameObject* critter, DWORD amountDamage, DWORD* flags)
0x424F2 set_new_results
0x42502 damage_object
0x42517 combat_display
0x425A9 combat_display_hit
0x425BA combat_display_flags
0x425E3 combat_anim_begin
0x425E8 combat_anim_finished
0x425FB combat_standup
0x42603 print_tohit
0x42612 combat_get_loc_name
0x4261B draw_loc_off
0x42621 get_called_shot_location
0x42661 combat_check_bad_shot
0x42674 combat_to_hit
0x4267C combat_attack_this
0x426AA combat_outline_on
0x426BC combat_outline_off
0x426C6 combat_highlight_change
0x426CC combat_is_shot_blocked
0x426D9 combat_player_knocked_out_by
0x426DB combat_explode_scenery
0x426DD combat_delete_critter
0x426EC combatKillCritterOutsideCombat
0x426F0 parse_hurt_str
0x426FA cai_match_str_to_list
0x426FE cai_init_cap
0x42703 combat_ai_init
0x4279F combat_ai_exit
0x4279F combat_ai_reset
0x427AD combat_ai_load
0x427B5 combat_ai_save
0x427BC cai_cap_load
0x427E1 cai_cap_save
0x42805 combat_ai_num
0x42806 combat_ai_name
0x4280B AIcap* ai_cap(GameObject* critter)
0x42811 ai_cap_from_packet
0x42818 ai_get_burst_value
0x42819 ai_get_run_away_value
0x4281F ai_get_weapon_pref_value
0x42820 ai_get_distance_pref_value
0x42821 ai_get_attack_who_value
0x42822 ai_get_chem_use_value
0x42822 ai_set_burst_value
0x42824 ai_set_run_away_value
0x4282D ai_set_weapon_pref_value
0x4282E ai_set_distance_pref_value
0x42830 ai_set_attack_who_value
0x42832 ai_set_chem_use_value
0x42834 ai_get_disposition
0x42835 ai_set_disposition
0x42839 DWORD ai_magic_hands(GameObject* source, GameObject* object, DWORD msgNumber)
0x42848 ai_check_drugs
0x42886 ai_run_away
0x42899 ai_move_away
0x428AC ai_find_friend
0x428B1 compare_nearer
0x428B7 ai_sort_list_distance
0x428B8 compare_strength
0x428BD ai_sort_list_strength
0x428BE compare_weakness
0x428C2 ai_sort_list_weakness
0x428C3 ai_find_nearest_team
0x428CF ai_find_nearest_team_in_combat
0x428DB ai_find_attackers
0x428F4 ai_danger_source
0x4291C caiSetupTeamCombat
0x42921 caiTeamCombatInit
0x4292C caiTeamCombatExit
0x4292D DWORD ai_have_ammo(GameObject* critter, GameObject* item, GameObject** outAmmo)
0x42938 caiHasWeapPrefType
0x4293B GameObject* ai_best_weapon(GameObject* source, GameObject* prevItem, GameObject* checkItem, GameObject* target)
0x4298E bool ai_can_use_weapon(GameObject* critter, GameObject* item, DWORD hitMode)
0x4299A GameObject* ai_search_inven_weap(GameObject* source, DWORD apCheck, GameObject* target)
0x429A6 ai_search_inven_armor
0x429B4 ai_can_use_drug
0x429C1 GameObject* ai_search_environ(GameObject* critter, DWORD itemType)
0x429D6 GameObject* ai_retrieve_object(GameObject* critter, GameObject* item)
0x429DB DWORD ai_pick_hit_mode(GameObject* source, GameObject* item, GameObject* target)
0x429FC ai_move_steps_closer
0x42A1C ai_move_closer
0x42A1D cai_retargetTileFromFriendlyFire
0x42A41 cai_retargetTileFromFriendlyFireSubFunc
0x42A51 cai_attackWouldIntersect
0x42A5B ai_switch_weapons
0x42A67 ai_called_shot
0x42A74 ai_attack
0x42A7D ai_try_attack
0x42AE9 cAIPrepWeaponItem
0x42AEC cai_attempt_w_reload
0x42AF7 combat_ai_begin
0x42AFB combat_ai_over
0x42AFD cai_perform_distance_prefs
0x42B10 cai_get_min_hp
0x42B13 combat_ai
0x42B3F combatai_want_to_join
0x42B4A combatai_want_to_stop
0x42B50 combatai_switch_team
0x42B5D combat_ai_set_ai_packet
0x42B63 combatai_msg
0x42B80 void ai_print_msg(GameObject* object, DWORD mode)
0x42B86 combat_ai_random_target
0x42B90 combatai_rating
0x42B9D combatai_check_retaliation
0x42BA0 DWORD is_within_perception(GameObject* source, GameObject* target)
0x42BB3 combatai_load_messages
0x42BBD combatai_unload_messages
0x42BBF combatai_refresh_messages
0x42BC6 combatai_notify_onlookers
0x42BCD combatai_notify_friends
0x42BD2 combatai_delete_critter
0x42BD9 config_init
0x42BDB config_exit
0x42BE3 config_cmd_line_parse
0x42BF4 config_get_string
0x42BF9 config_set_string
0x42C05 config_get_value
0x42C09 config_get_values
0x42C16 config_set_value
0x42C19 config_set_values
0x42C28 config_load
0x42C32 config_save
0x42C4B config_parse_line
0x42C59 config_split_line
0x42C63 config_add_section
0x42C69 config_strip_white_space
0x42C71 config_get_double
0x42C74 config_set_double
0x42C79 counter_on
0x42C7D counter_off
0x42C7F counter
0x42C86 credits
0x42CE6 credits_get_next_line
0x42CF5 critter_init
0x42CFE critter_reset
0x42D00 critter_exit
0x42D01 critter_load
0x42D05 critter_save
0x42D09 critter_copy
0x42D0A char* critter_name(GameObject* critter)
0x42D13 void critter_pc_set_name(char* newName)
0x42D17 critter_pc_reset_name
0x42D18 critter_get_hits
0x42D1A critter_adjust_hits
0x42D1F critter_get_poison
0x42D21 critter_adjust_poison
0x42D31 critter_check_poison
0x42D38 critter_get_rads
0x42D3A critter_adjust_rads
0x42D4F critter_check_rads
0x42D61 get_rad_damage_level
0x42D62 clear_rad_damage
0x42D63 process_rads
0x42D74 critter_process_rads
0x42D7A critter_load_rads
0x42D7F critter_save_rads
0x42D82 critter_get_base_damage_type
0x42D86 critter_kill_count_clear
0x42D87 critter_kill_count_inc
0x42D8A critter_kill_count
0x42D8C critter_kill_count_load
0x42D8F critter_kill_count_save
0x42D92 DWORD critter_kill_count_type(GameObject* critter)
0x42D97 critter_kill_name
0x42D9B critter_kill_info
0x42D9F critter_heal_hours
0x42DA5 critterClearObjDrugs
0x42DA6 critter_kill
0x42DCB critter_kill_exps
0x42DCD critter_is_active
0x42DD1 DWORD critter_is_dead(GameObject* critter)
0x42DD5 critter_is_crippled
0x42DD8 critter_is_prone
0x42DDC DWORD critter_body_type(GameObject* critter)
0x42DE1 critter_load_data
0x42DE5 pc_load_data
0x42DF7 critter_read_data
0x42E04 critter_save_data
0x42E08 pc_save_data
0x42E17 critter_write_data
0x42E22 pc_flag_off
0x42E26 void pc_flag_on(DWORD flag)
0x42E2B pc_flag_toggle
0x42E2F DWORD is_pc_flag(DWORD flag)
0x42E32 critter_sneak_check
0x42E3E critter_sneak_clear
0x42E3F DWORD is_pc_sneak_working()
0x42E42 critter_wake_up
0x42E46 critter_wake_clear
0x42E4C critter_set_who_hit_me
0x42E56 critter_can_obj_dude_rest
0x42E62 critter_compute_ap_from_distance
0x42E66 DWORD critterIsOverloaded(GameObject* critter)
0x42E69 critter_is_fleeing
0x42E6A critter_flag_check
0x42E6F critter_flag_set
0x42E71 critter_flag_unset
0x42E74 critter_flag_toggle
0x42E78 cycle_init
0x42E8C cycle_reset
0x42E90 cycle_exit
0x42E93 cycle_disable
0x42E93 cycle_enable
0x42E94 cycle_is_enabled
0x42E95 change_cycle_speed
0x42E97 cycle_colors
0x42E97 get_cycle_speed
0x42EE7 datafileSetFilenameFunc
0x42EE7 defaultMangleName
0x42EE7 setBitmapLoadFunc
0x42EE8 datafileConvertData
0x42EEF datafileConvertDataVGA
0x42EF6 loadRawDataFile
0x42EFC loadDataFile
0x42EFF load256Palette
0x42F02 trimBuffer
0x42F0E datafileGetPalette
0x42F0E datafileLoadBlock
0x42F17 dialogRegisterOptionCallback
0x42F17 replyAddNew
0x42F43 getReply
0x42F4C replyAddOption
0x42F62 replyAddOptionProc
0x42F71 optionFree
0x42F75 replyFree
0x42F85 addWindow
0x42F92 windowTitleMessage
0x42FB9 endDialog
0x42FBF findEnding
0x42FC5 wordWrap
0x42FC7 printLine
0x42FCF printStr
0x42FD8 windowDrawLines
0x43007 doReply
0x43010 abortReply
0x43018 endReply
0x4301E drawStr
0x43026 doOptions
0x430A3 tryCombine
0x430A3 tryMovie
0x430A9 executeReply
0x430B3 executeOption
0x430CE doDialog
0x430D4 dialogStart
0x430DB dialogRestart
0x430DE dialogGotoReply
0x430E8 dialogTitle
0x430EF dialogReply
0x430F0 dialogOption
0x430F3 dialogOptionProc
0x430F6 dialogOptionUserData
0x430FA dialogOptionProcUserData
0x430FD dialogMessage
0x43108 dialogGo
0x43118 dialogGetExitPoint
0x43119 dialogQuit
0x4311B dialogSetOptionWindow
0x4311E dialogSetReplyWindow
0x43120 dialogSetBorder
0x43121 dialogSetScrollUp
0x4312C dialogSetScrollDown
0x43136 dialogSetSpacing
0x43137 dialogSetOptionColor
0x4313C dialogSetReplyColor
0x43142 dialogSetOptionFlags
0x43143 dialogClose
0x43151 dialogGetDialogDepth
0x43152 dialogRegisterWinDrawCallbacks
0x43153 dialogToggleMediaFlag
0x43155 dialogGetMediaFlag
0x43161 display_init
0x43180 display_reset
0x43184 display_exit
0x43186 void display_print(char* msg)
0x431A2 display_clear
0x431A7 display_redraw
0x431B7 display_scroll_up
0x431B9 display_scroll_down
0x431BC display_arrow_up
0x431BD display_arrow_down
0x431BE display_arrow_restore
0x431BE display_disable
0x431C1 display_enable
0x431DF editor_design
0x4329E CharEditStart
0x433AA CharEditEnd
0x433BE RstrBckgProc
0x433C0 CharEditInit
0x433C6 get_input_str
0x43406 isdoschar
0x4340D strmfe
0x43410 DrawFolder
0x43423 list_perks
0x43449 kills_list_comp
0x4344A ListKills
0x4345D PrintBigNum
0x43492 PrintLevelWin
0x434B3 PrintBasicStat
0x434F1 PrintGender
0x43501 PrintAgeBig
0x43511 PrintBigname
0x43527 ListDrvdStats
0x43615 ListSkills
0x4365A DrawInfoWin
0x436C4 NameWindow
0x436F7 PrintName
0x436FE AgeWindow
0x43766 SexWindow
0x4379B StatButton
0x437C0 OptionWindow
0x4390B bool db_access(char* fileName)
0x4390D Save_as_ASCII
0x43A4B ResetScreen
0x43A55 AddSpaces
0x43A58 AddDots
0x43A5B RegInfoAreas
0x43A79 CheckValidPlayer
0x43A7D SavePlayer
0x43A8B RestorePlayer
0x43A9C itostndn
0x43AAE DrawCard
0x43AE3 XltPerk
0x43AE8 FldrButton
0x43AF4 InfoButton
0x43B23 SliderBtn
0x43B64 tagskl_free
0x43B67 TagSkillSelect
0x43B8A ListTraits
0x43BAE get_trait_count
0x43BB0 TraitSelect
0x43BCE list_karma
0x43C1B editor_save
0x43C1E editor_load
0x43C20 editor_reset
0x43C22 UpdateLevel
0x43C39 RedrwDPrks
0x43C4F perks_dialog
0x43CAC InputPDLoop
0x43D0B ListDPerks
0x43D2F RedrwDMPrk
0x43D66 RedrwDMTagSkl
0x43D6F Add4thTagSkill
0x43D81 ListNewTagSkills
0x43D96 ListMyTraits
0x43DB4 name_sort_comp
0x43DB5 DrawCard2
0x43DE9 push_perks
0x43DEB pop_perks
0x43DF2 PerkCount
0x43DF5 is_supper_bonus
0x43DF8 folder_init
0x43E09 folder_exit
0x43E0D folder_scroll
0x43E20 folder_clear
0x43E28 DWORD folder_print_seperator(char* text)
0x43E3D DWORD folder_print_line(char* text)
0x43E47 folder_print_kill
0x43E5C karma_vars_init
0x43E76 karma_vars_exit
0x43E78 karma_vars_qsort_compare
0x43E79 general_reps_init
0x43E91 general_reps_exit
0x43E93 general_reps_qsort_compare
0x43EF5 elevator_select
0x43F32 elevator_start
0x43F6D elevator_end
0x43F73 Check4Keys
0x43F78 endgame_slideshow
0x43F81 endgame_movie
0x43F8C gameOverConfim
0x43F99 endgame_init
0x43FB2 endgame_exit
0x43FBD endgame_pan_desert
0x44000 endgame_display_image
0x4401A endgame_load_voiceover
0x44032 endgame_play_voiceover
0x44035 endgame_stop_voiceover
0x44037 void endgame_load_palette(DWORD artType, DWORD fid)
0x4403F endgame_load_subtitles
0x4403F endgame_voiceover_callback
0x4404E endgame_show_subtitles
0x4406C endgame_clear_subtitles
0x44072 endgame_movie_callback
0x44073 endgame_movie_bk_process
0x44077 endgame_load_slide_info
0x44095 endgame_unload_slide_info
0x44098 endgameDeathEndingInit
0x440BA endgameDeathEndingExit
0x440BD endgameSetupDeathEnding
0x440CF endgameSetupInit
0x440D8 endgameGetDeathEndingFileName
0x440DD annoy_user
0x440F1 hashName
0x440F5 findProc
0x44101 findEmptyProc
0x4410A findVar
0x44116 exportGetVariable
0x44118 findEmptyVar
0x44122 exportStoreStringVariable
0x44127 exportStoreVariable
0x44133 exportStoreVariableByTag
0x4413D exportFetchVariable
0x4414B exportExportVariable
0x4414F removeProgramReferences
0x44152 initExport
0x44153 exportClose
0x44158 exportFindProcedure
0x4415B exportExportProcedure
0x44160 exportGetVariableList
0x4417D exportFreeVariableList
0x44182 exportClearAllVariables
0x4418A exportLoadAllFP
0x441A7 exportSaveAllFP
0x441C8 FMInit
0x441CE FMExit
0x441D2 FMLoadFont
0x44212 FMtext_font
0x44216 FMtext_height
0x44218 DWORD FMtext_width(char* text)
0x4421D FMtext_char_width
0x44221 FMtext_mono_width
0x44224 FMtext_spacing
0x44225 FMtext_size
0x44227 FMtext_max
0x4422A FMtext_curr
0x4422B FMtext_to_buf
0x4424F FMtext_leading
0x44250 FMtext_space_width
0x44252 Swap4
0x44256 Swap2
0x44258 game_init
0x442B8 game_reset
0x442C3 game_exit
0x442D4 game_handle_input
0x443BF game_ui_disable
0x443C3 game_ui_enable
0x443C6 DWORD game_get_global_var(DWORD globalVar)
0x443C6 game_ui_is_disabled
0x443C9 game_set_global_var
0x443CC game_load_info
0x443CE game_load_info_vars
0x443E2 game_state
0x443E3 game_state_request
0x443E9 game_state_update
0x443EC game_display_counter
0x443EF game_screendump
0x443F5 game_unload_info
0x443F7 game_help
0x4440B game_quit_with_confirm
0x44418 game_init_databases
0x44438 game_splash_screen
0x44457 gconfig_init
0x444C1 gconfig_save
0x444C3 gconfig_exit
0x444C9 fatal_error
0x444D1 gdialogInit
0x444D2 gdialogActive
0x444D2 gdialogReset
0x444D3 gdialogEnter
0x444FE gdialogSystemEnter
0x44505 gdialogSetupSpeech
0x4450C gdialogFreeSpeech
0x4450E gdialogEnableBK
0x4450F gdialogDisableBK
0x44510 gdialogInitFromScript
0x44529 gdialogExitFromScript
0x44543 gdialogSetBackground
0x44544 void gdialogDisplayMsg(char* message)
0x4454F gdialogStart
0x44551 gdialogSayMessage
0x44553 gdialogOption
0x44557 gdialogOptionStr
0x4455B gdialogOptionProc
0x4455F gdialogOptionProcStr
0x44564 gdialogReply
0x44567 gdialogReplyStr
0x4456D gdialogGo
0x44576 gdialogUpdatePartyStatus
0x4457E gdHide
0x44581 gdUnhide
0x44584 gdUnhideReply
0x44585 gdAddOption
0x4458B gdAddOptionStr
0x44593 gdReviewInit
0x445C1 gdReviewExit
0x445CA gdReviewPressed
0x445D4 gdReviewDisplay
0x445FD gdReviewFree
0x44604 gdAddReviewReply
0x4460B gdAddReviewReplyStr
0x4461A gdAddReviewOptionChosen
0x4461F gdAddReviewOptionChosenStr
0x44628 gdProcessInit
0x44645 gdProcessCleanup
0x44649 gdProcessExit
0x44650 gdUpdateMula
0x4465C gdProcess
0x4468D gdProcessChoice
0x446A1 gdProcessHighlight
0x446B5 gdProcessUnHighlight
0x446C9 gdProcessReply
0x446D3 gdProcessUpdate
0x44715 gdCreateHeadWindow
0x44729 gdDestroyHeadWindow
0x44730 gdSetupFidget
0x44759 gdWaitForFidget
0x44761 gdPlayTransition
0x44772 reply_arrow_up
0x44773 reply_arrow_down
0x44774 reply_arrow_restore
0x44775 demo_copy_title
0x44781 demo_copy_options
0x44791 gDialogRefreshOptionsRect
0x447A5 gdialog_bk
0x447CA talk_to_critter_reacts
0x447D9 gdialog_scroll_subwin
0x447F6 text_num_lines
0x447F8 text_to_rect_wrapped
0x447FA text_to_rect_func
0x44821 gdActivateBarter
0x44821 gdialogSetBarterMod
0x44826 barter_end_to_talk_to
0x44829 gdialog_barter_create_win
0x44854 gdialog_barter_destroy_win
0x44866 gdialog_barter_cleanup_tables
0x44874 gdControlCreateWin
0x448C1 gdControlDestroyWin
0x448D3 gdControlUpdateInfo
0x44928 gdControlPressed
0x4492D gdPickAIUpdateMsg
0x44933 gdCanBarter
0x4493B gdControl
0x4496A gdCustomCreateWin
0x449A1 gdCustomDestroyWin
0x449B3 gdCustom
0x449BB gdCustomUpdateInfo
0x449E6 gdCustomSelectRedraw
0x449FC gdCustomSelect
0x44A4E gdCustomUpdateSetting
0x44A52 gdialog_barter_pressed
0x44A62 gdialog_window_create
0x44A9D gdialog_window_destroy
0x44AAD talk_to_create_background_window
0x44AB1 talk_to_refresh_background_window
0x44ABA talkToRefreshDialogWindowRect
0x44AC6 talk_to_translucent_trans_buf_to_buf
0x44ACF gdDisplayFrame
0x44B08 gdBlendTableInit
0x44B1D gdBlendTableExit
0x44B20 localmymalloc
0x44B21 localmyrealloc
0x44B22 localmyfree
0x44B23 localmystrdup
0x44B25 gmemory_init
0x44B29 gmalloc
0x44B29 grealloc
0x44B2A gfree
0x44B2B gmouse_init
0x44B2E gmouse_reset
0x44B3B gmouse_exit
0x44B45 gmouse_enable
0x44B48 gmouse_disable
0x44B4C gmouse_enable_scrolling
0x44B4C gmouse_is_enabled
0x44B4D gmouse_disable_scrolling
0x44B4E gmouse_scrolling_is_enabled
0x44B4E gmouse_set_click_to_scroll
0x44B50 gmouse_get_click_to_scroll
0x44B54 gmouse_is_scrolling
0x44B68 gmouse_bk_process
0x44BFA gmouse_handle_event
0x44C84 DWORD gmouse_set_cursor(DWORD picNum)
0x44C9E gmouse_get_cursor
0x44C9F gmouse_3d_enable_modes
0x44C9F gmouse_set_mapper_mode
0x44CA0 gmouse_3d_disable_modes
0x44CA1 void gmouse_3d_set_mode(DWORD mode)
0x44CA1 gmouse_3d_modes_are_enabled
0x44CB7 gmouse_3d_toggle_mode
0x44CBD gmouse_3d_refresh
0x44CBF gmouse_3d_set_fid
0x44CCF gmouse_3d_get_fid
0x44CD0 gmouse_3d_reset_fid
0x44CD2 gmouse_3d_on
0x44CE3 gmouse_3d_off
0x44CEB gmouse_3d_is_on
0x44CEC GameObject* object_under_mouse(DWORD crSwitch, DWORD inclDude, DWORD elevation)
0x44CFA gmouse_3d_build_pick_frame
0x44D20 gmouse_3d_pick_frame_hot
0x44D21 gmouse_3d_build_menu_frame
0x44D61 gmouse_3d_menu_frame_hot
0x44D63 gmouse_3d_highlight_menu_frame
0x44D77 gmouse_3d_build_to_hit_frame
0x44D87 gmouse_3d_build_hex_frame
0x44D95 gmouse_3d_synch_item_highlight
0x44D98 gmouse_3d_init
0x44DAC gmouse_3d_reset
0x44DB3 gmouse_3d_exit
0x44DB7 gmouse_3d_lock_frames
0x44DE4 gmouse_3d_unlock_frames
0x44DF1 gmouse_3d_set_flat_fid
0x44DF4 gmouse_3d_reset_flat_fid
0x44DF9 gmouse_3d_move_to
0x44E42 gmouse_check_scrolling
0x44E54 gmouse_remove_item_outline
0x44E58 gmObjIsValidTarget
0x44E5C gmovie_init
0x44E60 gmovie_reset
0x44E63 gmovie_load
0x44E66 gmovie_save
0x44E69 gmovie_play
0x44EAE gmPaletteFinish
0x44EB0 gmovie_has_been_played
0x44EB1 gmovieIsPlaying
0x44EB1 gmovie_subtitle_func
0x44EBF bit1exbit8
0x44ECC tint_mask_buf_to_buf
0x44ED4 buf_to_color
0x44ED9 load_lbm_to_buf
0x44F25 CompLZS
0x44F5F InitTree
0x44F63 InsertNode
0x44F7E DeleteNode
0x44F92 DecodeLZS
0x44FA7 InitGreyTable
0x44FC4 grey_buf
0x44FC7 gsound_init
0x45016 gsound_reset
0x45024 gsound_exit
0x4502B gsound_sfx_enable
0x4502D gsound_sfx_disable
0x4502E gsound_set_master_volume
0x4502E gsound_sfx_is_enabled
0x45041 gsound_get_master_volume
0x45041 gsound_set_sfx_volume
0x45045 gsound_background_disable
0x45045 gsound_get_sfx_volume
0x45048 gsound_background_enable
0x4504D gsound_background_is_enabled
0x4504D gsound_background_volume_set
0x45061 gsound_background_volume_get
0x45062 DWORD gsound_background_volume_get_set(DWORD setVolume)
0x45063 gsound_background_fade_get
0x45063 gsound_background_fade_set
0x45064 gsound_background_fade_get_set
0x45065 gsound_background_callback_get
0x45065 gsound_background_callback_set
0x45066 gsound_background_callback_get_set
0x45067 gsound_background_length_get
0x45067 gsound_background_play
0x450A0 gsound_background_play_level_music
0x450A1 gsound_background_play_preloaded
0x450AB gsound_background_stop
0x450B0 gsound_background_restart_last
0x450B5 gsound_background_pause
0x450B6 gsound_background_unpause
0x450B7 gsound_speech_disable
0x450BC gsound_speech_enable
0x450BE gsound_speech_is_enabled
0x450BE gsound_speech_volume_set
0x450C5 gsound_speech_volume_get
0x450C6 gsound_speech_volume_get_set
0x450C7 gsound_speech_callback_get
0x450C7 gsound_speech_callback_set
0x450C8 gsound_speech_callback_get_set
0x450C9 gsound_speech_length_get
0x450CA gsound_speech_play
0x450F8 gsound_speech_play_preloaded
0x45102 gsound_speech_stop
0x45105 gsound_speech_pause
0x45106 gsound_speech_unpause
0x45108 gsound_play_sfx_file_volume
0x4510D gsound_load_sound
0x45145 gsound_load_sound_volume
0x45148 gsound_delete_sfx
0x4514F gsnd_anim_sound
0x45151 gsound_play_sound
0x45153 gsound_compute_relative_volume
0x45160 gsnd_build_character_sfx_name
0x4516F gsnd_build_ambient_sfx_name
0x45171 gsnd_build_interface_sfx_name
0x45176 gsnd_build_weapon_sfx_name
0x45189 gsnd_build_scenery_sfx_name
0x4518D gsnd_build_open_sfx_name
0x45197 gsound_red_butt_press
0x45197 gsound_red_butt_release
0x45198 gsound_med_butt_press
0x45199 gsound_lrg_butt_press
0x45199 gsound_med_butt_release
0x4519A void gsound_play_sfx_file(char* name)
0x4519A gsound_lrg_butt_release
0x451A0 gsound_bkg_proc
0x451A0 gsound_open
0x451A3 gsound_read
0x451A4 gsound_seek
0x451A7 gsound_filesize
0x451A7 gsound_tell
0x451A8 gsound_compressed_query
0x451A9 gsound_internal_speech_callback
0x451AB gsound_internal_background_callback
0x451AD gsound_background_allocate
0x451AD gsound_internal_effect_callback
0x451B3 gsound_background_find_with_copy
0x451E2 gsound_background_find_dont_copy
0x451F9 gsound_speech_find_dont_copy
0x45208 gsound_background_remove_last_copy
0x4520E gsound_background_start
0x45219 gsound_speech_start
0x45220 gsound_get_music_path
0x45235 gsound_check_active_effects
0x45237 gsound_get_sound_ready_for_effect
0x4524E gsound_file_exists_f
0x4524F gsound_file_exists_db
0x45251 gsound_setup_paths
0x45262 gsound_sfx_q_start
0x45263 gsound_sfx_q_process
0x45274 gzRealUncompressCopyReal_file
0x45280 gzcompress_file
0x4528B gzdecompress_file
0x45297 heap_init
0x452A3 heap_exit
0x452AD heap_allocate
0x452CB heap_deallocate
0x452DE heap_lock
0x452EE heap_unlock
0x452FC heap_validate
0x4532A heap_stats
0x45330 heap_create_lists
0x4533A heap_destroy_lists
0x45343 heap_init_handles
0x45348 heap_exit_handles
0x4534B heap_acquire_handle
0x45353 heap_release_handle
0x45355 heap_clear_handles
0x45358 heap_find_free_block
0x453BC heap_build_free_list
0x453C9 heap_sort_free_list
0x453CC heap_qsort_compare_free
0x453CD heap_build_moveable_list
0x453E5 heap_sort_moveable_list
0x453E7 heap_qsort_compare_moveable
0x453E8 heap_build_subblock_list
0x453F2 heap_sort_subblock_list
0x453F4 heap_build_fake_move_list
0x453FD dbg_error
0x45400 int_debug
0x45404 scripts_tile_is_visible
0x45409 void correctFidForRemovedItem(GameObject* critter, GameObject* item, DWORD slotFlag)
0x4541C op_give_exp_points
0x45423 op_scr_return
0x4542A op_play_sfx
0x45431 op_set_map_start
0x4543F op_override_map_start
0x45456 op_has_skill
0x45463 op_using_skill
0x4546E op_roll_vs_skill
0x4547D op_skill_contest
0x45489 op_do_check
0x4549A op_is_success
0x454A4 op_is_critical
0x454AD op_how_much
0x454B6 op_mark_area_known
0x454C3 op_reaction_influence
0x454CD op_random
0x454D8 op_roll_dice
0x454E2 op_move_to
0x454FA op_create_object_sid
0x4551E op_destroy_object
0x45538 op_display_msg
0x45543 op_script_overrides
0x45547 op_obj_is_carrying_obj_pid
0x45553 op_tile_contains_obj_pid
0x45560 op_self_obj
0x45562 op_source_obj
0x45567 op_target_obj
0x4556C op_dude_obj
0x4556E op_obj_being_used_with
0x45574 op_local_var
0x4557C op_set_local_var
0x45585 op_map_var
0x4558C op_set_map_var
0x45595 op_global_var
0x4559E op_set_global_var
0x455A9 op_script_action
0x455AE op_obj_type
0x455B6 op_obj_item_subtype
0x455C1 op_get_critter_stat
0x455CC op_set_critter_stat
0x455DC op_animate_stand_obj
0x455E7 op_animate_stand_reverse_obj
0x455F3 op_animate_move_obj_to_tile
0x45607 op_tile_in_tile_rect
0x45617 op_tile_distance
0x45622 op_tile_distance_objs
0x45632 op_tile_num
0x4563B op_tile_num_in_direction
0x4564D op_pickup_obj
0x45658 op_drop_obj
0x45662 op_add_obj_to_inven
0x45670 op_rm_obj_from_inven
0x45681 op_wield_obj_critter
0x4569D op_use_obj
0x456AC op_obj_can_see_obj
0x456C0 op_attack
0x456DF op_start_gdialog
0x456F8 op_end_dialogue
0x456FA op_dialogue_reaction
0x45700 objs_area_turn_on_off
0x45711 op_metarule3
0x45734 op_set_map_music
0x45741 op_set_obj_visibility
0x45755 op_load_map
0x45768 op_wm_area_set_pos
0x45773 op_set_exit_grids
0x4577E op_anim_busy
0x45788 op_critter_heal
0x45793 op_set_light_level
0x4579F op_game_time
0x457A1 op_game_time_in_seconds
0x457A4 op_elevation
0x457AD op_kill_critter
0x457BF correctDeath
0x457CB op_kill_critter_type
0x457EB op_critter_damage
0x457FF op_add_timer_event
0x45809 op_rm_timer_event
0x45810 op_game_ticks
0x45818 op_has_trait
0x45835 op_obj_can_hear_obj
0x45843 op_game_time_hour
0x45845 op_fixed_param
0x4584B op_tile_is_visible
0x45853 op_dialogue_system_enter
0x45859 op_action_being_used
0x4585E op_critter_state
0x4586C op_game_time_advance
0x45876 op_radiation_inc
0x45880 op_radiation_dec
0x4588B op_critter_attempt_placement
0x4589A op_obj_pid
0x458A3 op_cur_map_index
0x458A5 op_critter_add_trait
0x458C2 op_critter_rm_trait
0x458D3 op_proto_data
0x458E1 op_message_str
0x458F0 op_critter_inven_obj
0x45908 op_obj_set_light_level
0x45917 op_inven_cmds
0x45917 op_world_map
0x45928 op_float_msg
0x4594A op_metarule
0x4598B op_anim
0x459B5 op_obj_carrying_pid_obj
0x459C2 op_reg_anim_func
0x459CD op_reg_anim_animate
0x459DC op_reg_anim_animate_reverse
0x459E7 op_reg_anim_obj_move_to_obj
0x459F2 op_reg_anim_obj_run_to_obj
0x459FD op_reg_anim_obj_move_to_tile
0x45A09 op_reg_anim_obj_run_to_tile
0x45A14 op_play_gmovie
0x45A20 op_add_mult_objs_to_inven
0x45A2D op_rm_mult_objs_from_inven
0x45A40 op_get_month
0x45A43 op_get_day
0x45A46 op_explosion
0x45A52 op_days_since_visited
0x45A56 op_gsay_start
0x45A5B op_gsay_end
0x45A5D op_gsay_reply
0x45A6C op_gsay_option
0x45A8A op_gsay_message
0x45A9B op_giq_option
0x45AB9 op_poison
0x45AC4 op_get_poison
0x45ACF op_party_add
0x45AD6 op_party_remove
0x45ADD op_reg_anim_animate_forever
0x45AE8 op_critter_injure
0x45AF7 op_combat_is_initialized
0x45AFA op_gdialog_barter
0x45B01 op_difficulty_level
0x45B05 op_running_burning_guy
0x45B0A op_inven_unwield
0x45B0D op_obj_is_locked
0x45B16 op_obj_lock
0x45B1E op_obj_unlock
0x45B25 op_obj_is_open
0x45B2E op_obj_open
0x45B35 op_obj_close
0x45B3D op_game_ui_disable
0x45B3D op_game_ui_enable
0x45B3E op_game_ui_is_disabled
0x45B40 op_gfade_out
0x45B47 op_gfade_in
0x45B4F op_item_caps_total
0x45B58 op_item_caps_adjust
0x45B64 op_anim_action_frame
0x45B74 op_reg_anim_play_sfx
0x45B84 op_critter_mod_skill
0x45B9C op_sfx_build_char_name
0x45BAA op_sfx_build_ambient_name
0x45BB5 op_sfx_build_interface_name
0x45BC0 op_sfx_build_item_name
0x45BCA op_sfx_build_weapon_name
0x45BD7 op_sfx_build_scenery_name
0x45BE5 op_sfx_build_open_name
0x45BF3 op_attack_setup
0x45C0E op_destroy_mult_objs
0x45C29 op_use_obj_on_obj
0x45C3B op_endgame_slideshow
0x45C3D op_move_obj_inven_to_obj
0x45C54 op_endgame_movie
0x45C56 op_obj_art_fid
0x45C5F op_art_anim
0x45C66 op_party_member_obj
0x45C6D op_rotation_to_tile
0x45C77 op_jam_lock
0x45C7D op_gdialog_set_barter_mod
0x45C83 op_combat_difficulty
0x45C87 op_obj_on_screen
0x45C93 op_critter_is_fleeing
0x45C9D op_critter_set_flee_state
0x45CA8 op_terminate_combat
0x45CAC op_debug_msg
0x45CB7 op_critter_stop_attacking
0x45CBF op_tile_contains_pid_obj
0x45CCC op_obj_name
0x45CD6 op_get_pc_stat
0x45CDD initIntExtra
0x45D88 intface_init
0x45E3D intface_reset
0x45E44 intface_exit
0x45E86 intface_load
0x45E98 intface_save
0x45E9E intface_hide
0x45EA1 intface_show
0x45EA5 DWORD intface_is_hidden()
0x45EA6 intface_enable
0x45EAF intface_disable
0x45EB9 void intface_redraw()
0x45EB9 intface_is_enabled
0x45EBD intface_update_hit_points
0x45EDA void intface_update_ac(DWORD animate)
0x45EE0 void intface_update_move_points(DWORD ap, DWORD freeAP)
0x45EF6 DWORD intface_get_attack(DWORD* hitMode, DWORD* isSecondary)
0x45EFE void intface_update_items(DWORD animate, DWORD modeLeft, DWORD modeRight)
0x45F40 intface_toggle_items
0x45F4B intface_get_item_states
0x45F4E void intface_toggle_item_state()
0x45F5E void intface_use_item()
0x45F7F DWORD intface_is_item_right_hand()
0x45F80 intface_get_current_item
0x45F83 intface_update_ammo_lights
0x45F96 intface_end_window_open
0x45FAC intface_end_window_close
0x45FC0 intface_end_buttons_enable
0x45FC9 intface_end_buttons_disable
0x45FD2 intface_init_items
0x45FD8 intface_redraw_items
0x46065 intface_redraw_items_callback
0x46066 intface_change_fid_animate
0x46066 intface_change_fid_callback
0x4607E intface_create_end_turn_button
0x4608C intface_destroy_end_turn_button
0x46094 intface_create_end_combat_button
0x460A2 intface_destroy_end_combat_button
0x460AA intface_draw_ammo_lights
0x460B2 intface_item_reload
0x460BA intface_rotate_numbers
0x46112 intface_fatal_error
0x46113 construct_box_bar_win
0x46145 deconstruct_box_bar_win
0x4614A reset_box_bar_win
0x4614C refresh_box_bar_win
0x46162 bbox_comp
0x46164 draw_bboxes
0x4616F add_bar_box
0x46174 enable_box_bar_win
0x46176 disable_box_bar_win
0x46178 op_fillwin3x3
0x46185 op_format
0x461A5 op_print
0x461B1 op_selectfilelist
0x461CA op_tokenize
0x461F1 op_printrect
0x46209 op_selectwin
0x46213 op_display
0x4621B op_displayraw
0x46222 interpretFadePaletteBK
0x46233 interpretFadePalette
0x46234 interpretFadeOut
0x46234 intlibGetFadeIn
0x46238 interpretFadeIn
0x4623A interpretFadeOutNoBK
0x4623D interpretFadeInNoBK
0x46240 op_fadein
0x4624B op_fadeout
0x46257 checkMovie
0x46258 op_movieflags
0x4625D op_playmovie
0x4626C op_playmovierect
0x46287 op_stopmovie
0x46289 op_deleteregion
0x46292 op_activateregion
0x4629A op_checkregion
0x462A1 op_addregion
0x462C1 op_addregionproc
0x462DD op_addregionrightproc
0x462F0 op_createwin
0x46308 op_resizewin
0x46320 op_scalewin
0x46337 op_deletewin
0x4633E op_saystart
0x46343 op_saystartpos
0x46349 op_sayreplytitle
0x46351 op_saygotoreply
0x46358 op_sayoption
0x4636A op_sayreply
0x46378 checkDialog
0x4637A op_sayend
0x4637E op_saygetlastpos
0x46381 op_sayquit
0x46382 getTimeOut
0x46383 op_saymessagetimeout
0x46383 setTimeOut
0x46389 op_saymessage
0x46398 op_gotoxy
0x463A3 op_addbuttonflag
0x463B1 op_addregionflag
0x463BE op_addbutton
0x463DF op_addbuttontext
0x463EE op_addbuttongfx
0x4640D op_addbuttonproc
0x4642A op_addbuttonrightproc
0x4643D op_showwin
0x4643E op_deletebutton
0x46449 op_fillwin
0x4645F op_fillrect
0x46489 op_hidemouse
0x4648A op_mouseshape
0x4648A op_showmouse
0x4649C op_setglobalmousefunc
0x4649D op_displaygfx
0x464AD op_loadpalettetable
0x464B5 op_addNamedEvent
0x464BE op_addNamedHandler
0x464C8 op_clearNamed
0x464CE op_signalNamed
0x464D4 op_addkey
0x464E2 op_deletekey
0x464EB op_refreshmouse
0x464F1 op_setfont
0x464F8 op_settextflags
0x464FF op_settextcolor
0x46514 op_sayoptioncolor
0x46529 op_sayreplycolor
0x4653E op_sethighlightcolor
0x46553 op_sayreplywindow
0x46568 op_sayreplyflags
0x4656F op_sayoptionflags
0x46576 op_sayoptionwindow
0x4658B op_sayborder
0x46597 op_sayscrollup
0x465CA op_sayscrolldown
0x465FE op_saysetspacing
0x46604 op_sayrestart
0x46606 soundCallbackInterpret
0x46607 soundDeleteInterpret
0x4660E soundCloseInterpret
0x46611 soundStartInterpret
0x46655 soundPauseInterpret
0x4665C soundRewindInterpret
0x46662 soundUnpauseInterpret
0x46669 op_soundplay
0x46676 op_soundpause
0x4667C op_soundresume
0x46681 op_soundstop
0x46687 op_soundrewind
0x4668C op_sounddelete
0x46692 op_setoneoptpause
0x46699 updateIntLib
0x4669A intlibClose
0x466A0 intLibDoInput
0x466A7 initIntlib
0x466F6 interpretRegisterProgramDeleteCallback
0x46700 interpretUnregisterProgramDeleteCallback
0x46704 removeProgramReferences_
0x4670A defaultTimerFunc
0x4670A interpretSetTimeFunc
0x4670B interpretMangleName
0x4670C checkWait
0x4670C outputStr
0x4670F interpretOutputFunc
0x46710 interpretOutput
0x46716 char* findCurrentProc(Program* program)
0x4671F interpretError
0x46729 fetchWord
0x4672A fetchLong
0x4672D storeWord
0x4672E storeLong
0x46732 pushShortStack
0x46736 pushLongStack
0x4673C popLongStack
0x4673F popShortStack
0x46742 interpretIncStringRef
0x46744 interpretDecStringRef
0x46748 interpretPushShort
0x4674D interpretPushLong
0x4674F DWORD interpretPopShort(Program* scriptPtr)
0x46750 DWORD interpretPopLong(Program* scriptPtr)
0x46751 rPushShort
0x46756 rPushLong
0x46757 rPopShort
0x4675B rPopLong
0x4675C detachProgram
0x4675F purgeProgram
0x46761 interpretFreeProgram
0x46773 Program* allocateProgram(char* filePath)
0x4678B getOp
0x4678E char* interpretGetString(Program* scriptPtr, DWORD dataType, DWORD strId)
0x46790 interpretGetName
0x46791 interpretInvalidateString
0x46793 checkProgramStrings
0x4679C checkAllProgramStrings
0x4679E checkStrings
0x467A8 interpretAddString
0x467C7 getData
0x467C9 op_const
0x467CD op_push_base
0x467D3 op_pop_base
0x467D9 op_pop_to_base
0x467DE op_dump
0x467DE op_set_global
0x467EA op_call_at
0x46803 op_call_condition
0x46817 op_wait
0x46821 op_cancel
0x46833 op_cancelall
0x46840 op_if
0x4684A op_while
0x46851 op_store
0x46867 op_fetch
0x46873 op_not_equal
0x468AA op_equal
0x468E1 op_less_equal
0x46918 op_greater_equal
0x4694E op_less
0x46985 op_greater
0x469BC op_add
0x46A1D op_sub
0x46A30 op_mul
0x46A42 op_div
0x46A5B op_mod
0x46A6B op_and
0x46A8D op_or
0x46AAC op_not
0x46AB2 op_negate
0x46AB8 op_bwnot
0x46ABD op_floor
0x46AC7 op_bwand
0x46ADA op_bwor
0x46AED op_bwxor
0x46AFF op_swapa
0x46B07 op_critical_done
0x46B07 op_critical_start
0x46B08 op_jmp
0x46B10 op_call
0x46B59 op_pop_flags
0x46B63 op_pop_return
0x46B65 op_pop_exit
0x46B67 op_pop_flags_return
0x46B69 op_pop_flags_exit
0x46B6B op_pop_flags_return_val_exit
0x46B73 op_pop_flags_return_val_exit_extern
0x46B80 op_pop_flags_return_extern
0x46B86 op_pop_flags_exit_extern
0x46B8D op_pop_flags_return_val_extern
0x46BA1 op_pop_address
0x46BA2 op_a_to_d
0x46BA6 op_d_to_a
0x46BAC op_exit_prog
0x46BAC op_stop_prog
0x46BAD op_fetch_global
0x46BB5 op_store_global
0x46BCA op_swap
0x46BD6 op_fetch_proc_address
0x46BE1 op_pop
0x46BE4 op_dup
0x46BEC op_store_external
0x46BF9 op_fetch_external
0x46C04 op_export_proc
0x46C12 op_export_var
0x46C1A op_exit
0x46C1E op_detach
0x46C21 op_callstart
0x46C34 op_spawn
0x46C49 op_fork
0x46C57 op_exec
0x46C5D op_check_arg_count
0x46C6B op_lookup_string_proc
0x46C7D initInterpreter
0x46CC6 interpretClose
0x46CC7 interpretEnableInterpreter
0x46CCA DWORD interpret(Program* program, DWORD arg2)
0x46CED setupCallWithReturnVal
0x46CF7 setupCall
0x46CF9 setupExternalCallWithReturnVal
0x46D0B setupExternalCall
0x46D0D BugFixLoop
0x46D16 executeProcedureReturnValue
0x46D50 executeProcWithArgs
0x46D80 executeProcedureWithArgs
0x46DB5 executeProc
0x46DCD DWORD interpretFindProcedure(Program* scriptPtr, char* procName)
0x46DD2 void executeProcedure(Program* sptr, DWORD procNum)
0x46DEE doEvents
0x46E10 removeProgList
0x46E15 DWORD* runProgram(Program* progPtr)
0x46E19 runScript
0x46E1D interpretSetCPUBurstSize
0x46E1E updatePrograms
0x46E23 clearPrograms
0x46E25 clearTopProgram
0x46E26 getProgramList
0x46E31 freeProgramList
0x46E36 interpretAddFunc
0x46E39 interpretSetFilenameFunc
0x46E3A interpretSuspendEvents
0x46E3C interpretResumeEvents
0x46E4A interpretSaveProgramState
0x46E4B interpretDumpStack
0x46E5E interpretDumpStringHeap
0x46E71 inven_set_dude
0x46E72 inven_reset_dude
0x46E73 inventry_msg_load
0x46E7A inventry_msg_unload
0x46E7B handle_inventory
0x46EC9 setup_inventory
0x46FBD exit_inventory
0x46FDF void display_inventory(DWORD inventoryOffset, DWORD visibleOffset, DWORD mode)
0x47036 void display_target_inventory(DWORD inventoryOffset, DWORD visibleOffset, DWORD* targetInventory, DWORD mode)
0x4705A display_inventory_info
0x47065 display_body
0x470A2 inven_init
0x470B8 inven_exit
0x470BC inven_set_mouse
0x470C2 inven_hover_on
0x470D1 inven_hover_off
0x470D5 inven_update_lighting
0x470DB inven_pickup
0x4714E switch_hand
0x4715F adjust_ac
0x4716E adjust_fid
0x4717E use_inventory_on
0x471B7 GameObject* inven_right_hand(GameObject* critter)
0x471BB GameObject* inven_left_hand(GameObject* critter)
0x471C0 GameObject* inven_worn(GameObject* critter)
0x471C5 inven_pid_is_carried
0x471CA GameObject* inven_pid_is_carried_ptr(GameObject* invenObj, DWORD pid)
0x471CD inven_pid_quantity_carried
0x471D3 inven_clear
0x471D5 void display_stats()
0x47269 GameObject* inven_find_type(GameObject* critter, DWORD itemType, DWORD* slot)
0x4726E inven_find_id
0x47274 inven_index_ptr
0x47275 DWORD inven_wield(GameObject* critter, GameObject* item, DWORD slot)
0x47276 invenWieldFunc
0x472A5 DWORD inven_unwield(GameObject* critter, DWORD slot)
0x472A6 invenUnwieldFunc
0x472B5 inven_from_button
0x472D2 inven_display_msg
0x472EB inven_obj_examine_func
0x47304 inven_action_cursor
0x47390 loot_container
0x4746A inven_steal_container
0x47470 move_inventory
0x474B2 DWORD barter_compute_value(GameObject* source, GameObject* target)
0x474C5 barter_attempt_transaction
0x474DA barter_move_inventory
0x47507 barter_move_from_table_inventory
0x47533 display_table_inventories
0x4757F barter_inventory
0x47620 container_enter
0x47639 container_exit
0x47646 drop_into_container
0x47650 drop_ammo_into_weapon
0x47664 draw_amount
0x47688 do_move_timer
0x476AB setup_move_timer_win
0x47703 exit_move_timer_win
0x47707 inven_set_timer
0x4770E item_init
0x47714 item_exit
0x47714 item_reset
0x47715 item_add_mult
0x4772B DWORD item_add_force(GameObject* critter, GameObject* item, DWORD count)
0x47749 DWORD item_remove_mult(GameObject* critter, GameObject* item, DWORD count)
0x4775D item_compact
0x47760 item_move_func
0x47769 item_move
0x4776A item_move_all
0x4776A item_move_force
0x4776E item_move_all_hidden
0x47777 item_destroy_all_hidden
0x47780 item_drop_all
0x4779F item_identical
0x477AE item_name
0x477AF DWORD item_get_type(GameObject* item)
0x477AF item_description
0x477B4 item_material
0x477B6 DWORD item_size(GameObject* item)
0x477B8 DWORD item_weight(GameObject* item)
0x477CA item_cost
0x477DA DWORD item_total_cost(GameObject* object)
0x477E9 DWORD item_total_weight(GameObject* object)
0x477F3 can_use_weapon
0x477FB item_inv_fid
0x477FF GameObject* item_hit_with(GameObject* critter, DWORD hitMode)
0x47804 item_mp_cost
0x47808 item_count
0x4780E item_queued
0x47815 item_replace
0x47824 item_is_hidden
0x47828 DWORD item_w_subtype(GameObject* item, DWORD hitMode)
0x4782C item_w_skill
0x47837 item_w_skill_level
0x4783B item_w_damage_min_max
0x47844 DWORD item_w_damage(GameObject* critter, DWORD hitMode)
0x47857 item_w_damage_type
0x47859 item_w_is_2handed
0x4785D item_w_anim
0x47860 DWORD item_w_anim_weap(GameObject* item, DWORD hitMode)
0x47867 DWORD item_w_max_ammo(GameObject* item)
0x4786A DWORD item_w_curr_ammo(GameObject* item)
0x4786C item_w_caliber
0x47871 item_w_set_curr_ammo
0x47876 item_w_try_reload
0x47887 item_w_can_reload
0x47891 DWORD item_w_reload(GameObject* weapon, GameObject* ammo)
0x478A1 DWORD item_w_range(GameObject* critter, DWORD hitMode)
0x478B2 DWORD item_w_mp_cost(GameObject* source, DWORD hitMode, DWORD isCalled)
0x478D0 item_w_min_st
0x478D3 item_w_crit_fail
0x478D5 item_w_perk
0x478D8 DWORD item_w_rounds(GameObject* item)
0x478DA DWORD item_w_anim_code(GameObject* item)
0x478DD item_w_proj_pid
0x478DF item_w_ammo_pid
0x478E1 item_w_sound_id
0x478E5 item_w_called_shot
0x478EF item_w_can_unload
0x478F8 item_w_unload
0x47905 DWORD item_w_primary_mp_cost(GameObject* item)
0x47908 DWORD item_w_secondary_mp_cost(GameObject* item)
0x4790A DWORD item_w_compute_ammo_cost(GameObject* item, DWORD* rounds)
0x4790E item_w_is_grenade
0x47910 item_w_area_damage_radius
0x47918 item_w_grenade_dmg_radius
0x47918 item_w_rocket_dmg_radius
0x47919 item_w_ac_adjust
0x4791E DWORD item_w_dr_adjust(GameObject* item)
0x47923 DWORD item_w_dam_mult(GameObject* item)
0x47929 DWORD item_w_dam_div(GameObject* item)
0x4792F item_ar_ac
0x47931 item_ar_dr
0x47933 item_ar_dt
0x47935 item_ar_perk
0x47938 item_ar_male_fid
0x4793A item_ar_female_fid
0x4793D item_m_max_charges
0x4793F item_m_curr_charges
0x4793F item_m_set_charges
0x47943 item_m_cell
0x47945 item_m_cell_pid
0x47947 item_m_uses_charges
0x4794A item_m_use_charged_item
0x4795A DWORD item_m_dec_charges(GameObject* item)
0x4795F item_m_trickle
0x4796A item_m_on
0x4796D item_m_turn_on
0x47989 item_m_turn_off
0x47995 item_m_turn_off_from_queue
0x47996 item_m_stealth_effect_on
0x47999 item_m_stealth_effect_off
0x479A0 item_c_max_size
0x479A2 DWORD item_c_curr_size(GameObject* critter)
0x479A7 item_a_ac_adjust
0x479AA item_a_dr_adjust
0x479AD item_a_dam_mult
0x479B0 item_a_dam_div
0x479B3 item_k_curr_code
0x479B4 insert_drug_effect
0x479C2 perform_drug_effect
0x479EE drug_effect_allowed
0x479F6 DWORD item_d_take_drug(GameObject* source, GameObject* item)
0x47A17 item_d_clear
0x47A19 item_d_process
0x47A1D item_d_load
0x47A25 item_d_save
0x47A29 insert_withdrawal
0x47A2F item_wd_clear
0x47A32 item_wd_clear_all
0x47A38 item_wd_process
0x47A40 item_wd_load
0x47A48 item_wd_save
0x47A4C perform_withdrawal_start
0x47A55 perform_withdrawal_end
0x47A5B pid_to_gvar
0x47A5E item_d_set_addict
0x47A60 item_d_unset_addict
0x47A64 item_d_check_addict
0x47A6A DWORD item_caps_total(GameObject* object)
0x47A6F item_caps_adjust
0x47A8C item_caps_get_amount
0x47A8D item_caps_set_amount
0x47A8F light_get_ambient
0x47A8F light_init
0x47A90 light_increase_ambient
0x47A96 light_decrease_ambient
0x47A98 DWORD light_get_tile(DWORD elevation, DWORD tileNum)
0x47A9C light_get_tile_true
0x47A9E light_set_tile
0x47AA1 light_add_to_tile
0x47AA4 light_subtract_from_tile
0x47AA8 light_reset_tiles
0x47AAC lips_fix_string
0x47AAD lips_bkg_proc
0x47AC2 lips_play_speech
0x47AD2 lips_stop_speech
0x47AD4 lips_read_phoneme_type
0x47AD5 lips_read_marker_type
0x47AD9 lips_read_lipsynch_info
0x47AFA lips_load_file
0x47B5D lips_make_speech
0x47B73 lips_free_speech
0x47B7E InitLoadSave
0x47B85 ResetLoadSave
0x47B88 SaveGame
0x47C5B QuickSnapShot
0x47C64 LoadGame
0x47D2E LSGameStart
0x47D82 LSGameEnd
0x47D88 SaveSlot
0x47DC6 LoadSlot
0x47DC6 isLoadingGame
0x47DF1 SaveHeader
0x47E2E LoadHeader
0x47E5D GetSlotList
0x47E6D ShowSlotList
0x47E8E DrawInfoBox
0x47EC4 LoadTumbSlot
0x47ED5 GetComment
0x47F08 get_input_str2
0x47F48 DummyFunc
0x47F49 PrepLoad
0x47F4C void EndLoad(DbFile* file)
0x47F51 GameMap2Slot
0x47F99 SlotMap2Game
0x47FE1 mygets
0x47FE5 copy_file
0x48000 KillOldMaps
0x48004 void MapDirErase(char* folder, char* ext)
0x48010 SaveBackup
0x4803D RestoreSave
0x48070 RestoreLoad
0x48071 LoadObjDudeCid
0x48073 SaveObjDudeCid
0x48075 EraseSave
0x48099 gnw_main
0x480CC main_init_system
0x480D0 main_reset_system
0x480D1 main_exit_system
0x480D4 main_load_new
0x480DF main_loadgame_new
0x480E3 main_unload_new
0x480E4 main_game_loop
0x480EE main_selfrun_init
0x480F3 main_selfrun_exit
0x480F6 main_selfrun_record
0x48109 main_selfrun_play
0x48118 main_death_scene
0x4814A main_death_voiceover_callback
0x4814B mainDeathGrabTextFile
0x48159 mainDeathWordWrap
0x48165 main_menu_create
0x48196 main_menu_destroy
0x481A0 main_menu_hide
0x481A4 main_menu_show
0x481A8 main_menu_is_shown
0x481AA main_menu_is_enabled
0x481AB main_menu_set_timeout
0x481AD main_menu_get_timeout
0x481AE main_menu_loop
0x481C8 main_menu_fatal_error
0x481C9 main_menu_play_sound
0x481CA iso_init
0x481ED iso_reset
0x481F4 iso_exit
0x481FB map_init
0x48206 map_reset
0x48208 map_exit
0x4820C map_enable_bk_processes
0x48210 map_disable_bk_processes
0x48214 map_bk_processes_are_disabled
0x48215 map_set_elevation
0x4821F map_is_elevation_empty
0x48222 map_set_global_var
0x48225 map_get_global_var
0x48228 map_set_local_var
0x4822B map_get_local_var
0x4822E map_malloc_local_var
0x48234 map_set_entrance_hex
0x48236 map_set_script
0x48247 map_set_name
0x4824A map_get_name
0x4824C map_get_elev_idx
0x48252 is_map_idx_same
0x4825C get_map_idx_same
0x48261 char* map_get_short_name(DWORD mapID)
0x48268 map_get_description
0x4826B map_get_index_number
0x4826C map_scroll
0x48290 map_file_path
0x48292 mapSetEntranceInfo
0x48293 map_new_map
0x4829F map_load_dialog
0x482A6 map_load
0x482B3 map_load_idx
0x482B7 map_load_file
0x48318 map_load_in_game
0x48328 map_age_dead_critters
0x48358 map_target_load_area
0x4835B map_leave_map
0x4835F map_check_state
0x48378 map_fix_critter_combat_data
0x4837C map_save_dialog
0x48385 map_save
0x48398 map_save_file
0x483C6 map_save_as
0x483C9 map_save_in_game
0x483E2 map_setup_paths
0x483ED map_display_draw
0x483EE map_scroll_refresh_game
0x483F4 map_scroll_refresh_mapper
0x483FE map_allocate_global_vars
0x48403 map_free_global_vars
0x48405 map_load_global_vars
0x48408 map_allocate_local_vars
0x4840D map_free_local_vars
0x4840F map_load_local_vars
0x48411 map_place_dude_and_mouse
0x4841F square_init
0x48421 square_reset
0x48431 square_load
0x4843B map_write_MapData
0x4844B map_read_MapData
0x4845B defaultOutput
0x4845C debug_printf_
0x4845C memoryRegisterDebug
0x48461 error
0x48462 defaultMalloc
0x48463 defaultFree
0x48463 defaultRealloc
0x48464 memoryRegisterAlloc
0x48465 get_current_memory
0x48466 mymalloc
0x48468 myfree
0x4846B myrealloc
0x4846D mycalloc
0x48471 mystrdup
0x48477 init_message
0x4848F exit_message
0x48494 message_init
0x48496 DWORD message_exit(MessageList* msgList)
0x4849D message_save
0x484AA DWORD message_load(MessageList* msgList, char* msgFilePath)
0x484C3 DWORD message_search(MessageList* file, MessageNode* msg)
0x484C9 message_insert
0x484CA message_delete
0x484CB DWORD message_make_path(char* outpath, char* path)
0x484D1 DWORD message_find(DWORD* msgFile, DWORD msgNumber, DWORD* outBuf)
0x484D6 DWORD message_add(MessageList* file, MessageNode* msg)
0x484EB message_remove
0x484F6 message_parse_number
0x484FB message_load_field
0x48504 char* getmsg(MessageList* fileAddr, MessageNode* result, DWORD messageId)
0x48507 DWORD message_filter(MessageList* file)
0x48525 defaultNameMangler
0x48525 defaultRateCallback
0x48525 defaultTimeCallback
0x48526 setShape
0x48528 mousemgrSetNameMangler
0x48529 mousemgrSetTimeCallback
0x4852B freeCacheEntry
0x4853D cacheFlush
0x4853F cacheInsert
0x48554 cacheFind
0x48568 initMousemgr
0x48569 mousemgrClose
0x48570 mousemgrUpdate
0x48586 mouseSetFrame
0x485E5 mouseSetMouseShape
0x48601 mouseSetMousePointer
0x4862A mousemgrResetMouse
0x4864B mousemgrResetAll
0x4865C mouseHide
0x4865C mouseShow
0x4865E movieSetFailedOpenFunc
0x4865E movieSetPreDrawFunc
0x4865F movieMalloc
0x4865F movieSetFunc
0x48661 movieFree
0x48662 movieRead
0x48665 movie_MVE_ShowFrame
0x48690 movieShowFrame
0x486A9 movieSetFrameGrabFunc
0x486AA movieCopyLastFrame
0x486AA movieSetCaptureFrameFunc
0x486B0 movieShowFrameWin
0x486B6 movieScaleSubRect
0x486C7 movieScaleSubRectAlpha
0x486C8 blitAlpha
0x486CD movieScaleWindow
0x486D8 blitNormal
0x486DD movieSetPalette
0x486E0 initMovie
0x486E0 noop
0x486E9 cleanupMovie
0x48711 movieClose
0x48715 movieStop
0x48716 movieSetFlags
0x48720 movieSetSubtitleFont
0x48721 movieSetSubtitleColor
0x48725 movieSetPaletteFunc
0x48727 movieSetAlphaChannel
0x48727 movieSetCallback
0x4872E cleanupLast
0x48731 openFile
0x48738 openSubtitle
0x48755 doSubtitle
0x48771 movieStart
0x48796 localMovieCallback
0x48798 movieRunToEnd
0x487AC movieRun
0x487B1 movieRunRect
0x487B7 stepMovie
0x487BC movieSetSubtitleFunc
0x487BD movieSetVolume
0x487BE movieUpdate
0x487C8 moviePlaying
0x487C9 movieEnableSound
0x487CC moviefx_init
0x487CF moviefx_reset
0x487D3 moviefx_exit
0x487D7 moviefx_start
0x4880F moviefx_stop
0x48814 moviefx_callback_func
0x4882A moviefx_palette_func
0x4882F moviefx_add
0x48831 moviefx_remove_all
0x48834 nevs_alloc
0x48839 nevs_free
0x4883A nevs_close
0x4883D nevs_removeprogramreferences
0x48841 nevs_initonce
0x48846 nevs_find
0x4884C nevs_addevent
0x48852 nevs_addCevent
0x48859 nevs_clearevent
0x4885D nevs_signal_with_args
0x48862 nevs_signal
0x4886A nevs_update
0x48878 obj_init
0x488A0 obj_reset
0x488A3 obj_exit
0x488AF obj_read_obj
0x488CE obj_load
0x488CF obj_load_func
0x48909 obj_fix_combat_cid_for_dude
0x48911 object_fix_weapon_ammo
0x48920 obj_write_obj
0x48935 obj_save
0x48955 obj_render_pre_roof
0x4897E obj_render_post_roof
0x48986 obj_draw
0x489A8 obj_new
0x489C9 DWORD obj_pid_new(GameObject* object, DWORD pid)
0x489CC obj_copy
0x489EC DWORD obj_connect(GameObject* object, DWORD tile, DWORD elevation, RECT* rect)
0x489F3 obj_disconnect
0x489FF obj_offset
0x48A32 obj_move
0x48A56 DWORD obj_move_to_tile(GameObject* object, DWORD tile, DWORD elevation, RECT* rect)
0x48A9A obj_reset_roof
0x48AA3 obj_change_fid
0x48AA8 obj_set_frame
0x48AAF obj_inc_frame
0x48AB6 obj_dec_frame
0x48ABD obj_set_rotation
0x48AC2 obj_inc_rotation
0x48AC3 obj_dec_rotation
0x48AC5 obj_rebuild_all_light
0x48AC9 obj_set_light
0x48AD0 obj_get_visible_light
0x48AD4 obj_turn_on_light
0x48AD9 obj_turn_off_light
0x48ADF obj_turn_on
0x48AE6 obj_turn_off
0x48AEE obj_turn_on_outline
0x48AF0 obj_turn_off_outline
0x48AF2 obj_set_highlight
0x48AF2 obj_toggle_flat
0x48B04 obj_toggle_translucence
0x48B0F DWORD obj_erase_object(GameObject* object, RECT* boundRect)
0x48B1B obj_inven_free
0x48B24 obj_action_can_use
0x48B27 obj_action_can_talk_to
0x48B2A obj_portal_is_walk_thru
0x48B2E objFindObjPtrFromID
0x48B30 obj_top_environment
0x48B31 obj_remove_all
0x48B3A GameObject* obj_find_first()
0x48B41 GameObject* obj_find_next()
0x48B48 obj_find_first_at
0x48B51 obj_find_next_at
0x48B5A GameObject* obj_find_first_at_tile(DWORD elevation, DWORD tileNum)
0x48B60 GameObject* obj_find_next_at_tile()
0x48B66 void obj_bound(GameObject* object, RECT* boundRect)
0x48B7F obj_occupied
0x48B84 GameObject* obj_blocking_at(GameObject* object, DWORD tile, DWORD elevation)
0x48B93 obj_shoot_blocking_at
0x48BA2 obj_ai_blocking_at
0x48BB4 obj_scroll_blocking_at
0x48BB8 obj_sight_blocking_at
0x48BBD DWORD obj_dist(GameObject* obj_src, GameObject* obj_trg)
0x48BC0 DWORD obj_dist_with_tile(GameObject* source, DWORD sourceTile, GameObject* target, DWORD targetTile)
0x48BC3 obj_create_list
0x48BDC obj_delete_list
0x48BDD translucent_trans_buf_to_buf
0x48BE6 checker_trans_buf_to_buf
0x48BEF dark_trans_buf_to_buf
0x48BF8 dark_translucent_trans_buf_to_buf
0x48C03 intensity_mask_buf_to_buf
0x48C14 obj_outline_all_items_on
0x48C1E obj_outline_all_items_off
0x48C29 obj_outline_all_items_toggle
0x48C2B obj_outline_object
0x48C2F obj_remove_outline
0x48C31 obj_remove_all_outlines
0x48C34 obj_intersects_with
0x48C5C obj_create_intersect_list
0x48C74 obj_delete_intersect_list
0x48C76 obj_set_seen
0x48C78 obj_clear_seen
0x48C7A obj_process_seen
0x48C8E object_name
0x48C91 object_description
0x48C93 obj_preload_art_cache
0x48CB6 obj_object_table_init
0x48CB8 obj_offset_table_init
0x48CDA obj_offset_table_exit
0x48CE1 obj_order_table_init
0x48CF2 obj_order_comp_func_even
0x48CF3 obj_order_comp_func_odd
0x48CF5 obj_order_table_exit
0x48CF8 obj_render_table_init
0x48D00 obj_render_table_exit
0x48D02 obj_light_table_init
0x48D1E obj_blend_table_init
0x48D2E obj_blend_table_exit
0x48D32 obj_misc_table_init
0x48D34 obj_save_obj
0x48D41 obj_load_obj
0x48D59 obj_save_dude
0x48D60 obj_load_dude
0x48D77 obj_create_object
0x48D7F obj_destroy_object
0x48D81 obj_create_object_node
0x48D84 obj_destroy_object_node
0x48D86 obj_node_ptr
0x48D8E obj_insert
0x48DA5 obj_remove
0x48DB2 obj_connect_to_tile
0x48DC2 obj_adjust_light
0x48EAB obj_render_outline
0x48F1B obj_render_object
0x48FA1 obj_fix_violence_settings
0x48FB0 obj_preload_sort
0x48FC4 do_options
0x48FC5 do_optionsFunc
0x48FE1 OptnStart
0x49024 OptnEnd
0x4902B PauseWindow
0x49074 ShadeScreen
0x49079 do_prefscreen
0x4908A PrefStart
0x490E8 DoThing
0x491A6 UpdateThing
0x49287 PrefEnd
0x4928B init_options_menu
0x4928E IncGamma
0x4929C DecGamma
0x492AA SetSystemPrefs
0x492CB SavePrefs
0x492F6 SetDefaults
0x49305 SaveSettings
0x49312 RestoreSettings
0x493A0 palette_init
0x493AD palette_fade_to
0x493B4 palette_set_to
0x493B7 palette_set_entries
0x493BC partyMember_init
0x4940E partyMember_reset
0x49413 partyMember_exit
0x4941F partyMemberGetAIOptions
0x49425 partyMemberAISlotInit
0x49434 partyMemberSlotInit
0x49437 partyMemberAdd
0x4944D partyMemberRemove
0x49460 partyMemberPrepSave
0x49466 partyMemberUnPrepSave
0x4946C partyMemberSave
0x49479 partyMemberFindID
0x4947A partyMemberPrepLoad
0x49480 partyMemberPrepLoadInstance
0x4949C partyMemberRecoverLoad
0x494A8 partyMemberRecoverLoadInstance
0x494BB partyMemberLoad
0x494D7 partyMemberClear
0x494DD partyMemberSyncPosition
0x494EB partyMemberRestingHeal
0x494F2 partyMemberFindObjFromPid
0x494F6 isPotentialPartyMember
0x494FC DWORD isPartyMember(GameObject* obj)
0x49501 getPartyMemberCount
0x49507 partyMemberNewObjID
0x4950F partyMemberNewObjIDRecurseFind
0x49514 partyMemberPrepItemSaveAll
0x49519 partyMemberPrepItemSave
0x49520 partyMemberItemSaveAll
0x49523 partyMemberItemSave
0x49538 partyMemberItemRecover
0x49549 partyMemberItemRecoverAll
0x4954C partyMemberClearItemList
0x49552 partyMemberSkill
0x49556 partyMemberWithHighestSkill
0x4955C partyMemberHighestSkillLevel
0x49562 partyFixMultipleMembers
0x49587 partyMemberSaveProtos
0x4958B partyMemberHasAIDisposition
0x49592 partyMemberHasAIBurstValue
0x49598 partyMemberHasAIRunAwayValue
0x4959E partyMemberHasAIWeaponPrefValue
0x495A4 partyMemberHasAIDistancePrefValue
0x495AA partyMemberHasAIAttackWhoValue
0x495B0 partyMemberHasAIChemUseValue
0x495B6 partyMemberIncLevels
0x495EA partyMemberCopyLevelInfo
0x495FF DWORD partyMemberGetCurLevel(GameObject* obj)
0x49605 partyMemberNeedsHealing
0x4960D partyMemberMaxHealingNeeded
0x49616 partyClearDrugEffects
0x49618 partyClearDrugsOnMember
0x4961B getWord
0x4961D readPcxHeader
0x49636 pcxDecodeScanline
0x49641 readPcxVgaPalette
0x49649 loadPCX
0x4965A perk_init
0x4966B perk_exit
0x4966B perk_reset
0x4966E perk_load
0x49673 perk_save
0x49678 perkGetLevelData
0x49680 DWORD perk_can_add(GameObject* critter, DWORD perkId)
0x496A0 perk_defaults
0x496A5 perk_add
0x496A9 perk_add_force
0x496AF perk_sub
0x496B4 perk_make_list
0x496B7 DWORD perk_level(GameObject* critter, DWORD perkId)
0x496B9 perk_name
0x496BB perk_description
0x496BD perk_skilldex_fid
0x496BF void perk_add_effect(GameObject* critter, DWORD perkId)
0x496CE perk_remove_effect
0x496DD perk_adjust_skill
0x49700 pipboy
0x49722 StartPipboy
0x49782 EndPipboy
0x49791 pip_num
0x4979B pip_date
0x497A4 pip_print
0x497B6 pip_back
0x497BD PipStatus
0x497BD save_pipboy
0x49873 ListStatLines
0x4988A ShowHoloDisk
0x498C4 ListHoloDiskTitles
0x498D3 qscmp
0x498D4 PipAutomaps
0x498F3 PrintAMelevList
0x49915 PrintAMList
0x49932 PipArchives
0x4993D ListArchive
0x49951 PipAlarm
0x4996B DrawAlarmText
0x4997B DrawAlrmHitPnts
0x49987 NewFuncDsply
0x4998C AddHotLines
0x4999C NixHotLines
0x499A2 TimedRest
0x499FC Check4Health
0x49A00 AddHealth
0x49A03 ClacTime
0x49A0C ScreenSaver
0x49A5D quest_init
0x49A7E quest_exit
0x49A81 quest_qsort_compare
0x49A82 holodisks_init
0x49A96 holodisks_exit
0x49A9A obj_sid
0x49A9B obj_new_sid
0x49AAC DWORD obj_new_sid_inst(GameObject* object, DWORD sType, DWORD scriptIndex)
0x49AB7 obj_powered_item_charges
0x49ABC obj_use_powered_item_charges
0x49AC3 obj_look_at
0x49AC4 obj_look_at_func
0x49AD7 obj_examine
0x49AD8 obj_examine_func
0x49B65 obj_pickup
0x49B73 obj_remove_from_inven
0x49B8B void obj_drop(GameObject* source, GameObject* objectToDrop)
0x49B9A DWORD obj_destroy(GameObject* object)
0x49B9F obj_use_book
0x49BBA obj_use_flare
0x49BC6 obj_use_radio
0x49BCB obj_use_explosive
0x49BDE obj_use_power_on_car
0x49BE8 obj_use_misc_item
0x49BF3 protinst_use_item
0x49BFE protinstTestDroppedExplosive
0x49C12 obj_use_item
0x49C24 protinst_default_use_item
0x49C3C protinst_use_item_on
0x49C5F obj_use_item_on
0x49C6A rebuild_all_light
0x49C6B check_scenery_ap_cost
0x49C74 obj_use
0x49C90 obj_use_ladder_top
0x49C9A obj_use_ladder_bottom
0x49CA4 obj_use_stairs
0x49CAE obj_use_elevator
0x49CAF set_door_state_open
0x49CB0 set_door_state_closed
0x49CB1 check_door_state
0x49CCB obj_use_door
0x49CE7 obj_use_container
0x49D07 obj_use_skill_on
0x49D14 obj_is_a_portal
0x49D17 obj_is_lockable
0x49D1C obj_is_locked
0x49D20 obj_lock
0x49D25 obj_unlock
0x49D29 bool obj_is_openable(GameObject* object)
0x49D2E obj_is_open
0x49D2F obj_toggle_open
0x49D3D obj_open
0x49D3F obj_close
0x49D41 DWORD obj_lock_is_jammed(GameObject* object)
0x49D44 obj_jam_lock
0x49D48 void obj_unjam_lock(GameObject* object)
0x49D4B obj_unjam_all_locks
0x49D4D obj_attempt_placement
0x49D62 objPMAttemptPlacement
0x49D6D proto_inst_add_to_inven
0x49D75 proto_choose_pid_inven_fid
0x49D77 proto_choose_multi_pids_update
0x49D9B proto_choose_multi_pids_func
0x49DD5 proto_choose_multi_pids
0x49DD6 proto_choose_pid
0x49E07 proto_edit_mod_pid
0x49E27 void proto_make_path(char* buffer, DWORD pid)
0x49E2F proto_list_new
0x49E4D proto_find_str
0x49E75 proto_list_str
0x49E98 proto_size
0x49E99 proto_action_can_use
0x49E9D proto_action_can_use_on
0x49EA1 proto_action_can_look_at
0x49EA2 proto_action_can_talk_to
0x49EA5 proto_action_can_pickup
0x49EAA char* proto_get_msg_info(DWORD pid, DWORD msgType)
0x49EAF proto_name
0x49EB1 proto_description
0x49EB2 proto_item_init
0x49EBF proto_item_subdata_init
0x49EDB proto_critter_init
0x49EEA clear_pupdate_data
0x49EEB proto_read_CombatData
0x49EF4 proto_write_CombatData
0x49F00 proto_read_protoUpdateData
0x49F35 proto_read_bonusDB
0x49F39 proto_write_bonusDB
0x49F42 proto_write_protoUpdateData
0x49F73 proto_update_gen
0x49F8A proto_update_init
0x49F98 void proto_dude_update_gender()
0x49FA6 proto_dude_init
0x49FBB proto_scenery_init
0x49FC7 proto_scenery_subdata_init
0x49FCF proto_wall_init
0x49FD8 proto_tile_init
0x49FDF proto_misc_init
0x49FE7 proto_copy_proto
0x49FED proto_is_subtype
0x49FFD proto_data_member
0x4A039 proto_init
0x4A081 proto_reset
0x4A089 proto_exit
0x4A08E proto_header_load
0x4A0AE proto_read_item_data
0x4A0ED proto_read_scenery_data
0x4A0FA proto_read_protoSubNode
0x4A139 proto_write_item_data
0x4A16E proto_write_scenery_data
0x4A17B proto_write_protoSubNode
0x4A1B3 proto_save_pid
0x4A1C3 proto_load_pid
0x4A1D9 proto_find_free_subnode
0x4A1E9 proto_new
0x4A1F1 proto_flush
0x4A204 proto_remove_some_list
0x4A209 proto_remove_list
0x4A20F proto_remove_all
0x4A210 DWORD proto_ptr(DWORD pid, Proto** ptrPtr)
0x4A21D proto_new_id
0x4A21F proto_undo_new_id
0x4A221 proto_max_id
0x4A222 proto_find_art_match
0x4A22C ResetPlayer
0x4A232 queue_init
0x4A233 queue_load
0x4A233 queue_reset
0x4A24E queue_save
0x4A258 DWORD queue_add(DWORD time, GameObject* object, void* data, DWORD qType)
0x4A25F queue_remove
0x4A264 void queue_remove_this(GameObject* object, DWORD qType)
0x4A26A queue_find
0x4A26D queue_process
0x4A274 queue_clear
0x4A279 void queue_clear_type(DWORD qType, void* func)
0x4A280 queue_next_time
0x4A281 queue_destroy
0x4A282 queue_explode
0x4A283 queue_explode_exit
0x4A28E queue_premature
0x4A292 queue_leaving_map
0x4A294 queue_is_empty
0x4A295 void* queue_find_first(GameObject* object, DWORD qType)
0x4A299 void* queue_find_next(GameObject* object, DWORD qType)
0x4A29D reaction_set
0x4A29E level_to_reaction
0x4A29E reaction_to_level
0x4A2A2 reaction_to_level_internal
0x4A2B2 reaction_get
0x4A2B5 regionSetBound
0x4A2C1 pointInRegion
0x4A2D7 allocateRegion
0x4A2E6 regionAddPoint
0x4A2F0 regionDelete
0x4A2F5 regionAddName
0x4A2F8 regionGetName
0x4A2F9 regionGetUserData
0x4A2FB regionSetUserData
0x4A2FD regionGetFlag
0x4A2FD regionSetFlag
0x4A2FE roll_init
0x4A300 roll_check
0x4A303 roll_check_critical
0x4A30C DWORD roll_random(DWORD minValue, DWORD maxValue)
0x4A30F ran1
0x4A317 init_random
0x4A31A roll_set_seed
0x4A31C random_seed
0x4A31E seed_generator
0x4A325 timer_read
0x4A326 check_chi_squared
0x4A333 game_time
0x4A333 game_time_date
0x4A33C game_time_hour
0x4A342 game_time_hour_str
0x4A347 set_game_time
0x4A349 set_game_time_in_seconds
0x4A34C inc_game_time
0x4A351 inc_game_time_in_seconds
0x4A357 gtime_q_add
0x4A362 gtime_q_process
0x4A369 scriptsCheckGameEvents
0x4A382 scr_map_q_process
0x4A386 DWORD new_obj_id()
0x4A38C scr_find_obj
0x4A390 DWORD scr_find_sid_from_program(Program* program)
0x4A39A GameObject* scr_find_obj_from_program(Program* program)
0x4A3AA script_name
0x4A3B0 scr_set_objs
0x4A3B3 scr_set_ext_param
0x4A3B5 scr_set_action_num
0x4A3B7 Program* loadProgram(char* fileName)
0x4A3C2 doBkProcesses
0x4A3CA script_chk_critters
0x4A3D8 script_chk_timed_events
0x4A3E3 scrQueueRemoveFixed
0x4A3E3 scrSetQueueTestVals
0x4A3E6 script_q_add
0x4A3ED script_q_save
0x4A3F0 script_q_load
0x4A3F4 script_q_process
0x4A3F8 scripts_clear_state
0x4A3F9 scripts_clear_combat_requests
0x4A3FB scripts_check_state
0x4A43A scripts_check_state_in_combat
0x4A457 scripts_request_combat
0x4A45D scripts_request_combat_locked
0x4A461 scripts_request_townmap
0x4A464 scripts_request_worldmap
0x4A466 scripts_request_elevator
0x4A473 scripts_request_explosion
0x4A475 scripts_request_dialog
0x4A477 scripts_request_endgame_slideshow
0x4A477 scripts_request_loot_container
0x4A479 scripts_request_steal_container
0x4A47B script_make_path
0x4A481 exec_script_proc
0x4A49D void scr_build_lookup_table(ScriptInstance* script)
0x4A4A0 scriptHasProc
0x4A4A3 scr_list_new
0x4A4B3 scr_find_str
0x4A4B4 scr_find_str_index
0x4A4D5 scrInitListInfo
0x4A4EF scrExitListInfo
0x4A4F2 scr_find_str_run_info
0x4A4F6 scr_index_to_name
0x4A4F9 scr_set_dude_script
0x4A504 scr_clear_dude_script
0x4A50A scr_init
0x4A512 scr_reset
0x4A513 scr_game_init
0x4A524 scr_game_reset
0x4A527 scr_exit
0x4A52F scr_message_free
0x4A535 scr_game_exit
0x4A53A scr_enable
0x4A53D scr_disable
0x4A53E scr_enable_critters
0x4A53F scr_disable_critters
0x4A540 scr_game_save
0x4A542 scr_game_load
0x4A544 scr_game_load2
0x4A549 scr_header_load
0x4A559 scr_write_ScriptSubNode
0x4A570 scr_write_ScriptNode
0x4A576 scr_save
0x4A5A1 scr_read_ScriptSubNode
0x4A5BE scr_read_ScriptNode
0x4A5C5 scr_load
0x4A5E3 DWORD scr_ptr(DWORD scriptId, ScriptInstance** scriptPtr)
0x4A5ED scr_new_id
0x4A5F1 scr_max_id
0x4A5F2 DWORD scr_new(DWORD* scriptID, DWORD sType)
0x4A608 scr_add_spatial
0x4A60D scr_remove_local_vars
0x4A61D DWORD scr_remove(DWORD scriptID)
0x4A63D scr_remove_spatial
0x4A63E scr_remove_all
0x4A64A scr_remove_all_force
0x4A652 ScriptInstance* scr_find_first_at(DWORD elevation)
0x4A656 ScriptInstance* scr_find_next_at()
0x4A65E scr_spatials_enabled
0x4A65F scr_spatials_enable
0x4A660 scr_spatials_disable
0x4A661 scr_chk_spatials_in
0x4A671 tile_in_tile_bound
0x4A672 scr_num_active_scripts
0x4A675 scr_num_nodes
0x4A677 scr_load_all_scripts
0x4A67D scr_exec_map_enter_scripts
0x4A67E scr_exec_map_update_scripts
0x4A69A scr_exec_map_exit_scripts
0x4A69A scr_print_script_usage
0x4A6B6 scr_get_dialog_msg_file
0x4A6C5 scr_get_msg_str
0x4A6C5 scr_get_msg_str_speech
0x4A6D6 DWORD scr_get_local_var(DWORD sid, DWORD varId, DWORD* value)
0x4A6E5 DWORD scr_set_local_var(DWORD sid, DWORD varId, DWORD value)
0x4A6EF scr_end_combat
0x4A6F7 scr_explode_scenery
0x4A71D select_character
0x4A746 select_init
0x4A7AD select_exit
0x4A7D5 select_update_display
0x4A7E0 select_display_portrait
0x4A7EA select_display_stats
0x4A8AE select_display_bio
0x4A8BD select_fatal_error
0x4A8BE selfrun_get_list
0x4A8C1 selfrun_free_list
0x4A8C2 selfrun_prep_playback
0x4A8C8 selfrun_playback_loop
0x4A8D2 selfrun_prep_recording
0x4A8DD selfrun_recording_loop
0x4A8E7 selfrun_playback_callback
0x4A8E8 selfrun_load_data
0x4A8EF selfrun_save_data
0x4A8FC sfxc_init
0x4A90F sfxc_exit
0x4A914 sfxc_flush
0x4A914 sfxc_is_initialized
0x4A915 sfxc_cached_open
0x4A922 sfxc_cached_close
0x4A927 sfxc_cached_read
0x4A935 sfxc_cached_seek
0x4A935 sfxc_cached_write
0x4A93F sfxc_cached_tell
0x4A941 sfxc_cached_file_size
0x4A943 sfxc_effect_size
0x4A945 sfxc_effect_load
0x4A94C sfxc_effect_free
0x4A94D sfxc_handle_list_create
0x4A951 sfxc_handle_list_destroy
0x4A955 sfxc_handle_create
0x4A960 sfxc_handle_destroy
0x4A961 sfxc_handle_is_legal
0x4A966 sfxc_mode_is_legal
0x4A967 sfxc_decode
0x4A977 sfxc_ad_reader
0x4A98E sfxl_tag_is_legal
0x4A98F sfxl_init
0x4A9C0 sfxl_exit
0x4A9C2 sfxl_name_to_tag
0x4A9CD sfxl_name
0x4A9D9 sfxl_size_full
0x4A9DB sfxl_size_cached
0x4A9DE sfxl_index
0x4A9E2 sfxl_index_to_tag
0x4A9E4 sfxl_destroy
0x4A9EA sfxl_get_names
0x4AA00 sfxl_copy_names
0x4AA05 sfxl_get_sizes
0x4AA20 sfxl_sort_by_name
0x4AA22 sfxl_compare_by_name
0x4AA23 sfxl_ad_reader
0x4AA25 compare
0x4AA25 getDirList
0x4AA29 freeDirList
0x4AA2A getFileList
0x4AA2D freeFileList
0x4AA31 skill_init
0x4AA44 skill_reset
0x4AA47 skill_exit
0x4AA48 skill_load
0x4AA4A skill_save
0x4AA4C skill_set_defaults
0x4AA4E void skill_set_tags(DWORD* tags, DWORD num)
0x4AA50 void skill_get_tags(DWORD* tags, DWORD num)
0x4AA52 DWORD skill_is_tagged(DWORD skill)
0x4AA55 DWORD skill_level(GameObject* critter, DWORD statID)
0x4AA65 skill_base
0x4AA68 skill_points
0x4AA6B skill_inc_point
0x4AA7F DWORD skill_inc_point_force(GameObject* critter, DWORD skill)
0x4AA87 skillLevelCost
0x4AA8C skill_dec_point
0x4AAA3 DWORD skill_dec_point_force(GameObject* critter, DWORD skill)
0x4AAAA skill_result
0x4AAB3 skill_contest
0x4AAB9 skill_name
0x4AABC skill_description
0x4AABE skill_attribute
0x4AAC0 skill_pic
0x4AAC2 show_skill_use_messages
0x4AAD0 skill_use
0x4ABBE skill_check_stealing
0x4ABDE skill_game_difficulty
0x4ABE4 skill_use_slot_available
0x4ABEB skill_use_slot_add
0x4ABF2 skill_use_slot_clear
0x4ABF3 skill_use_slot_save
0x4ABF5 skill_use_slot_load
0x4ABF7 skillGetPartyMemberString
0x4ABFD skilldex_select
0x4AC05 skilldex_start
0x4AC67 skilldex_end
0x4AC6F defaultMalloc_2
0x4AC6F defaultRealloc_2
0x4AC70 defaultFree_2
0x4AC70 soundRegisterAlloc
0x4AC71 soundFileSize
0x4AC75 soundTellData
0x4AC75 soundWriteData
0x4AC76 soundOpenData
0x4AC76 soundReadData
0x4AC77 soundCloseData
0x4AC77 soundSeekData
0x4AC78 soundGetDefaultFileIO
0x4AC79 soundError
0x4AC7B refreshSoundBuffers
0x4ACC5 soundInit
0x4AD04 soundClose
0x4AD0F soundAllocate
0x4AD2B soundSetBuffers
0x4AD30 preloadBuffers
0x4AD49 soundLoad
0x4AD50 soundRewind
0x4AD5C addSoundData
0x4AD6C soundSetData
0x4AD73 soundPlay
0x4AD82 soundStop
0x4AD8D soundDelete
0x4AD94 numSoundsPlaying
0x4AD94 soundContinue
0x4ADA8 soundPlaying
0x4ADAC soundDone
0x4ADB0 soundFading
0x4ADB4 soundPaused
0x4ADB8 soundFlags
0x4ADBC soundType
0x4ADC6 soundSetUserData
0x4ADCA soundUserData
0x4ADCE soundSetNameMangler
0x4ADD0 soundLoop
0x4ADD6 soundVolumeHMItoDirectSound
0x4ADE0 soundVolume
0x4ADE8 soundGetVolume
0x4ADF6 soundPanLocation
0x4ADFE soundPitch
0x4ADFF soundSetCallback
0x4AE02 soundSetChannel
0x4AE09 soundSetDefaultChannel
0x4AE0B soundSetReadLimit
0x4AE0E soundPause
0x4AE1F soundUnpause
0x4AE2F soundSetFileIO
0x4AE37 soundMgrDelete
0x4AE49 soundSetHardwareSettings
0x4AE4A soundSetLibPath
0x4AE4B detectSoundDevice
0x4AE4C soundTimerInit
0x4AE4D soundGetDriver
0x4AE4E setSoundDevice
0x4AE4F soundStageLoop
0x4AE57 soundSetMasterVolume
0x4AE5E registerTimedEvent
0x4AE61 removeTimedEvent
0x4AE63 soundGetPosition
0x4AE6C soundSetPosition
0x4AE7E soundSetMinReadBuffer
0x4AE83 removeFadeSound
0x4AE88 soundRemoveFadingSound
0x4AE8B fadeSounds
0x4AE98 internalSoundFade
0x4AEB0 soundFade
0x4AEB1 soundFadePause
0x4AEB2 soundMgrInsert
0x4AEB5 soundFlushAllSounds
0x4AEB7 soundMgrClose
0x4AEBC soundUpdate_
0x4AEBE soundUpdate
0x4AEC0 soundSetDefaultFileIO
0x4AEC6 soundPauseAll
0x4AECA soundPauseFadeAll
0x4AED0 soundUnpauseAll
0x4AED2 soundSetDeleteCallback
0x4AED7 stat_init
0x4AEEC stat_reset
0x4AEEE stat_exit
0x4AEEF stat_load
0x4AEF2 stat_save
0x4AEF4 DWORD stat_level(GameObject* critter, DWORD statId)
0x4AF3E DWORD stat_get_base(GameObject* critter, DWORD statID)
0x4AF40 DWORD stat_get_base_direct(GameObject* critter, DWORD statID)
0x4AF47 DWORD stat_get_bonus(GameObject* critter, DWORD statID)
0x4AF4B stat_set_base
0x4AF5D inc_stat
0x4AF60 dec_stat
0x4AF63 DWORD stat_set_bonus(GameObject* critter, DWORD statID, DWORD amount)
0x4AF6C stat_set_defaults
0x4AF6F stat_recalc_derived
0x4AF85 stat_name
0x4AF89 stat_description
0x4AF8D stat_level_description
0x4AF8F stat_pc_get
0x4AF91 stat_pc_set
0x4AF98 stat_pc_set_defaults
0x4AF9A stat_pc_min_exp
0x4AF9F stat_pc_name
0x4AFA1 stat_pc_description
0x4AFA3 stat_picture
0x4AFA7 stat_result
0x4AFAA void stat_pc_add_experience(DWORD amount)
0x4AFAB statPCAddExperienceCheckPMs
0x4AFC3 statPcResetExperience
0x4AFD1 strParseValue
0x4AFD8 strParseStringN
0x4AFE0 strParseStrFromList
0x4AFED strParseStrFromFunc
0x4AFF7 strParseStrSepVal
0x4B005 strParseStrAndSepVal
0x4B013 text_object_init
0x4B021 text_object_reset
0x4B028 text_object_exit
0x4B02A text_object_disable
0x4B02B text_object_enable
0x4B02B text_object_is_enabled
0x4B02C text_object_set_base_delay
0x4B030 text_object_get_base_delay
0x4B031 text_object_set_line_delay
0x4B035 text_object_get_line_delay
0x4B036 DWORD text_object_create(GameObject* object, char* text, DWORD font, DWORD colorText, DWORD colorOutline, RECT* rect)
0x4B06E text_object_render
0x4B07F text_object_bk
0x4B07F text_object_count
0x4B095 text_object_get_offset
0x4B0C0 text_object_remove
0x4B0C4 tile_init
0x4B11E tile_set_border
0x4B12A tile_disable_refresh
0x4B12A tile_refresh_enabled
0x4B12B tile_enable_refresh
0x4B12C void tile_refresh_rect(RECT* boundRect, DWORD elevation)
0x4B12D void tile_refresh_display()
0x4B12F tile_set_center
0x4B155 refresh_mapper
0x4B15E refresh_game
0x4B163 tile_toggle_roof
0x4B166 tile_roof_visible
0x4B167 DWORD tile_coord(DWORD tile, DWORD* outX, DWORD* outY)
0x4B175 tile_num
0x4B185 DWORD tile_dist(DWORD scrTile, DWORD dstTile)
0x4B199 tile_in_front_of
0x4B1A0 tile_to_right_of
0x4B1A6 DWORD tile_num_in_direction(DWORD tile, DWORD rotation, DWORD distance)
0x4B1AB DWORD tile_dir(DWORD scrTile, DWORD dstTile)
0x4B1B8 tile_num_beyond
0x4B1D2 DWORD tile_on_edge(DWORD tile)
0x4B1D8 tile_disable_scroll_blocking
0x4B1D8 tile_enable_scroll_blocking
0x4B1D9 tile_get_scroll_blocking
0x4B1DA tile_disable_scroll_limiting
0x4B1DA tile_enable_scroll_limiting
0x4B1DB tile_get_scroll_limiting
0x4B1DC DWORD square_coord(DWORD square, DWORD* outX, DWORD* outY)
0x4B1E6 square_coord_roof
0x4B1F0 square_num
0x4B1F4 square_num_roof
0x4B1F9 square_xy
0x4B203 square_xy_roof
0x4B20E square_render_roof
0x4B22D roof_fill_on
0x4B23D tile_fill_roof
0x4B24E roof_draw
0x4B294 square_render_floor
0x4B2B1 square_roof_intersect
0x4B2C7 squares_in_rect
0x4B2E6 grid_toggle
0x4B2E7 grid_on
0x4B2E8 grid_off
0x4B2E9 get_grid_flag
0x4B2E9 grid_render
0x4B2EF grid_draw
0x4B2F4 draw_grid
0x4B30C floor_draw
0x4B372 tile_make_line
0x4B392 tile_scroll_to
0x4B39F trait_init
0x4B3AD trait_reset
0x4B3AF trait_exit
0x4B3B0 trait_load
0x4B3B2 trait_save
0x4B3B4 trait_set
0x4B3B5 trait_get
0x4B3B6 trait_name
0x4B3B8 trait_description
0x4B3BA trait_pic
0x4B3BC DWORD trait_level(DWORD traitID)
0x4B3C7 trait_adjust_stat
0x4B40F trait_adjust_skill
0x4B419 trap_data_fill
0x4B419 trap_init
0x4B41D trap_check_individual
0x4B424 trap_check_heap
0x4B42A trap_check_duplicate
0x4B43A trap_report
0x4B443 duplicate_report
0x4B44F heap_report
0x4B456 trap_check_bk
0x4B458 getverstr
0x4B45A deleteChar
0x4B45C insertChar
0x4B45F doCursor
0x4B478 textInputRegionDispatch
0x4B4C2 winUpdateBackgroundTextInputRegion
0x4B4D5 winSetupBackgroundTextInputRegion
0x4B4E9 winDoBackgroundTextInputRegion
0x4B515 winDeleteBackgroundTextInputRegion
0x4B51D win_add_text_input_region
0x4B53A windowSelectTextInputRegion
0x4B53D win_delete_all_text_input_regions
0x4B541 win_delete_text_input_region
0x4B54C win_set_text_input_delete_func
0x4B550 win_add_text_region
0x4B563 win_print_text_region
0x4B571 win_print_substr_region
0x4B57E win_update_text_region
0x4B586 win_delete_text_region
0x4B58A win_delete_all_update_regions
0x4B58E win_text_region_style
0x4B599 win_delete_widgets
0x4B5A0 widgetDoInput
0x4B5A2 win_center_str
0x4B5A6 showRegion
0x4B5BE draw_widgets
0x4B5C2 update_widgets
0x4B5C4 win_register_update
0x4B5D0 win_delete_update_region
0x4B5D5 win_do_updateregions
0x4B5D7 freeStatusBar
0x4B5DE initWidgets
0x4B5E1 widgetsClose
0x4B5E7 drawStatusBar
0x4B5F5 real_win_set_status_bar
0x4B5F8 real_win_update_status_bar
0x4B5FD real_win_increment_status_bar
0x4B602 real_win_add_status_bar
0x4B60C real_win_get_status_info
0x4B610 real_win_modify_status_info
0x4B612 windowGetFont
0x4B612 windowSetFont
0x4B613 windowResetTextAttributes
0x4B616 windowGetTextFlags
0x4B616 windowSetTextFlags
0x4B617 windowGetTextColor
0x4B619 windowGetHighlightColor
0x4B61B windowSetTextColor
0x4B620 windowSetHighlightColor
0x4B625 windowNumLines
0x4B62E checkRegion
0x4B685 windowCheckRegion
0x4B69B windowRefreshRegions
0x4B6A5 checkAllRegions
0x4B6C4 windowAddInputFunc
0x4B6CE doRegionRightFunc
0x4B6D6 doRegionFunc
0x4B6DE windowActivateRegion
0x4B6ED getInput
0x4B6F6 doButtonOn
0x4B702 doButtonOff
0x4B703 doButtonPress
0x4B703 doButtonRelease
0x4B704 doRightButtonPress
0x4B710 doRightButtonRelease
0x4B711 setButtonGFX
0x4B75F redrawButton
0x4B761 windowHide
0x4B764 windowShow
0x4B768 windowDraw
0x4B76B windowDrawRect
0x4B76F windowDrawRectID
0x4B773 DWORD windowWidth()
0x4B775 windowHeight
0x4B777 windowSX
0x4B77A windowSY
0x4B77D pointInWindow
0x4B782 windowGetRect
0x4B785 windowGetGNWID
0x4B785 windowGetID
0x4B787 windowGetSpecificGNWID
0x4B78A deleteWindow
0x4B7AC resizeWindow
0x4B7E7 scaleWindow
0x4B7F3 DWORD createWindow(char* winName, DWORD x, DWORD y, DWORD width, DWORD height, DWORD color, DWORD flags)
0x4B80A windowOutput
0x4B814 windowGotoXY
0x4B81C DWORD selectWindowID(DWORD sWinID)
0x4B821 selectWindow
0x4B82A windowGetDefined
0x4B82D windowGetBuffer
0x4B830 windowGetName
0x4B833 pushWindow
0x4B83D popWindow
0x4B841 windowPrintBuf
0x4B863 windowWordWrap
0x4B880 windowFreeWordList
0x4B885 DWORD windowWrapLineWithSpacing(DWORD winID, char* text, DWORD width, DWORD height, DWORD x, DWORD y, DWORD color, DWORD alignment, DWORD lineSpacing)
0x4B88F windowWrapLine
0x4B892 windowPrintRect
0x4B89B windowFormatMessage
0x4B8A1 windowFormatMessageColor
0x4B8A6 windowPrint
0x4B8AD windowPrintFont
0x4B8B1 displayInWindow
0x4B8C6 displayFile
0x4B8CA displayFileRaw
0x4B8CE windowDisplayWithPalette
0x4B8E0 windowDisplayRaw
0x4B8E5 windowDisplay
0x4B8EA windowDisplayScaled
0x4B8EF windowDisplayBuf
0x4B8F6 windowDisplayTransBuf
0x4B8FD windowDisplayBufScaled
0x4B904 windowGetXres
0x4B905 removeProgramReferences_3
0x4B905 windowGetYres
0x4B919 initWindow
0x4B945 windowSetWindowFuncs
0x4B947 windowClose
0x4B954 windowDeleteButton
0x4B97F windowEnableButton
0x4B98C windowGetButtonID
0x4B992 windowSetButtonFlag
0x4B99B windowRegisterButtonSoundFunc
0x4B99C windowAddButton
0x4B9DD windowAddButtonGfx
0x4B9F4 windowAddButtonMask
0x4B9FC windowAddButtonBuf
0x4BA11 windowAddButtonProc
0x4BA1B windowAddButtonRightProc
0x4BA23 windowAddButtonCfunc
0x4BA2B windowAddButtonRightCfunc
0x4BA34 windowAddButtonText
0x4BA36 windowAddButtonTextWithOffsets
0x4BA69 windowFill
0x4BA73 windowFillRect
0x4BA84 windowEndRegion
0x4BA8A windowRegionGetUserData
0x4BA91 windowRegionSetUserData
0x4BA98 windowCheckRegionExists
0x4BA9F windowStartRegion
0x4BAB6 windowAddRegionPoint
0x4BAC5 windowAddRegionRect
0x4BACA windowAddRegionCfunc
0x4BAD3 windowAddRegionRightCfunc
0x4BADC windowAddRegionProc
0x4BAE8 windowAddRegionRightProc
0x4BAF2 windowSetRegionFlag
0x4BAFA windowAddRegionName
0x4BB0A windowDeleteRegion
0x4BB22 updateWindows
0x4BB23 windowMoviePlaying
0x4BB23 windowSetMovieFlags
0x4BB24 windowPlayMovie
0x4BB28 windowPlayMovieRect
0x4BB2C copyRect
0x4BB2C windowStopMovie
0x4BB3A drawScaled
0x4BB5D drawScaledBuf
0x4BB7D alphaBltBuf
0x4BB9E alphaBltBufRect
0x4BBFC fillBuf3x3
0x4BC5E windowEnableCheckRegion
0x4BC5F windowDisableCheckRegion
0x4BC60 windowAddTextRegion
0x4BC60 windowSetHoldTime
0x4BC66 windowPrintTextRegion
0x4BC67 windowDeleteTextRegion
0x4BC67 windowUpdateTextRegion
0x4BC68 windowTextRegionStyle
0x4BC69 windowAddTextInputRegion
0x4BC6A windowDeleteTextInputRegion
0x4BC6E windowSetTextInputDeleteFunc
0x4BC6F DWORD _word_wrap(char* text, BYTE maxWidth, DWORD* buf, unsigned char* count)
0x4BC89 wmSetFlags
0x4BC89 wmWorldMap_init
0x4BC98 wmGenDataInit
0x4BCBF wmGenDataReset
0x4BCE0 wmWorldMap_exit
0x4BCEF wmWorldMap_reset
0x4BCF2 wmWorldMap_save
0x4BD28 wmWorldMap_load
0x4BD67 wmWorldMapSaveTempData
0x4BD6B wmWorldMapLoadTempData
0x4BD6F wmConfigInit
0x4BD9F wmReadEncounterType
0x4BDB6 wmParseEncounterTableIndex
0x4BDCA wmParseEncounterSubEncStr
0x4BDE9 wmParseFindSubEncTypeMatch
0x4BDED wmFindEncBaseTypeMatch
0x4BDF3 wmReadEncBaseType
0x4BE14 wmParseEncBaseSubTypeStr
0x4BE2A wmEncBaseTypeSlotInit
0x4BE2C wmEncBaseSubTypeSlotInit
0x4BE32 wmEncounterSubEncSlotInit
0x4BE34 wmEncounterTypeSlotInit
0x4BE3B wmEncounterTableSlotInit
0x4BE3D wmTileSlotInit
0x4BE40 wmTerrainTypeSlotInit
0x4BE41 wmParseTerrainTypes
0x4BE59 wmParseTerrainRndMaps
0x4BE61 wmParseSubTileInfo
0x4BE6D wmParseFindEncounterTypeMatch
0x4BE73 wmParseFindTerrainTypeMatch
0x4BE7A wmParseEncounterItemType
0x4BE88 wmParseItemType
0x4BE98 wmParseConditional
0x4BEA2 wmParseSubConditional
0x4BEEB wmParseConditionalEval
0x4BEF1 wmAreaSlotInit
0x4BEF6 wmAreaInit
0x4BF3E wmParseFindMapIdxMatch
0x4BF44 wmEntranceSlotInit
0x4BF47 wmMapSlotInit
0x4BF4B wmMapInit
0x4BF95 wmRStartSlotInit
0x4BF96 wmMapMaxCount
0x4BF97 wmMapIdxToName
0x4BF9B wmMapMatchNameToIdx
0x4BFA4 wmMapIdxIsSaveable
0x4BFA6 wmMapIsSaveable
0x4BFA9 wmMapDeadBodiesAge
0x4BFAB wmMapCanRestHere
0x4BFAF wmMapPipboyActive
0x4BFB0 wmMapMarkVisited
0x4BFB6 wmMatchEntranceFromMap
0x4BFBE wmMatchEntranceElevFromMap
0x4BFC7 wmMatchAreaFromMap
0x4BFD5 wmMapMarkMapEntranceState
0x4BFE0 wmWorldMap
0x4BFE1 wmWorldMapFunc
0x4C056 wmCheckGameAreaEvents
0x4C05C wmInterfaceCenterOnParty
0x4C062 wmCheckGameEvents
0x4C063 wmRndEncounterOccurred
0x4C0BE wmPartyFindCurSubTile
0x4C0C0 wmFindCurSubTileFromPos
0x4C0CA wmFindCurTileFromPos
0x4C0CF wmRndEncounterPick
0x4C0FA wmSetupRandomEncounter
0x4C11F wmSetupCritterObjs
0x4C155 wmSetupRndNextTileNumInit
0x4C16F wmSetupRndNextTileNum
0x4C1A6 DWORD wmEvalTileNumForPlacement(DWORD tile)
0x4C1AC wmEvalConditional
0x4C1C0 wmEvalSubConditional
0x4C1C5 wmGameTimeIncrement
0x4C1CE wmGrabTileWalkMask
0x4C1D9 wmWorldPosInvalid
0x4C1E5 wmPartyInitWalking
0x4C1F9 void wmPartyWalkingStep()
0x4C219 wmInterfaceScrollTabsStart
0x4C227 wmInterfaceScrollTabsStop
0x4C229 wmInterfaceScrollTabsUpdate
0x4C232 wmInterfaceInit
0x4C2E4 wmInterfaceExit
0x4C31E wmInterfaceScroll
0x4C320 wmInterfaceScrollPixel
0x4C32E wmMouseBkProc
0x4C340 wmMarkSubTileOffsetVisited
0x4C342 wmMarkSubTileOffsetKnown
0x4C343 wmMarkSubTileOffsetVisitedFunc
0x4C355 wmMarkSubTileRadiusVisited
0x4C35A wmSubTileMarkRadiusVisited
0x4C374 wmSubTileGetVisitedState
0x4C37E wmTileGrabArt
0x4C383 wmInterfaceRefresh
0x4C3C9 wmInterfaceRefreshDate
0x4C3F0 wmMatchWorldPosToArea
0x4C3FA wmInterfaceDrawCircleOverlay
0x4C40A void wmInterfaceDrawSubTileRectFogged(unsigned char* surface, DWORD width, DWORD height, DWORD surfaceWidth)
0x4C40E wmInterfaceDrawSubTileList
0x4C41E wmDrawCursorStopped
0x4C449 wmCursorIsVisible
0x4C44D wmGetAreaName
0x4C450 wmGetAreaIdxName
0x4C453 wmAreaIsKnown
0x4C457 wmAreaVisitedState
0x4C45B wmMapIsKnown
0x4C462 wmAreaMarkVisited
0x4C463 wmAreaMarkVisitedState
0x4C46C wmAreaSetVisibleState
0x4C471 wmAreaSetWorldPos
0x4C47A wmGetPartyWorldPos
0x4C47C wmGetPartyCurArea
0x4C47D wmMarkAllSubTiles
0x4C485 wmTownMapFunc
0x4C485 wmTownMap
0x4C4A6 wmTownMapInit
0x4C4BD wmTownMapRefresh
0x4C4D0 wmTownMapExit
0x4C4DA void wmCarUseGas(DWORD gasAmount)
0x4C4E3 wmCarFillGas
0x4C4E7 wmCarGasAmount
0x4C4E7 wmCarIsOutOfGas
0x4C4E8 wmCarCurrentArea
0x4C4E9 wmCarGiveToParty
0x4C4F2 wmSfxMaxCount
0x4C4F5 wmSfxRollNextIdx
0x4C500 wmSfxIdxName
0x4C50F void wmRefreshInterfaceOverlay(DWORD isRedraw)
0x4C524 wmInterfaceRefreshCarFuel
0x4C52B wmRefreshTabs
0x4C55D wmMakeTabsLabelList
0x4C56C wmTabsCompareNames
0x4C571 wmFreeTabsLabelList
0x4C573 wmRefreshInterfaceDial
0x4C57B wmInterfaceDialSyncTime
0x4C580 wmAreaFindFirstValidMap
0x4C58C wmMapMusicStart
0x4C592 wmSetMapMusic
0x4C59A wmMatchAreaContainingMapIdx
0x4C5A1 wmTeleportToArea
0x4C5A8 mem_strdup
0x4C5AD mem_malloc
0x4C5AD my_malloc
0x4C5B5 void* mem_realloc(void* lpmem, DWORD msize)
0x4C5B5 my_realloc
0x4C5C2 void mem_free(void* mem)
0x4C5C2 my_free
0x4C5C5 mem_check
0x4C5CA mem_register_func
0x4C5CC mem_prep_block
0x4C5CE mem_check_block
0x4C5D3 db_init
0x4C5D5 db_total
0x4C5D6 DWORD db_dir_entry(char* fileName, DWORD* sizeOut)
0x4C5D6 db_exit
0x4C5DD db_read_to_buf
0x4C5EB DWORD db_fclose(DbFile* file)
0x4C5EC DbFile* db_fopen(char* path, char* mode)
0x4C5ED db_fprintf
0x4C5F1 db_vfprintf
0x4C5F2 db_fgetc
0x4C5F7 char* db_fgets(char* buf, DWORD max_count, DbFile* file)
0x4C5FE db_fputc
0x4C5FE db_fputs
0x4C5FF DWORD db_fread(void* buf, DWORD elsize, DWORD count, DbFile* file)
0x4C5FF db_ungetc
0x4C60B db_fwrite
0x4C60C DWORD db_fseek(DbFile* file, DWORD pos, DWORD origin)
0x4C60C db_ftell
0x4C60D db_feof
0x4C60D db_rewind
0x4C60E DWORD db_freadByte(DbFile* file, unsigned char* _out)
0x4C60F DWORD db_freadShort(DbFile* file, ushort* _out)
0x4C614 DWORD db_freadInt(DbFile* file, DWORD* _out)
0x4C61A DWORD db_fwriteByte(DbFile* file, DWORD value)
0x4C61C db_fwriteShort
0x4C621 DWORD db_fwriteInt(DbFile* file, DWORD value)
0x4C624 db_fwriteLong
0x4C62C db_fwriteFloat
0x4C62F DWORD db_freadByteCount(DbFile* file, unsigned char* dest, DWORD count)
0x4C633 DWORD db_freadShortCount(DbFile* file, ushort* dest, DWORD count)
0x4C63B DWORD db_freadIntCount(DbFile* file, DWORD* dest, DWORD count)
0x4C643 db_freadLongCount
0x4C646 DWORD db_fwriteByteCount(DbFile* file, char* cptr, DWORD count)
0x4C649 db_fwriteShortCount
0x4C64F db_fwriteIntCount
0x4C655 db_fwriteLongCount
0x4C65F db_fwriteFloatCount
0x4C662 DWORD db_get_file_list(char* searchMask, char*** fileList)
0x4C686 void db_free_file_list(char*** fileList, DWORD arg2)
0x4C68B db_filelength
0x4C68C db_register_callback
0x4C68E db_list_compare
0x4C690 GNW_rect_exit
0x4C692 rect_clip_list
0x4C6AA rect_clip
0x4C6BB rect_malloc
0x4C6C0 rect_free
0x4C6C1 rect_min_bound
0x4C6C6 rect_inside_bound
0x4C6CD GNW_debug_init
0x4C6CD debug_register_mono
0x4C6D1 debug_register_log
0x4C6D5 debug_register_screen
0x4C6D9 debug_register_env
0x4C6F1 debug_register_func
0x4C6F4 debug_printf
0x4C6F9 debug_puts
0x4C6FA debug_clear
0x4C700 debug_mono
0x4C702 debug_log
0x4C706 debug_screen
0x4C709 debug_putc
0x4C71A debug_scroll
0x4C71E debug_exit
0x4C720 colorOpen
0x4C721 colorRead
0x4C723 colorClose
0x4C724 colorInitIO
0x4C725 defaultMalloc_
0x4C726 defaultFree_
0x4C726 defaultRealloc_
0x4C727 colorMixAdd
0x4C727 colorSetNameMangler
0x4C729 colorMixMul
0x4C72B calculateColor
0x4C72C RGB2Color
0x4C72D Index2RGB
0x4C732 fadeSystemPalette
0x4C73D colorSetFadeBkFunc
0x4C73D setBlackSystemPalette
0x4C73E setSystemPalette
0x4C742 getSystemPalette
0x4C742 setSystemPaletteEntries
0x4C74D setSystemPaletteEntry
0x4C752 getSystemPaletteEntry
0x4C755 setIntensityTableColor
0x4C765 setIntensityTables
0x4C769 setMixTableColor
0x4C78C setMixTable
0x4C78E loadColorTable
0x4C7AB colorError
0x4C7AB setColorPalette
0x4C7AF setColorPaletteEntry
0x4C7B2 getColorPaletteEntry
0x4C7B4 buildBlendTable
0x4C7D9 rebuildColorBlendTables
0x4C7DC BlendColorTableData* getColorBlendTable(DWORD color)
0x4C7E2 void freeColorBlendTable(DWORD color)
0x4C7E5 colorRegisterAlloc
0x4C7E6 colorGamma
0x4C7F0 colorGetGamma
0x4C7F1 colorMappedColor
0x4C7F2 colorBuildColorTable
0x4C824 colorSetColorTable
0x4C826 redloop
0x4C83E greenloop
0x4C869 blueloop
0x4C880 maxfill
0x4C882 colorPushColorPalette
0x4C88E colorPopColorPalette
0x4C89C initColors
0x4C8A1 colorsClose
0x4C8A6 getColorPalette
0x4C8A7 GNW_input_init
0x4C8B4 GNW_input_exit
0x4C8B7 DWORD get_input()
0x4C8BC get_input_position
0x4C8BD void process_bk()
0x4C8C9 get_input_buffer
0x4C8D0 flush_input_buffer
0x4C8D1 GNW_do_bk_process
0x4C8D7 add_bk_process
0x4C8DC remove_bk_process
0x4C8DE enable_bk
0x4C8DF disable_bk
0x4C8DF pause_game
0x4C8E3 default_pause_window
0x4C8F3 register_pause
0x4C8F4 dump_screen
0x4C8FF buf_blit
0x4C904 default_screendump
0x4C935 register_screendump
0x4C937 get_time
0x4C937 pause_for_tocks
0x4C93B DWORD block_for_tocks(DWORD ticks)
0x4C93E elapsed_time
0x4C940 elapsed_tocks
0x4C941 get_bk_time
0x4C941 set_repeat_rate
0x4C942 get_repeat_rate
0x4C942 set_repeat_delay
0x4C943 void set_focus_func(void* func)
0x4C943 get_repeat_delay
0x4C944 get_focus_func
0x4C944 set_idle_func
0x4C945 get_idle_func
0x4C945 sub_4C945
0x4C949 GNW95_build_key_map
0x4C9BB GNW95_hook_input
0x4C9C2 GNW95_hook_keyboard
0x4C9C2 GNW95_input_init
0x4C9C4 GNW95_keyboard_hook
0x4C9CF GNW95_process_message
0x4C9DF GNW95_clear_time_stamps
0x4C9E1 GNW95_process_key
0x4C9EE GNW95_lost_focus
0x4C9F4 GNW_mouse_init
0x4C9FD GNW_mouse_exit
0x4CA01 mouse_colorize
0x4CA06 mouse_get_shape
0x4CA0A mouse_set_shape
0x4CA20 mouse_get_anim
0x4CA26 mouse_set_anim_frames
0x4CA2D mouse_anim
0x4CA34 void mouse_show()
0x4CA53 void mouse_hide()
0x4CA59 mouse_info
0x4CA69 mouse_simulate_input
0x4CA8C DWORD mouse_in(DWORD x, DWORD y, DWORD x_offs, DWORD y_offs)
0x4CA93 DWORD mouse_click_in(DWORD x, DWORD y, DWORD x_offs, DWORD y_offs)
0x4CA9A mouse_get_rect
0x4CA9D void mouse_get_position(DWORD* outX, DWORD* outY)
0x4CAA0 mouse_set_position
0x4CAA3 mouse_clip
0x4CAAA mouse_get_buttons
0x4CAAA mouse_hidden
0x4CAAB mouse_get_hotspot
0x4CAAC mouse_set_hotspot
0x4CAB5 mouse_get_raw_state
0x4CAB5 mouse_query_exist
0x4CAC1 mouse_disable
0x4CAC2 mouse_enable
0x4CAC3 mouse_is_disabled
0x4CAC3 mouse_set_sensitivity
0x4CAC6 mouse_get_sensitivity
0x4CAC7 mouse_elapsed_time
0x4CACB mouse_reset_elapsed_time
0x4CACD mmxEnable
0x4CAD0 init_mode_320_200
0x4CAD2 init_mode_320_240
0x4CAD4 init_mode_320_400
0x4CAD5 init_mode_640_480_16
0x4CAD6 init_mode_640_480
0x4CAD7 init_mode_640_480_hi
0x4CAD9 init_mode_640_400
0x4CADA init_mode_800_600
0x4CADB init_mode_1024_768
0x4CADD init_mode_1280_1024
0x4CADE GNW95_init_mode
0x4CADF zero_vid_mem
0x4CAE0 set_update_palette_func
0x4CAE1 GNW95_init_mode_ex
0x4CAE1 get_update_palette_func
0x4CAEC init_vesa_mode
0x4CAED GNW95_init_window
0x4CAF5 ffs
0x4CAF9 GNW95_init_DirectDraw
0x4CB1B GNW95_reset_mode
0x4CB21 GNW95_SetPaletteEntry
0x4CB31 GNW95_SetPaletteEntries
0x4CB45 GNW95_GetPaletteEntry
0x4CB56 GNW95_SetPalette
0x4CB68 GNW95_GetPalette
0x4CB85 GNW95_ShowRect
0x4CB91 palcpy
0x4CB93 GNW95_MouseShowRect16
0x4CBA4 GNW95_ShowRect16
0x4CBA8 trans_palcpy
0x4CBAB GNW95_MouseShowTransRect16
0x4CBBC GNW95_zero_vid_mem
0x4CBC9 GNW_kb_set
0x4CBD0 GNW_kb_restore
0x4CBD1 kb_wait
0x4CBDA kb_clear
0x4CBDE kb_getch
0x4CBE0 kb_disable
0x4CBE0 kb_enable
0x4CBE1 kb_is_disabled
0x4CBE2 kb_disable_numpad
0x4CBE2 kb_enable_numpad
0x4CBE3 kb_numpad_is_disabled
0x4CBE4 kb_disable_numlock
0x4CBE4 kb_enable_numlock
0x4CBE5 kb_numlock_is_disabled
0x4CBE7 kb_set_layout
0x4CBEE kb_get_layout
0x4CBEF kb_ascii_to_scan
0x4CBF5 kb_elapsed_time
0x4CBF5 kb_reset_elapsed_time
0x4CBF6 kb_simulate_key
0x4CC2F kb_next_ascii_English_US
0x4CC5B kb_next_ascii_French
0x4CC94 kb_next_ascii_German
0x4CCE1 kb_next_ascii_Italian
0x4CD0E kb_next_ascii_Spanish
0x4CDA4 kb_next_ascii
0x4CDC0 kb_map_ascii_English_US
0x4D040 kb_map_ascii_French
0x4D0C5 kb_map_ascii_German
0x4D175 kb_map_ascii_Italian
0x4D1E2 kb_map_ascii_Spanish
0x4D24F kb_init_lock_status
0x4D254 kb_toggle_caps
0x4D255 kb_toggle_num
0x4D257 kb_toggle_scroll
0x4D259 kb_buffer_put
0x4D25D kb_buffer_get
0x4D261 kb_buffer_peek
0x4D268 vcr_record
0x4D27E vcr_play
0x4D28F vcr_stop
0x4D291 vcr_status
0x4D293 vcr_update
0x4D2C6 vcr_create_buffer
0x4D2C9 vcr_destroy_buffer
0x4D2CD vcr_clear_buffer
0x4D2CF vcr_dump_buffer
0x4D2D7 vcr_load_buffer
0x4D2E0 vcr_save_record
0x4D2EE vcr_load_record
0x4D2FC draw_line
0x4D31A draw_box
0x4D322 draw_shaded_box
0x4D32B draw_circle
0x4D33F void cscale(unsigned char* src, DWORD sWidth, DWORD sHeight, DWORD sStride, unsigned char* dst, DWORD width, DWORD height, DWORD stride)
0x4D356 void trans_cscale(void* fromBuff, DWORD width, DWORD height, DWORD fromPitch, void* toBuff, DWORD toWidth, DWORD toHeight, DWORD toPitch)
0x4D36D buf_to_buf
0x4D370 trans_buf_to_buf
0x4D373 mask_buf_to_buf
0x4D37A mask_trans_buf_to_buf
0x4D382 rev_trans_buf_to_buf
0x4D387 buf_fill
0x4D38E buf_texture
0x4D3A4 lighten_buf
0x4D3A8 swap_color_buf
0x4D3AE buf_outline
0x4D3BB bytes_init
0x4D3BE ByteReaderFill
0x4D3C3 bits_init
0x4D3C7 init_pack_tables
0x4D4AD untransform_subband0
0x4D4D1 untransform_subband
0x4D4E8 untransform_all
0x4D4F5 AudioDecoder_fill
0x4D4FA AudioDecoder_Read
0x4D504 AudioDecoder_Close
0x4D50A Create_AudioDecoder
0x4D555 GNW_text_init
0x4D55C GNW_text_exit
0x4D55F load_font
0x4D578 text_add_manager
0x4D57F text_remove_manager
0x4D58A GNW_text_font
0x4D58D DWORD text_font(DWORD fontNum)
0x4D58D text_curr
0x4D595 text_font_exists
0x4D59B GNW_text_to_buf
0x4D5B5 GNW_text_height
0x4D5B6 GNW_text_width
0x4D5BA GNW_text_char_width
0x4D5BB GNW_text_mono_width
0x4D5BD GNW_text_spacing
0x4D5BE GNW_text_size
0x4D5BF GNW_text_max
0x4D5C3 win_init
0x4D5FB win_reinit
0x4D616 win_active
0x4D616 win_exit
0x4D623 DWORD win_add(DWORD x, DWORD y, DWORD width, DWORD height, DWORD bgColorIndex, DWORD flags)
0x4D646 void win_delete(DWORD winRef)
0x4D650 win_free
0x4D655 win_buffering
0x4D656 win_border
0x4D669 win_no_texture
0x4D670 win_texture
0x4D681 win_set_bk_color
0x4D684 void win_print(DWORD winID, char* text, DWORD textWidth, DWORD xPos, DWORD yPos, DWORD colorFlags)
0x4D69D win_text
0x4D6B2 win_line
0x4D6B8 win_box
0x4D6C1 win_shaded_box
0x4D6CC win_fill
0x4D6DA void win_show(DWORD winRef)
0x4D6E6 void win_hide(DWORD winRef)
0x4D6EA win_move
0x4D6F5 void win_draw(DWORD winRef)
0x4D6F8 void win_draw_rect(DWORD winRef, RECT* rect)
0x4D6FD void GNW_win_refresh(Window* win, RECT* rect, DWORD* buffer)
0x4D759 win_refresh_all
0x4D75B void win_clip(Window* window, RectList** rects, void* buffer)
0x4D765 win_drag
0x4D77F win_get_mouse_buf
0x4D781 refresh_all
0x4D788 Window* GNW_find(DWORD winRef)
0x4D78B unsigned char* win_get_buf(DWORD winRef)
0x4D78C DWORD win_get_top_win(DWORD x, DWORD y)
0x4D791 win_width
0x4D793 win_height
0x4D795 win_get_rect
0x4D797 win_check_all_buttons
0x4D79D GNW_find_button
0x4D7A3 GNW_check_menu_bars
0x4D7AC load_texture
0x4D80D win_set_minimized_title
0x4D814 win_set_trans_b2b
0x4D817 colorOpen_
0x4D81E colorClose_
0x4D81E colorRead_
0x4D820 GNWSystemError
0x4D826 win_register_button
0x4D830 win_register_text_button
0x4D867 win_register_button_disable
0x4D86A win_register_button_image
0x4D875 win_register_button_func
0x4D879 win_register_right_button
0x4D87F win_register_button_sound_func
0x4D882 win_register_button_mask
0x4D885 button_create
0x4D89E win_button_down
0x4D8A1 GNW_check_buttons
0x4D921 button_under_mouse
0x4D927 win_button_winID
0x4D92B win_delete_button
0x4D92B win_last_button_winID
0x4D937 GNW_delete_button
0x4D943 win_delete_button_win
0x4D945 button_new_id
0x4D947 win_enable_button
0x4D94D win_disable_button
0x4D955 win_set_button_rest_state
0x4D962 win_group_check_buttons
0x4D96E win_group_radio_buttons
0x4D974 button_check_group
0x4D980 button_draw
0x4D9A5 GNW_button_refresh
0x4D9AA win_button_press_and_release
0x4D9B9 default_malloc
0x4D9B9 default_realloc
0x4D9BA assoc_init
0x4D9BA default_free
0x4D9C0 assoc_resize
0x4D9C4 assoc_free
0x4D9CC assoc_find
0x4D9D5 assoc_search
0x4D9D8 assoc_insert
0x4D9EE assoc_delete
0x4D9F8 assoc_copy
0x4D9FE assoc_find_first
0x4DA09 assoc_read_long
0x4DA0F assoc_read_assoc_array
0x4DA15 assoc_load
0x4DA2E assoc_write_long
0x4DA36 assoc_write_assoc_array
0x4DA3A assoc_save
0x4DA49 assoc_register_mem
0x4DA4C strtod
0x4DA6C win_list_select
0x4DA70 win_list_select_at
0x4DB47 win_get_str
0x4DB69 win_output
0x4DB92 win_yes_no
0x4DBA9 win_msg
0x4DBBC win_pull_down
0x4DBC3 create_pull_down
0x4DBD0 process_pull_down
0x4DC30 win_debug
0x4DC65 win_debug_delete
0x4DC67 win_register_menu_bar
0x4DC76 win_register_menu_pulldown
0x4DC8D win_delete_menu_bar
0x4DC93 GNW_process_menu
0x4DC9F find_first_letter
0x4DCA3 win_width_needed
0x4DCA5 win_input_str
0x4DCD6 win_get_num_i
0x4DD03 calc_max_field_chars_wcursor
0x4DD0A get_num_i
0x4DD3E GNW_intr_init
0x4DD49 win_timed_msg_defaults
0x4DD4A GNW_intr_exit
0x4DD4C win_timed_msg
0x4DD66 tm_watch_msgs
0x4DD6C tm_kill_msg
0x4DD74 tm_kill_out_of_order
0x4DD82 tm_click_response
0x4DD87 tm_index_active
0x4DD8B gz_open
0x4DDB8 gzopen
0x4DDB9 gzdopen
0x4DDBC gzsetparams
0x4DDC3 get_byte
0x4DDCB check_header
0x4DDDD destroy
0x4DDE8 gzread
0x4DE08 gzgetc
0x4DE0A gzgets
0x4DE10 gzwrite
0x4DE18 gzprintf
0x4DE1F gzputc
0x4DE22 gzputs
0x4DE24 do_flush
0x4DE31 gzflush
0x4DE33 gzseek
0x4DE48 gzrewind
0x4DE4E gztell
0x4DE4F gzeof
0x4DE50 putLong
0x4DE53 getLong
0x4DE57 gzclose
0x4DE5E gzerror
0x4DE70 WinMain
0x4DE7F InitClass
0x4DE86 InitInstance
0x4DE8D LoadDirectX
0x4DE98 UnloadDirectX
0x4DE9F SignalHandler
0x4DE9F WindowProc
0x4DEC6 pow_ri
0x4DEC9 pow
0x4DECC atan
0x4DECD atan2
0x4DECE stricmp
0x4DED3 xremove
0x4DED3 xrename
0x4DED4 xtmpfile
0x4DED6 xfclose
0x4DED6 xtmpnam
0x4DEDD xfflush
0x4DEE2 DbFile* xfopen(char* fileName, char* flags)
0x4DEFE xfreopen
0x4DF04 xsetbuf
0x4DF0A xsetvbuf
0x4DF11 xfprintf
0x4DF16 xfscanf
0x4DF1A xvfprintf
0x4DF22 xfgetc
0x4DF28 xfgets
0x4DF32 xfputc
0x4DF38 xfputs
0x4DF3F xungetc
0x4DF44 xfread
0x4DF4E xfwrite
0x4DF58 xfgetpos
0x4DF5D DWORD xfseek(DbFile* file, DWORD fOffset, DWORD origin)
0x4DF63 xfsetpos
0x4DF69 xftell
0x4DF6E xrewind
0x4DF73 xclearerr
0x4DF78 xfeof
0x4DF7D xferror
0x4DF82 xfilelength
0x4DF87 xsetpath
0x4DF8F xenumpath
0x4DF93 xaddpath
0x4DFAB xremovepath
0x4DFB3 xenumfiles
0x4DFF2 xbuild_filelist
0x4DFF4 xfree_filelist
0x4DFFA xmkdir
0x4E011 xrmdir
0x4E01F xclearpath
0x4E023 xpathexit
0x4E027 xlistenumfunc
0x4E02E assert
0x4E030 Full_at_exit_rtn
0x4E034 atexit
0x4E038 getenv
0x4E03E fflush
0x4E040 dxinput_init
0x4E047 dxinput_exit
0x4E04E dxinput_acquire_mouse
0x4E051 dxinput_unacquire_mouse
0x4E053 dxinput_get_mouse_state
0x4E05A dxinput_acquire_keyboard
0x4E05D dxinput_unacquire_keyboard
0x4E05F dxinput_flush_keyboard_buffer
0x4E065 dxinput_read_keyboard_buffer
0x4E070 dxinput_mouse_init
0x4E078 dxinput_mouse_exit
0x4E07B dxinput_keyboard_init
0x4E087 dxinput_keyboard_exit
0x4E08A mmxTest
0x4E08E mmxSrcCopy
0x4E0DB srcCopy
0x4E0ED transSrcCopy
0x4E103 fputs
0x4E119 Norm
0x4E122 _Scale
0x4E126 _Scale10V
0x4E179 crc32
0x4E179 get_crc_table
0x4E195 deflateInit
0x4E196 deflateInit2
0x4E1B8 deflateSetDictionary
0x4E1CA deflateReset
0x4E1D3 deflateParams
0x4E1E2 putShortMSB
0x4E1E5 flush_pending
0x4E1EC deflate
0x4E221 deflateEnd
0x4E22C deflateCopy
0x4E24A read_buf
0x4E251 lm_init
0x4E25E longest_match
0x4E27A fill_window
0x4E295 deflate_stored
0x4E2AC deflate_fast
0x4E2E2 deflate_slow
0x4E327 inflateReset
0x4E32C inflateEnd
0x4E331 inflateInit2
0x4E343 inflateInit
0x4E348 inflate
0x4E387 inflateSetDictionary
0x4E390 inflateSync
0x4E39D inflateSyncPoint
0x4E39F fdopen
0x4E3AF ftell
0x4E3B5 zError
0x4E3B5 zlibVersion
0x4E3B6 zcalloc
0x4E3B8 zcfree
0x4E3B9 DOSCmdLineInit
0x4E3BA DOSCmdLineCreate
0x4E3D3 DOSCmdLineDestroy
0x4E3D8 DOSCmdLineFatalError
0x4E3DE CtrlHandlerIsNeeded
0x4E3E2 StartCtrlHandler
0x4E3E5 KillCtrlHandler
0x4E3F1 signal
0x4E448 WinMainCRTStartup
0x4E45F exp
0x4E460 fdiv_main_routine
0x4E4D5 tmpfile
0x4E4E1 putbits
0x4E4E4 init_name
0x4E4E8 tmpnam
0x4E4F5 void* dbase_open(char* fileName)
0x4E527 void dbase_close(void* dbPtr)
0x4E530 dbase_findfirst
0x4E53A dbase_findnext
0x4E541 dbase_findclose
0x4E542 dfile_fclose
0x4E542 dfile_filelength
0x4E54E dfile_fflush
0x4E550 dfile_fopen
0x4E556 dfile_freopen
0x4E55D dfile_setbuf
0x4E561 dfile_setvbuf
0x4E563 dfile_fprintf
0x4E567 dfile_fscanf
0x4E56C dfile_vfprintf
0x4E570 dfile_fgetc
0x4E576 dfile_fgets
0x4E583 dfile_fputc
0x4E585 dfile_fputs
0x4E589 dfile_ungetc
0x4E58F dfile_fread
0x4E59F dfile_fwrite
0x4E5A3 dfile_fgetpos
0x4E5A7 dfile_fseek
0x4E5C4 dfile_fsetpos
0x4E5C8 dfile_ftell
0x4E5CB dfile_rewind
0x4E5CE dfile_clearerr
0x4E5D1 dfile_feof
0x4E5D4 dfile_ferror
0x4E5D7 dbase_find
0x4E5D7 dinfo_bsearch_compare
0x4E5D9 dfile_fopen_helper
0x4E5F9 dfile_fgetc_helper
0x4E607 dfile_read_comp_bytes
0x4E613 dfile_zungetc
0x4E614 setbuf
0x4E616 setvbuf
0x4E61D vfprintf
0x4E61E ungetc
0x4E627 fgetpos
0x4E629 fsetpos
0x4E629 strdup
0x4E62E getcwd
0x4E635 chdir
0x4E638 xsys_findfirst
0x4E63A xsys_findnext
0x4E63C xsys_findclose
0x4E63D pickup
0x4E63F _makepath
0x4E65D rmdir
0x4E660 exit
0x4E662 _exit
0x4E673 flushall
0x4E699 _CmpBigIn
0x4E69D _Rnd2In
0x4E6A3 _Bin2Strin
0x4E6B6 adler32
0x4E75A _tr_ini
0x4E761 init_block
0x4E769 pqdownheap
0x4E77A gen_bitlen
0x4E7A2 gen_codes
0x4E7A8 build_tree
0x4E7D1 scan_tree
0x4E7E0 send_tree
0x4E857 build_bl_tree
0x4E85E send_all_trees
0x4E894 _tr_stored_bloc
0x4E8A4 _tr_alig
0x4E8DA _tr_flush_bloc
0x4E903 _tr_tall
0x4E90D compress_block
0x4E96A set_data_type
0x4E971 bi_reverse
0x4E973 bi_flush
0x4E97D bi_windup
0x4E984 copy_block
0x4E993 inflate_blocks_reset
0x4E99A inflate_blocks_new
0x4E9A7 inflate_blocks
0x4EAB1 inflate_blocks_free
0x4EAB4 inflate_set_dictionary
0x4EAB7 inflate_blocks_sync_point
0x4EAD1 _fsopen
0x4EAD5 fopen
0x4EAD6 close_file
0x4EADD freopen
0x4EAFE calloc
0x4EB00 _control87
0x4EB09 _fpreset
0x4EB11 initConsoleHandles
0x4EB81 fclose
0x4EB98 getpid
0x4EB9E fpattern_isvalid
0x4EBAA fpattern_submatch
0x4EBCF fpattern_match
0x4EBD2 fpattern_matchn
0x4EBD3 file_putc
0x4EBDD _dosret0
0x4EBE4 is_directory
0x4EBED _opendir
0x4EBFA opendir
0x4EBFB readdir
0x4EC02 closedir
0x4EC07 _mbptov
0x4EC0B _mbvtop
0x4EC13 _mbgetcode
0x4EC1A _mbsnextc
0x4EC1F _mbsinc
0x4EC23 _mbsdec
0x4EC47 _do_nothing_
0x4EC94 inflate_codes_new
0x4EC9B inflate_codes
0x4ED2D inflate_codes_free
0x4ED50 huft_build
0x4EDB8 inflate_trees_bits
0x4EDC1 inflate_trees_dynamic
0x4EDD6 inflate_trees_fixed
0x4EDF2 inflate_flush
0x4EE0A open
0x4EE0D sopen
0x4EE28 isatty
0x4EE2C _do_nothing
0x4EE30 stackavail
0x4EE34 _set_matherr
0x4EE39 _matherr
0x4EE7C getprintspecs
0x4EE90 evalflags
0x4EE96 far_strlen
0x4EE98 far_other_strlen
0x4EE9B fmt4hex
0x4EEA0 FixedPoint_Format
0x4EEB0 float_format
0x4EEB0 formstring
0x4EEFF zupstr
0x4EF14 fcloseall
0x4EF1C nmalloc
0x4EF2B nfree
0x4EF46 inflate_fast
0x4EF94 _no_support_loaded
0x4EF97 ultoa
0x4EF9C ltoa
0x4EFCF _beginthread
0x4EFD0 _endthread
0x4EFD4 matherr
0x4EFD5 _heapenable
0x4EFD7 _heapshrink
0x4EFE3 _begin_thread_helpe
0x4EFFE memmove
0x4F002 mem_putc_
0x4F004 sprintf
0x4F008 memset
0x4F009 atoi
0x4F010 strpbrk
0x4F014 strncpy
0x4F017 strrchr
0x4F018 fread
0x4F038 filelength
0x4F042 fseek
0x4F051 remove
0x4F052 rename
0x4F053 byteswap
0x4F055 med3
0x4F05B void qsort(void* base, DWORD number, DWORD elSize, DWORD comp)
0x4F09E copypart
0x4F0A2 _splitpath
0x4F0AF strlwr
0x4F0B2 strspn
0x4F0B6 strcspn
0x4F0BB strcmp
0x4F0C7 utoa
0x4F0CC itoa
0x4F0CD fgets
0x4F0D5 fprintf
0x4F0D7 clock
0x4F0D7 toupper
0x4F0D8 _getdrive
0x4F0D9 _getdiskfree
0x4F0DA strupr
0x4F0DC strtok
0x4F0E6 tolower
0x4F0E7 strncmp
0x4F0EA cget_string
0x4F0EC uncget_string
0x4F0EC vsscanf
0x4F0EF sscanf
0x4F0F1 access
0x4F0F4 printf
0x4F0F6 strncat
0x4F0FA fwrite
0x4F118 mkdir
0x4F11B strerror
0x4F11D fgetc
0x4F134 fputc
0x4F141 rewind
0x4F142 mem_putc
0x4F143 vsprintf
0x4F145 strstr
0x4F150 _setjmp
0x4F154 longjmp
0x4F15D time
0x4F160 _localtime
0x4F165 localtime
0x4F166 nrealloc
0x4F16E strnicmp
0x4F173 initrandnext
0x4F174 rand
0x4F176 srand
0x4F177 bsearch
0x4F17D tell
0x4F181 lseek
0x4F185 write
0x4F1B0 read
0x4F1CB close
0x4F1DA unlink
0x4F1DC _mbsnccnt
0x4F1E0 _mbsnbcnt
0x4F1E3 _mbsninc
0x4F1E9 _mbscat
0x4F1EE _mbscpy
0x4F1F0 _mbsdup
0x4F1F4 _mbsncat
0x4F1FA _mbsnbcat
0x4F209 _mbsncpy
0x4F20B _mbsnbcpy
0x4F218 getclock
0x4F21A _dos_getdrive
0x4F21A get_clock_time
0x4F21E _dos_getdiskfree
0x4F225 cget
0x4F225 uncget
0x4F24A get_opt
0x4F259 scan_white
0x4F25D scan_char
0x4F266 scan_string
0x4F279 report_scan
0x4F27F makelist
0x4F283 scan_arb
0x4F292 scan_float
0x4F2C4 scan_int
0x4F2E3 radix_value__
0x4F2E5 cgetw
0x4F2E8 getche
0x4F2EA default_handler
0x4F2F0 mktime
0x4F30B tryOSTimeZone
0x4F31A tzset
0x4F31F parse_time
0x4F321 parse_offset
0x4F333 parse_rule
0x4F362 _gmtim
0x4F364 gmtime
0x4F369 calc_yday
0x4F377 check_order
0x4F3A7 time_less
0x4F3AA _nexpand
0x4F3AA _nmsize
0x4F3CE _EFG_Forma
0x4F3DC forcedecpt
0x4F3E8 do_getch
0x4F3F9 getch
0x4F400 putch
0x4F406 DoEFormat
0x4F406 _SetMaxPrec
0x4F411 DoFFormat
0x4F417 AdjField
0x4F41E _FtoS
0x4F44F log
0x4F450 log10
0x4F451 log2
0x4F452 floor
0x4F477 modf
0x4F478 frexp
0x4F480 MVE_memCallbacks
0x4F482 sub_4F482
0x4F485 sub_4F485
0x4F486 MVE_ioCallbacks
0x4F487 MVE_memIO
0x4F489 MVE_MemInit
0x4F48C MVE_MemFree
0x4F48F MVE_sndInit
0x4F490 sub_4F490
0x4F492 sub_4F492
0x4F494 MVE_sfSVGA
0x4F49F MVE_sfCallbacks
0x4F4A1 MVE_palCallbacks
0x4F4A2 sub_4F4A2
0x4F4A5 sub_4F4A5
0x4F4B2 sub_4F4B2
0x4F4B5 sub_4F4B5
0x4F4B6 sub_4F4B6
0x4F4B8 sub_4F4B8
0x4F4B9 MVE_rmCallbacks
0x4F4BA sub_4F4BA
0x4F4BB sub_4F4BB
0x4F4BD MVE_rmFrameCounts
0x4F4BF MVE_rmPrepMovie
0x4F4C9 ioReset
0x4F4D0 ioRead
0x4F4D4 MVE_MemAlloc
0x4F4DA ioNextRecord
0x4F4DD sub_4F4DD
0x4F4E2 MVE_rmHoldMovie
0x4F4E4 syncWait
0x4F4EA MVE_sndPause
0x4F4EC MVE_rmStepMovie
0x4F54F syncInit
0x4F554 syncReset
0x4F557 MVE_sndConfigure
0x4F56C MVE_syncSync
0x4F56F MVE_sndReset
0x4F572 MVE_sndSync
0x4F59B syncWaitLevel
0x4F5A0 CallsSndBuff_Loc
0x4F5B7 MVE_sndAdd
0x4F5CA MVE_sndResume
0x4F5CB nfConfig
0x4F5E6 sub_4F5E6
0x4F5EF sub_4F5EF
0x4F5F2 sub_4F5F2
0x4F5F4 sfShowFrame
0x4F608 do_nothing_
0x4F60C SetPalette_
0x4F60F palMakeSynthPalette
0x4F621 palLoadPalette
0x4F624 MVE_rmEndMovie
0x4F627 syncRelease
0x4F628 MVE_RunMovie
0x4F62F MVE_RunMovieContinue
0x4F635 MVE_ReleaseMem
0x4F637 ioRelease
0x4F638 MVE_sndRelease
0x4F639 nfRelease
0x4F63D MVE_strerror
0x4F648 MVE_frOpen
0x4F655 frLoad
0x4F661 frSave
0x4F66D MVE_frGet
0x4F693 MVE_frClose
0x4F697 MVE_sndDecompM16
0x4F69A MVE_sndDecompS16
0x4F69F nfHiColorDecomp
0x4F6C2 nfHiColorDecompChg
0x4F6E9 nfDecomp
0x4F70A nfDecompChg
0x4F731 nfPkConfig
0x4F735 nfPkDecomp
0x4F8DD nfPkDecompH
0x4F9F2 nfHPkDecomp
0x4FBE9 mve_ShowFrameField
0x4FC10 mve_ShowFrameFieldHi
0x4FCBC MVE_SetPalette
0x4FCC0 palLoadCompPalette
0x4FCC9 gfxMode
0x4FCCA gfxLoadCrtc
0x4FCD1 gfxGetCrtc
0x4FCD4 gfxVres
0x4FCE1 MVE_gfxWaitRetrace
0x4FCE3 MVE_gfxSetSplit
0x4FE11 CreateMutexA_
0x4FE11 WaitForSingleObject_
0x4FE12 CloseHandle_
0x4FE1A LoadLibraryA_

*globals:
0x41B560 displayMapList
0x43E95C intotal
0x43EA1C btncnt
0x43EA7C retvals
0x501A8C aTextSCuts
0x50281C fallout_config
0x503530 aTextSCutsS
0x50B01C aTextSCutsSS
0x50DBE8 aDialogS_msg
0x51071C curr_anim_set
0x510738 art
0x510898 use_language
0x5108A4 art_vault_guy_num
0x5108A8 art_vault_person_nums
0x51093C combat_turn_running
0x510940 combatNumTurns
0x510944 combat_state
0x510948 aiInfoList
0x51094C gcsd
0x510954 hit_location_penalty
0x510978 crit_succ_eff
0x5179B0 pc_crit_succ_eff
0x517F98 combat_end_due_to_load
0x51805C combat_obj
0x518060 num_caps
0x518064 cap
0x51833C name_critter
0x518438 critterClearObj
0x51850C disp_init
0x518510 disp_rect
0x518538 character_points
0x51866C endgame_subtitle_characters
0x5186B4 game_ui_disabled
0x5186C0 game_global_vars
0x5186C4 num_game_global_vars
0x5186CC game_user_wants_to_quit
0x5186D8 gdNumOptions
0x5186F4 fidgetFID
0x5186FC fidgetFp
0x518704 lipsFID
0x518710 gdialog_speech_playing
0x518714 dialogue_state
0x518718 dialogue_switch_mode
0x51873C gdBarterMod
0x518740 dialogueBackWindow
0x518744 dialogueWindow
0x518748 backgrndRects
0x5187D8 gDialogMusicVol
0x518848 dialog_target
0x51884C dialog_target_is_party
0x518850 dialogue_head
0x518C0C gmouse_current_cursor
0x518D1E gmouse_3d_action_nums
0x518D38 gmouse_3d_current_mode
0x518D94 outlined_object
0x518DA0 movie_list
0x518E30 gsound_initialized
0x518E40 gsound_background_fade
0x518E54 gsound_speech_tag
0x518E78 sound_music_path1
0x518E7C sound_music_path2
0x518E84 master_volume
0x518E88 background_volume
0x518E8C speech_volume
0x518E90 sndfx_volume
0x518F10 intfaceEnabled
0x518F28 optionsButtonUpKey
0x518F2C optionsButtonDownKey
0x518F78 itemCurrentItem
0x518F7C itemButtonRect
0x518FA0 endWindowRect
0x518FD4 movePointRect
0x519024 interfaceWindow
0x519058 inven_dude
0x51905C inven_pid
0x519068 iscr_data
0x5190E0 dropped_explosive
0x5190E4 inven_scroll_up_bid
0x5190E8 inven_scroll_dn_bid
0x5191CC drugInfoList
0x519238 name_item
0x51923C ambient_light
0x519248 lips_draw_head
0x5193B8 slot_cursor
0x5193BC quick_done
0x5193CC patches
0x5194C4 loadingGame
0x5194F0 main_window
0x5194F4 main_window_buf
0x5194FC button_up_data
0x519500 button_down_data
0x519540 map_scroll_refresh
0x519558 mapEntranceElevation
0x51955C mapEntranceTileNum
0x51956C map_global_vars
0x519574 num_map_global_vars
0x519578 map_elevation
0x519594 freePtr
0x5195B8 GNWWin
0x519640 preload_list_index
0x519798 objItemOutlineState
0x519D9C partyMemberMaxCount
0x519DA0 partyMemberPidList
0x519DA8 partyMemberList
0x519DAC partyMemberCount
0x519DB8 partyMemberAIOptions
0x519DBC partyMemberLevelUpInfoList
0x519DCC perk_data
0x51C120 perkLevelDataList
0x51C128 quests
0x51C12C quest_count
0x51C290 protoLists
0x51C370 pc_proto
0x51C710 script_path_base
0x51C714 script_engine_running
0x51C720 fallout_game_time
0x51C758 procTableStrs
0x51C7C8 scriptListInfo
0x51C7CC maxScriptNum
0x51C7D4 cur_id
0x51D118 skill_data
0x51D430 gIsSteal
0x51D480 fadeEventHandle
0x51D53C stat_data
0x51D944 text_object_index
0x51D954 scroll_blocking_on
0x51D958 scroll_limiting_on
0x51D964 tile_refresh
0x51D968 refresh_enabled
0x51DB84 trait_data
0x51DCB8 currentWindow
0x51DD80 lastWin
0x51DD90 wmYesNoStrs
0x51DDF0 wmMaxTileNum
0x51DDF4 wmNumHorizontalTiles
0x51DDF8 wmAreaInfoList
0x51DDFC wmMaxAreaNum
0x51DE10 wmMaxMapNum
0x51DE14 wmBkWin
0x51DE24 wmBkWinBuf
0x51DE2C wmWorldOffsetX
0x51DE30 wmWorldOffsetY
0x51DE38 wmInterfaceWasInitialized
0x51DEA0 wmLastRndTime
0x51DEEC read_callback
0x51DEF4 rectList
0x51DF04 debug_func
0x51DF34 cmap
0x51E234 idle_func
0x51E23C GNW95_repeat_rate
0x51E240 GNW95_repeat_delay
0x51E2AC last_buttons
0x51E2B4 GNW95_DDPrimarySurface
0x51E2B8 GNW95_DDRestoreSurface
0x51E2BC GNW95_DDPrimaryPalette
0x51E2EA kb_lock_flags
0x51E3B0 curr_font_num
0x51E3B8 text_to_buf
0x51E3BC text_height
0x51E3C0 text_width
0x51E3C4 text_char_width
0x51E3C8 text_mono_width
0x51E3CC text_spacing
0x51E3D4 text_max
0x51E3E0 GNW_win_init_flag
0x51E3FC screen_buffer
0x51E404 last_button_winID
0x51E434 GNW95_hwnd
0x51E444 GNW95_isActive
0x51E44C GNW95_hDDrawLib
0x530014 sad
0x54CC14 anim_set
0x56C7DC curr_anim_counter
0x56C970 language
0x56C9E4 art_name
0x56CAEC anon_alias
0x56CAF0 artCritterFidShouldRunData
0x56D2B0 main_ctd
0x56D37C list_total
0x56D388 combat_turn_obj
0x56D390 combat_list
0x56D394 list_com
0x56D39C combat_free_move
0x56D518 target_str
0x56D624 attack_str
0x56D744 name_color
0x56D748 title_font
0x56D74C name_font
0x56D750 title_color
0x56D75C pc_name
0x56D77C sneak_working
0x56D780 pc_kill_counts
0x56D7E0 pal
0x56DBFC display_string_buf
0x56FB40 max_disp
0x56FB48 disp_curr
0x56FB4C intface_full_width
0x56FB50 max
0x56FB54 disp_start
0x56FB58 lastTime
0x56FCA8 editor_message_file
0x56FCB0 name_sort_list
0x570514 optionsButtonUp1
0x570518 optionsButtonDown1
0x5705B0 folder_card_fid
0x5705B8 folder_card_title
0x5705BC folder_card_title2
0x5705CC folder_card_desc
0x57060C edit_win
0x5707A4 bckgnd
0x5707B4 last_level
0x5707D0 info_line
0x5707D8 frstc_draw1
0x57082C Educated
0x570854 Lifegiver
0x5708B0 Tag_
0x5708B4 Mutate_
0x5709C4 frame_time
0x5709D0 glblmode
0x5709EC card_old_fid1
0x570A29 free_perk
0x570AB8 endgame_voiceover_loaded
0x570BD0 endgame_subtitle_done
0x570BF0 endgame_window_buffer
0x58E93C gCurrentFont
0x58E948 master_db_handle
0x58E94C critter_db_handle
0x58E950 game_config
0x58E978 gconfig_file_name
0x58ECC0 optionRect
0x58F46C dialog_red_button_up_key
0x58F4A4 dialog_red_button_down_buf
0x58F4AC dialog_red_button_up_buf
0x58F4BC dialog_red_button_down_key
0x596C78 gmovie_played_list
0x596FC2 background_fname_requested
0x5970E0 bboxslot
0x5970F8 itemButtonItems
0x59D3FC optionsButtonUp
0x59D400 optionsButtonDown
0x59E78C currentProgram
0x59E7EC target_stack_offset
0x59E814 inventry_message_file
0x59E81C target_stack
0x59E844 stack_offset
0x59E86C stack
0x59E934 ptable
0x59E944 btable
0x59E948 target_curr_stack
0x59E954 i_worn
0x59E958 i_lhand
0x59E95C i_fid
0x59E960 pud
0x59E964 i_wid
0x59E968 i_rhand
0x59E96C curr_stack
0x59E970 i_wid_max_y
0x59E974 i_wid_max_x
0x59E978 target_pud
0x59E98C wd_obj
0x613D30 LSData
0x6142C4 lsgwin
0x614808 flptr
0x614838 main_death_voiceover_done
0x631D28 map_state
0x631D2C elevation
0x631D30 tile
0x631D34 rotation
0x631D50 display_buf
0x631D58 map_name
0x631D88 map_number
0x631E40 square
0x631E4C display_win
0x638E10 mve_win_rect
0x638E64 lastMovieH
0x638E68 lastMovieW
0x638E6C lastMovieX
0x638E70 lastMovieY
0x638E74 subtitleList
0x638EA0 subtitleH
0x639DA0 objectTable
0x6610A0 buf_size
0x6610B8 obj_dude
0x6610BC obj_seen_check
0x662445 obj_seen
0x663900 optnwin
0x663974 subtitles
0x6639D0 current_palette
0x663FD0 black_palette
0x6642D0 fade_steps
0x664338 pipmesg
0x664348 pipboy_message_file
0x664450 mouse_y
0x66445C holopages
0x6644C4 pip_win
0x6644F4 holodisk
0x6644F8 hot_line_count
0x664508 crnt_func
0x664514 cursor_line
0x664520 view_page
0x664524 bottom_line
0x664529 holo_flag
0x66452A stat_flag
0x6647AC proto_msg_files
0x6647FC proto_main_msg_file
0x6648C0 queue
0x668070 tag_skill
0x668140 skldxwin
0x668154 masterVol
0x66815C sampleRate
0x668164 deviceInit
0x6681AC curr_pc_stat
0x6681B0 Level_pc
0x6681B4 Experience_pc
0x6681C0 text_object_list
0x66B9C4 tile_mask
0x66BBD4 buf_rect_2
0x66BDE4 square_rect
0x66BDF8 tile_offy
0x66BDFC tile_offx
0x66BE08 squares
0x66BE14 buf_length_2
0x66BE18 tile_x
0x66BE1C tile_y
0x66BE30 buf_width_2
0x66BE34 tile_center_tile
0x66BE40 pc_trait
0x66BE44 pc_trait2
0x6727B0 sWindows
0x672E04 Meet_Frank_Horrigan
0x672E08 WorldMapCurrArea
0x672E0C world_xpos
0x672E10 world_ypos
0x672E14 world_subtile
0x672E1C In_WorldMap
0x672E20 target_xpos
0x672E24 target_ypos
0x672E48 wmEncounterIconShow
0x672E4C EncounterMapID
0x672E58 wmRndCursorFid
0x672E5C old_world_xpos
0x672E60 old_world_ypos
0x672E64 Move_on_Car
0x672E68 carCurrentArea
0x672E6C carGasAmount
0x672EFC wmViewportRightScrlLimit
0x672F00 wmViewportBottomtScrlLimit
0x672FB0 wmMsgFile
0x6A38D0 colorTable
0x6A38EF BlueColor
0x6A3A90 DarkGreenColor
0x6A3CB0 GreenColor
0x6A3DF1 DarkGreenGreyColor
0x6A59D8 DarkGreyColor
0x6A76BF LightGreyColor
0x6A82F3 PeanutButter
0x6A8B64 NearWhiteColor
0x6AA8D0 DarkRedColor
0x6AB472 DarkYellowColor
0x6AB4D0 RedColor
0x6AB4EF GoodColor
0x6AB61A LightRedColor
0x6AB718 DullPinkColor
0x6AB8BB YellowColor
0x6AB8CF WhiteColor
0x6AC780 bk_disabled
0x6AC788 bk_process_time
0x6AC790 mouse_is_hidden
0x6AC7A4 mouse_y_
0x6AC7A8 mouse_x_
0x6AC7B0 mouse_buttons
0x6AC7CC mouse_hoty
0x6AC7D0 mouse_hotx
0x6AC9F0 scr_size
0x6ACA18 scr_blit
0x6ADD90 window_index
0x6ADE58 window
0x6ADF24 num_windows
0x6ADF38 doing_refresh_all
0x6B24D0 paths
0x6B36A8 rm_FrameCount
0x6B3CFC mveBW
0x6B402F mveBH

*strings:
